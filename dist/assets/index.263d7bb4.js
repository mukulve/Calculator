const dx = function () {
  const r = document.createElement("link").relList;
  if (r && r.supports && r.supports("modulepreload")) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) n(i);
  new MutationObserver((i) => {
    for (const a of i)
      if (a.type === "childList")
        for (const s of a.addedNodes)
          s.tagName === "LINK" && s.rel === "modulepreload" && n(s);
  }).observe(document, { childList: !0, subtree: !0 });
  function t(i) {
    const a = {};
    return (
      i.integrity && (a.integrity = i.integrity),
      i.referrerpolicy && (a.referrerPolicy = i.referrerpolicy),
      i.crossorigin === "use-credentials"
        ? (a.credentials = "include")
        : i.crossorigin === "anonymous"
        ? (a.credentials = "omit")
        : (a.credentials = "same-origin"),
      a
    );
  }
  function n(i) {
    if (i.ep) return;
    i.ep = !0;
    const a = t(i);
    fetch(i.href, a);
  }
};
dx();
var On =
  typeof globalThis != "undefined"
    ? globalThis
    : typeof window != "undefined"
    ? window
    : typeof global != "undefined"
    ? global
    : typeof self != "undefined"
    ? self
    : {};
function Eh(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default")
    ? e.default
    : e;
}
var _i = { exports: {} },
  Fe = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Qa = Symbol.for("react.element"),
  hx = Symbol.for("react.portal"),
  gx = Symbol.for("react.fragment"),
  yx = Symbol.for("react.strict_mode"),
  xx = Symbol.for("react.profiler"),
  wx = Symbol.for("react.provider"),
  bx = Symbol.for("react.context"),
  Nx = Symbol.for("react.forward_ref"),
  Mx = Symbol.for("react.suspense"),
  Sx = Symbol.for("react.memo"),
  Ax = Symbol.for("react.lazy"),
  af = Symbol.iterator;
function Ex(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (af && e[af]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var Ch = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  Oh = Object.assign,
  Th = {};
function Vi(e, r, t) {
  (this.props = e),
    (this.context = r),
    (this.refs = Th),
    (this.updater = t || Ch);
}
Vi.prototype.isReactComponent = {};
Vi.prototype.setState = function (e, r) {
  if (typeof e != "object" && typeof e != "function" && e != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, e, r, "setState");
};
Vi.prototype.forceUpdate = function (e) {
  this.updater.enqueueForceUpdate(this, e, "forceUpdate");
};
function Dh() {}
Dh.prototype = Vi.prototype;
function Hl(e, r, t) {
  (this.props = e),
    (this.context = r),
    (this.refs = Th),
    (this.updater = t || Ch);
}
var Vl = (Hl.prototype = new Dh());
Vl.constructor = Hl;
Oh(Vl, Vi.prototype);
Vl.isPureReactComponent = !0;
var of = Array.isArray,
  _h = Object.prototype.hasOwnProperty,
  Gl = { current: null },
  Bh = { key: !0, ref: !0, __self: !0, __source: !0 };
function Ih(e, r, t) {
  var n,
    i = {},
    a = null,
    s = null;
  if (r != null)
    for (n in (r.ref !== void 0 && (s = r.ref),
    r.key !== void 0 && (a = "" + r.key),
    r))
      _h.call(r, n) && !Bh.hasOwnProperty(n) && (i[n] = r[n]);
  var f = arguments.length - 2;
  if (f === 1) i.children = t;
  else if (1 < f) {
    for (var l = Array(f), p = 0; p < f; p++) l[p] = arguments[p + 2];
    i.children = l;
  }
  if (e && e.defaultProps)
    for (n in ((f = e.defaultProps), f)) i[n] === void 0 && (i[n] = f[n]);
  return {
    $$typeof: Qa,
    type: e,
    key: a,
    ref: s,
    props: i,
    _owner: Gl.current,
  };
}
function Cx(e, r) {
  return {
    $$typeof: Qa,
    type: e.type,
    key: r,
    ref: e.ref,
    props: e.props,
    _owner: e._owner,
  };
}
function Wl(e) {
  return typeof e == "object" && e !== null && e.$$typeof === Qa;
}
function Ox(e) {
  var r = { "=": "=0", ":": "=2" };
  return (
    "$" +
    e.replace(/[=:]/g, function (t) {
      return r[t];
    })
  );
}
var sf = /\/+/g;
function ru(e, r) {
  return typeof e == "object" && e !== null && e.key != null
    ? Ox("" + e.key)
    : r.toString(36);
}
function Eo(e, r, t, n, i) {
  var a = typeof e;
  (a === "undefined" || a === "boolean") && (e = null);
  var s = !1;
  if (e === null) s = !0;
  else
    switch (a) {
      case "string":
      case "number":
        s = !0;
        break;
      case "object":
        switch (e.$$typeof) {
          case Qa:
          case hx:
            s = !0;
        }
    }
  if (s)
    return (
      (s = e),
      (i = i(s)),
      (e = n === "" ? "." + ru(s, 0) : n),
      of(i)
        ? ((t = ""),
          e != null && (t = e.replace(sf, "$&/") + "/"),
          Eo(i, r, t, "", function (p) {
            return p;
          }))
        : i != null &&
          (Wl(i) &&
            (i = Cx(
              i,
              t +
                (!i.key || (s && s.key === i.key)
                  ? ""
                  : ("" + i.key).replace(sf, "$&/") + "/") +
                e
            )),
          r.push(i)),
      1
    );
  if (((s = 0), (n = n === "" ? "." : n + ":"), of(e)))
    for (var f = 0; f < e.length; f++) {
      a = e[f];
      var l = n + ru(a, f);
      s += Eo(a, r, t, l, i);
    }
  else if (((l = Ex(e)), typeof l == "function"))
    for (e = l.call(e), f = 0; !(a = e.next()).done; )
      (a = a.value), (l = n + ru(a, f++)), (s += Eo(a, r, t, l, i));
  else if (a === "object")
    throw (
      ((r = String(e)),
      Error(
        "Objects are not valid as a React child (found: " +
          (r === "[object Object]"
            ? "object with keys {" + Object.keys(e).join(", ") + "}"
            : r) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return s;
}
function no(e, r, t) {
  if (e == null) return e;
  var n = [],
    i = 0;
  return (
    Eo(e, n, "", "", function (a) {
      return r.call(t, a, i++);
    }),
    n
  );
}
function Tx(e) {
  if (e._status === -1) {
    var r = e._result;
    (r = r()),
      r.then(
        function (t) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 1), (e._result = t));
        },
        function (t) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 2), (e._result = t));
        }
      ),
      e._status === -1 && ((e._status = 0), (e._result = r));
  }
  if (e._status === 1) return e._result.default;
  throw e._result;
}
var Fr = { current: null },
  Co = { transition: null },
  Dx = {
    ReactCurrentDispatcher: Fr,
    ReactCurrentBatchConfig: Co,
    ReactCurrentOwner: Gl,
  };
Fe.Children = {
  map: no,
  forEach: function (e, r, t) {
    no(
      e,
      function () {
        r.apply(this, arguments);
      },
      t
    );
  },
  count: function (e) {
    var r = 0;
    return (
      no(e, function () {
        r++;
      }),
      r
    );
  },
  toArray: function (e) {
    return (
      no(e, function (r) {
        return r;
      }) || []
    );
  },
  only: function (e) {
    if (!Wl(e))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return e;
  },
};
Fe.Component = Vi;
Fe.Fragment = gx;
Fe.Profiler = xx;
Fe.PureComponent = Hl;
Fe.StrictMode = yx;
Fe.Suspense = Mx;
Fe.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Dx;
Fe.cloneElement = function (e, r, t) {
  if (e == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        e +
        "."
    );
  var n = Oh({}, e.props),
    i = e.key,
    a = e.ref,
    s = e._owner;
  if (r != null) {
    if (
      (r.ref !== void 0 && ((a = r.ref), (s = Gl.current)),
      r.key !== void 0 && (i = "" + r.key),
      e.type && e.type.defaultProps)
    )
      var f = e.type.defaultProps;
    for (l in r)
      _h.call(r, l) &&
        !Bh.hasOwnProperty(l) &&
        (n[l] = r[l] === void 0 && f !== void 0 ? f[l] : r[l]);
  }
  var l = arguments.length - 2;
  if (l === 1) n.children = t;
  else if (1 < l) {
    f = Array(l);
    for (var p = 0; p < l; p++) f[p] = arguments[p + 2];
    n.children = f;
  }
  return { $$typeof: Qa, type: e.type, key: i, ref: a, props: n, _owner: s };
};
Fe.createContext = function (e) {
  return (
    (e = {
      $$typeof: bx,
      _currentValue: e,
      _currentValue2: e,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (e.Provider = { $$typeof: wx, _context: e }),
    (e.Consumer = e)
  );
};
Fe.createElement = Ih;
Fe.createFactory = function (e) {
  var r = Ih.bind(null, e);
  return (r.type = e), r;
};
Fe.createRef = function () {
  return { current: null };
};
Fe.forwardRef = function (e) {
  return { $$typeof: Nx, render: e };
};
Fe.isValidElement = Wl;
Fe.lazy = function (e) {
  return { $$typeof: Ax, _payload: { _status: -1, _result: e }, _init: Tx };
};
Fe.memo = function (e, r) {
  return { $$typeof: Sx, type: e, compare: r === void 0 ? null : r };
};
Fe.startTransition = function (e) {
  var r = Co.transition;
  Co.transition = {};
  try {
    e();
  } finally {
    Co.transition = r;
  }
};
Fe.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
Fe.useCallback = function (e, r) {
  return Fr.current.useCallback(e, r);
};
Fe.useContext = function (e) {
  return Fr.current.useContext(e);
};
Fe.useDebugValue = function () {};
Fe.useDeferredValue = function (e) {
  return Fr.current.useDeferredValue(e);
};
Fe.useEffect = function (e, r) {
  return Fr.current.useEffect(e, r);
};
Fe.useId = function () {
  return Fr.current.useId();
};
Fe.useImperativeHandle = function (e, r, t) {
  return Fr.current.useImperativeHandle(e, r, t);
};
Fe.useInsertionEffect = function (e, r) {
  return Fr.current.useInsertionEffect(e, r);
};
Fe.useLayoutEffect = function (e, r) {
  return Fr.current.useLayoutEffect(e, r);
};
Fe.useMemo = function (e, r) {
  return Fr.current.useMemo(e, r);
};
Fe.useReducer = function (e, r, t) {
  return Fr.current.useReducer(e, r, t);
};
Fe.useRef = function (e) {
  return Fr.current.useRef(e);
};
Fe.useState = function (e) {
  return Fr.current.useState(e);
};
Fe.useSyncExternalStore = function (e, r, t) {
  return Fr.current.useSyncExternalStore(e, r, t);
};
Fe.useTransition = function () {
  return Fr.current.useTransition();
};
Fe.version = "18.2.0";
_i.exports = Fe;
var _x = _i.exports,
  zu = {},
  $h = { exports: {} },
  tt = {},
  zh = { exports: {} },
  Rh = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (e) {
  function r(R, T) {
    var P = R.length;
    R.push(T);
    e: for (; 0 < P; ) {
      var W = (P - 1) >>> 1,
        J = R[W];
      if (0 < i(J, T)) (R[W] = T), (R[P] = J), (P = W);
      else break e;
    }
  }
  function t(R) {
    return R.length === 0 ? null : R[0];
  }
  function n(R) {
    if (R.length === 0) return null;
    var T = R[0],
      P = R.pop();
    if (P !== T) {
      R[0] = P;
      e: for (var W = 0, J = R.length, G = J >>> 1; W < G; ) {
        var Y = 2 * (W + 1) - 1,
          re = R[Y],
          K = Y + 1,
          ie = R[K];
        if (0 > i(re, P))
          K < J && 0 > i(ie, re)
            ? ((R[W] = ie), (R[K] = P), (W = K))
            : ((R[W] = re), (R[Y] = P), (W = Y));
        else if (K < J && 0 > i(ie, P)) (R[W] = ie), (R[K] = P), (W = K);
        else break e;
      }
    }
    return T;
  }
  function i(R, T) {
    var P = R.sortIndex - T.sortIndex;
    return P !== 0 ? P : R.id - T.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var a = performance;
    e.unstable_now = function () {
      return a.now();
    };
  } else {
    var s = Date,
      f = s.now();
    e.unstable_now = function () {
      return s.now() - f;
    };
  }
  var l = [],
    p = [],
    u = 1,
    o = null,
    c = 3,
    m = !1,
    v = !1,
    d = !1,
    N = typeof setTimeout == "function" ? setTimeout : null,
    g = typeof clearTimeout == "function" ? clearTimeout : null,
    w = typeof setImmediate != "undefined" ? setImmediate : null;
  typeof navigator != "undefined" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function h(R) {
    for (var T = t(p); T !== null; ) {
      if (T.callback === null) n(p);
      else if (T.startTime <= R)
        n(p), (T.sortIndex = T.expirationTime), r(l, T);
      else break;
      T = t(p);
    }
  }
  function x(R) {
    if (((d = !1), h(R), !v))
      if (t(l) !== null) (v = !0), D(b);
      else {
        var T = t(p);
        T !== null && B(x, T.startTime - R);
      }
  }
  function b(R, T) {
    (v = !1), d && ((d = !1), g(S), (S = -1)), (m = !0);
    var P = c;
    try {
      for (
        h(T), o = t(l);
        o !== null && (!(o.expirationTime > T) || (R && !_()));

      ) {
        var W = o.callback;
        if (typeof W == "function") {
          (o.callback = null), (c = o.priorityLevel);
          var J = W(o.expirationTime <= T);
          (T = e.unstable_now()),
            typeof J == "function" ? (o.callback = J) : o === t(l) && n(l),
            h(T);
        } else n(l);
        o = t(l);
      }
      if (o !== null) var G = !0;
      else {
        var Y = t(p);
        Y !== null && B(x, Y.startTime - T), (G = !1);
      }
      return G;
    } finally {
      (o = null), (c = P), (m = !1);
    }
  }
  var y = !1,
    A = null,
    S = -1,
    E = 5,
    M = -1;
  function _() {
    return !(e.unstable_now() - M < E);
  }
  function C() {
    if (A !== null) {
      var R = e.unstable_now();
      M = R;
      var T = !0;
      try {
        T = A(!0, R);
      } finally {
        T ? I() : ((y = !1), (A = null));
      }
    } else y = !1;
  }
  var I;
  if (typeof w == "function")
    I = function () {
      w(C);
    };
  else if (typeof MessageChannel != "undefined") {
    var L = new MessageChannel(),
      $ = L.port2;
    (L.port1.onmessage = C),
      (I = function () {
        $.postMessage(null);
      });
  } else
    I = function () {
      N(C, 0);
    };
  function D(R) {
    (A = R), y || ((y = !0), I());
  }
  function B(R, T) {
    S = N(function () {
      R(e.unstable_now());
    }, T);
  }
  (e.unstable_IdlePriority = 5),
    (e.unstable_ImmediatePriority = 1),
    (e.unstable_LowPriority = 4),
    (e.unstable_NormalPriority = 3),
    (e.unstable_Profiling = null),
    (e.unstable_UserBlockingPriority = 2),
    (e.unstable_cancelCallback = function (R) {
      R.callback = null;
    }),
    (e.unstable_continueExecution = function () {
      v || m || ((v = !0), D(b));
    }),
    (e.unstable_forceFrameRate = function (R) {
      0 > R || 125 < R
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (E = 0 < R ? Math.floor(1e3 / R) : 5);
    }),
    (e.unstable_getCurrentPriorityLevel = function () {
      return c;
    }),
    (e.unstable_getFirstCallbackNode = function () {
      return t(l);
    }),
    (e.unstable_next = function (R) {
      switch (c) {
        case 1:
        case 2:
        case 3:
          var T = 3;
          break;
        default:
          T = c;
      }
      var P = c;
      c = T;
      try {
        return R();
      } finally {
        c = P;
      }
    }),
    (e.unstable_pauseExecution = function () {}),
    (e.unstable_requestPaint = function () {}),
    (e.unstable_runWithPriority = function (R, T) {
      switch (R) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          R = 3;
      }
      var P = c;
      c = R;
      try {
        return T();
      } finally {
        c = P;
      }
    }),
    (e.unstable_scheduleCallback = function (R, T, P) {
      var W = e.unstable_now();
      switch (
        (typeof P == "object" && P !== null
          ? ((P = P.delay), (P = typeof P == "number" && 0 < P ? W + P : W))
          : (P = W),
        R)
      ) {
        case 1:
          var J = -1;
          break;
        case 2:
          J = 250;
          break;
        case 5:
          J = 1073741823;
          break;
        case 4:
          J = 1e4;
          break;
        default:
          J = 5e3;
      }
      return (
        (J = P + J),
        (R = {
          id: u++,
          callback: T,
          priorityLevel: R,
          startTime: P,
          expirationTime: J,
          sortIndex: -1,
        }),
        P > W
          ? ((R.sortIndex = P),
            r(p, R),
            t(l) === null &&
              R === t(p) &&
              (d ? (g(S), (S = -1)) : (d = !0), B(x, P - W)))
          : ((R.sortIndex = J), r(l, R), v || m || ((v = !0), D(b))),
        R
      );
    }),
    (e.unstable_shouldYield = _),
    (e.unstable_wrapCallback = function (R) {
      var T = c;
      return function () {
        var P = c;
        c = T;
        try {
          return R.apply(this, arguments);
        } finally {
          c = P;
        }
      };
    });
})(Rh);
zh.exports = Rh;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Fh = _i.exports,
  et = zh.exports;
function le(e) {
  for (
    var r = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, t = 1;
    t < arguments.length;
    t++
  )
    r += "&args[]=" + encodeURIComponent(arguments[t]);
  return (
    "Minified React error #" +
    e +
    "; visit " +
    r +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var Ph = new Set(),
  Ea = {};
function Yn(e, r) {
  Bi(e, r), Bi(e + "Capture", r);
}
function Bi(e, r) {
  for (Ea[e] = r, e = 0; e < r.length; e++) Ph.add(r[e]);
}
var Qt = !(
    typeof window == "undefined" ||
    typeof window.document == "undefined" ||
    typeof window.document.createElement == "undefined"
  ),
  Ru = Object.prototype.hasOwnProperty,
  Bx =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  uf = {},
  lf = {};
function Ix(e) {
  return Ru.call(lf, e)
    ? !0
    : Ru.call(uf, e)
    ? !1
    : Bx.test(e)
    ? (lf[e] = !0)
    : ((uf[e] = !0), !1);
}
function $x(e, r, t, n) {
  if (t !== null && t.type === 0) return !1;
  switch (typeof r) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return n
        ? !1
        : t !== null
        ? !t.acceptsBooleans
        : ((e = e.toLowerCase().slice(0, 5)), e !== "data-" && e !== "aria-");
    default:
      return !1;
  }
}
function zx(e, r, t, n) {
  if (r === null || typeof r == "undefined" || $x(e, r, t, n)) return !0;
  if (n) return !1;
  if (t !== null)
    switch (t.type) {
      case 3:
        return !r;
      case 4:
        return r === !1;
      case 5:
        return isNaN(r);
      case 6:
        return isNaN(r) || 1 > r;
    }
  return !1;
}
function Pr(e, r, t, n, i, a, s) {
  (this.acceptsBooleans = r === 2 || r === 3 || r === 4),
    (this.attributeName = n),
    (this.attributeNamespace = i),
    (this.mustUseProperty = t),
    (this.propertyName = e),
    (this.type = r),
    (this.sanitizeURL = a),
    (this.removeEmptyString = s);
}
var Mr = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (e) {
    Mr[e] = new Pr(e, 0, !1, e, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (e) {
  var r = e[0];
  Mr[r] = new Pr(r, 1, !1, e[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (e) {
  Mr[e] = new Pr(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (e) {
  Mr[e] = new Pr(e, 2, !1, e, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (e) {
    Mr[e] = new Pr(e, 3, !1, e.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (e) {
  Mr[e] = new Pr(e, 3, !0, e, null, !1, !1);
});
["capture", "download"].forEach(function (e) {
  Mr[e] = new Pr(e, 4, !1, e, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (e) {
  Mr[e] = new Pr(e, 6, !1, e, null, !1, !1);
});
["rowSpan", "start"].forEach(function (e) {
  Mr[e] = new Pr(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var Zl = /[\-:]([a-z])/g;
function Ql(e) {
  return e[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (e) {
    var r = e.replace(Zl, Ql);
    Mr[r] = new Pr(r, 1, !1, e, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (e) {
    var r = e.replace(Zl, Ql);
    Mr[r] = new Pr(r, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
  var r = e.replace(Zl, Ql);
  Mr[r] = new Pr(r, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (e) {
  Mr[e] = new Pr(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
Mr.xlinkHref = new Pr(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (e) {
  Mr[e] = new Pr(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function Yl(e, r, t, n) {
  var i = Mr.hasOwnProperty(r) ? Mr[r] : null;
  (i !== null
    ? i.type !== 0
    : n ||
      !(2 < r.length) ||
      (r[0] !== "o" && r[0] !== "O") ||
      (r[1] !== "n" && r[1] !== "N")) &&
    (zx(r, t, i, n) && (t = null),
    n || i === null
      ? Ix(r) && (t === null ? e.removeAttribute(r) : e.setAttribute(r, "" + t))
      : i.mustUseProperty
      ? (e[i.propertyName] = t === null ? (i.type === 3 ? !1 : "") : t)
      : ((r = i.attributeName),
        (n = i.attributeNamespace),
        t === null
          ? e.removeAttribute(r)
          : ((i = i.type),
            (t = i === 3 || (i === 4 && t === !0) ? "" : "" + t),
            n ? e.setAttributeNS(n, r, t) : e.setAttribute(r, t))));
}
var Kt = Fh.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  io = Symbol.for("react.element"),
  ci = Symbol.for("react.portal"),
  fi = Symbol.for("react.fragment"),
  Xl = Symbol.for("react.strict_mode"),
  Fu = Symbol.for("react.profiler"),
  Lh = Symbol.for("react.provider"),
  kh = Symbol.for("react.context"),
  jl = Symbol.for("react.forward_ref"),
  Pu = Symbol.for("react.suspense"),
  Lu = Symbol.for("react.suspense_list"),
  Jl = Symbol.for("react.memo"),
  tn = Symbol.for("react.lazy"),
  Uh = Symbol.for("react.offscreen"),
  cf = Symbol.iterator;
function Ki(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (cf && e[cf]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var sr = Object.assign,
  tu;
function la(e) {
  if (tu === void 0)
    try {
      throw Error();
    } catch (t) {
      var r = t.stack.trim().match(/\n( *(at )?)/);
      tu = (r && r[1]) || "";
    }
  return (
    `
` +
    tu +
    e
  );
}
var nu = !1;
function iu(e, r) {
  if (!e || nu) return "";
  nu = !0;
  var t = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (r)
      if (
        ((r = function () {
          throw Error();
        }),
        Object.defineProperty(r.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(r, []);
        } catch (p) {
          var n = p;
        }
        Reflect.construct(e, [], r);
      } else {
        try {
          r.call();
        } catch (p) {
          n = p;
        }
        e.call(r.prototype);
      }
    else {
      try {
        throw Error();
      } catch (p) {
        n = p;
      }
      e();
    }
  } catch (p) {
    if (p && n && typeof p.stack == "string") {
      for (
        var i = p.stack.split(`
`),
          a = n.stack.split(`
`),
          s = i.length - 1,
          f = a.length - 1;
        1 <= s && 0 <= f && i[s] !== a[f];

      )
        f--;
      for (; 1 <= s && 0 <= f; s--, f--)
        if (i[s] !== a[f]) {
          if (s !== 1 || f !== 1)
            do
              if ((s--, f--, 0 > f || i[s] !== a[f])) {
                var l =
                  `
` + i[s].replace(" at new ", " at ");
                return (
                  e.displayName &&
                    l.includes("<anonymous>") &&
                    (l = l.replace("<anonymous>", e.displayName)),
                  l
                );
              }
            while (1 <= s && 0 <= f);
          break;
        }
    }
  } finally {
    (nu = !1), (Error.prepareStackTrace = t);
  }
  return (e = e ? e.displayName || e.name : "") ? la(e) : "";
}
function Rx(e) {
  switch (e.tag) {
    case 5:
      return la(e.type);
    case 16:
      return la("Lazy");
    case 13:
      return la("Suspense");
    case 19:
      return la("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (e = iu(e.type, !1)), e;
    case 11:
      return (e = iu(e.type.render, !1)), e;
    case 1:
      return (e = iu(e.type, !0)), e;
    default:
      return "";
  }
}
function ku(e) {
  if (e == null) return null;
  if (typeof e == "function") return e.displayName || e.name || null;
  if (typeof e == "string") return e;
  switch (e) {
    case fi:
      return "Fragment";
    case ci:
      return "Portal";
    case Fu:
      return "Profiler";
    case Xl:
      return "StrictMode";
    case Pu:
      return "Suspense";
    case Lu:
      return "SuspenseList";
  }
  if (typeof e == "object")
    switch (e.$$typeof) {
      case kh:
        return (e.displayName || "Context") + ".Consumer";
      case Lh:
        return (e._context.displayName || "Context") + ".Provider";
      case jl:
        var r = e.render;
        return (
          (e = e.displayName),
          e ||
            ((e = r.displayName || r.name || ""),
            (e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")),
          e
        );
      case Jl:
        return (
          (r = e.displayName || null), r !== null ? r : ku(e.type) || "Memo"
        );
      case tn:
        (r = e._payload), (e = e._init);
        try {
          return ku(e(r));
        } catch {}
    }
  return null;
}
function Fx(e) {
  var r = e.type;
  switch (e.tag) {
    case 24:
      return "Cache";
    case 9:
      return (r.displayName || "Context") + ".Consumer";
    case 10:
      return (r._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (e = r.render),
        (e = e.displayName || e.name || ""),
        r.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return r;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return ku(r);
    case 8:
      return r === Xl ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof r == "function") return r.displayName || r.name || null;
      if (typeof r == "string") return r;
  }
  return null;
}
function Nn(e) {
  switch (typeof e) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return e;
    case "object":
      return e;
    default:
      return "";
  }
}
function qh(e) {
  var r = e.type;
  return (
    (e = e.nodeName) &&
    e.toLowerCase() === "input" &&
    (r === "checkbox" || r === "radio")
  );
}
function Px(e) {
  var r = qh(e) ? "checked" : "value",
    t = Object.getOwnPropertyDescriptor(e.constructor.prototype, r),
    n = "" + e[r];
  if (
    !e.hasOwnProperty(r) &&
    typeof t != "undefined" &&
    typeof t.get == "function" &&
    typeof t.set == "function"
  ) {
    var i = t.get,
      a = t.set;
    return (
      Object.defineProperty(e, r, {
        configurable: !0,
        get: function () {
          return i.call(this);
        },
        set: function (s) {
          (n = "" + s), a.call(this, s);
        },
      }),
      Object.defineProperty(e, r, { enumerable: t.enumerable }),
      {
        getValue: function () {
          return n;
        },
        setValue: function (s) {
          n = "" + s;
        },
        stopTracking: function () {
          (e._valueTracker = null), delete e[r];
        },
      }
    );
  }
}
function ao(e) {
  e._valueTracker || (e._valueTracker = Px(e));
}
function Hh(e) {
  if (!e) return !1;
  var r = e._valueTracker;
  if (!r) return !0;
  var t = r.getValue(),
    n = "";
  return (
    e && (n = qh(e) ? (e.checked ? "true" : "false") : e.value),
    (e = n),
    e !== t ? (r.setValue(e), !0) : !1
  );
}
function ko(e) {
  if (
    ((e = e || (typeof document != "undefined" ? document : void 0)),
    typeof e == "undefined")
  )
    return null;
  try {
    return e.activeElement || e.body;
  } catch {
    return e.body;
  }
}
function Uu(e, r) {
  var t = r.checked;
  return sr({}, r, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: t != null ? t : e._wrapperState.initialChecked,
  });
}
function ff(e, r) {
  var t = r.defaultValue == null ? "" : r.defaultValue,
    n = r.checked != null ? r.checked : r.defaultChecked;
  (t = Nn(r.value != null ? r.value : t)),
    (e._wrapperState = {
      initialChecked: n,
      initialValue: t,
      controlled:
        r.type === "checkbox" || r.type === "radio"
          ? r.checked != null
          : r.value != null,
    });
}
function Vh(e, r) {
  (r = r.checked), r != null && Yl(e, "checked", r, !1);
}
function qu(e, r) {
  Vh(e, r);
  var t = Nn(r.value),
    n = r.type;
  if (t != null)
    n === "number"
      ? ((t === 0 && e.value === "") || e.value != t) && (e.value = "" + t)
      : e.value !== "" + t && (e.value = "" + t);
  else if (n === "submit" || n === "reset") {
    e.removeAttribute("value");
    return;
  }
  r.hasOwnProperty("value")
    ? Hu(e, r.type, t)
    : r.hasOwnProperty("defaultValue") && Hu(e, r.type, Nn(r.defaultValue)),
    r.checked == null &&
      r.defaultChecked != null &&
      (e.defaultChecked = !!r.defaultChecked);
}
function pf(e, r, t) {
  if (r.hasOwnProperty("value") || r.hasOwnProperty("defaultValue")) {
    var n = r.type;
    if (
      !(
        (n !== "submit" && n !== "reset") ||
        (r.value !== void 0 && r.value !== null)
      )
    )
      return;
    (r = "" + e._wrapperState.initialValue),
      t || r === e.value || (e.value = r),
      (e.defaultValue = r);
  }
  (t = e.name),
    t !== "" && (e.name = ""),
    (e.defaultChecked = !!e._wrapperState.initialChecked),
    t !== "" && (e.name = t);
}
function Hu(e, r, t) {
  (r !== "number" || ko(e.ownerDocument) !== e) &&
    (t == null
      ? (e.defaultValue = "" + e._wrapperState.initialValue)
      : e.defaultValue !== "" + t && (e.defaultValue = "" + t));
}
var ca = Array.isArray;
function Mi(e, r, t, n) {
  if (((e = e.options), r)) {
    r = {};
    for (var i = 0; i < t.length; i++) r["$" + t[i]] = !0;
    for (t = 0; t < e.length; t++)
      (i = r.hasOwnProperty("$" + e[t].value)),
        e[t].selected !== i && (e[t].selected = i),
        i && n && (e[t].defaultSelected = !0);
  } else {
    for (t = "" + Nn(t), r = null, i = 0; i < e.length; i++) {
      if (e[i].value === t) {
        (e[i].selected = !0), n && (e[i].defaultSelected = !0);
        return;
      }
      r !== null || e[i].disabled || (r = e[i]);
    }
    r !== null && (r.selected = !0);
  }
}
function Vu(e, r) {
  if (r.dangerouslySetInnerHTML != null) throw Error(le(91));
  return sr({}, r, {
    value: void 0,
    defaultValue: void 0,
    children: "" + e._wrapperState.initialValue,
  });
}
function mf(e, r) {
  var t = r.value;
  if (t == null) {
    if (((t = r.children), (r = r.defaultValue), t != null)) {
      if (r != null) throw Error(le(92));
      if (ca(t)) {
        if (1 < t.length) throw Error(le(93));
        t = t[0];
      }
      r = t;
    }
    r == null && (r = ""), (t = r);
  }
  e._wrapperState = { initialValue: Nn(t) };
}
function Gh(e, r) {
  var t = Nn(r.value),
    n = Nn(r.defaultValue);
  t != null &&
    ((t = "" + t),
    t !== e.value && (e.value = t),
    r.defaultValue == null && e.defaultValue !== t && (e.defaultValue = t)),
    n != null && (e.defaultValue = "" + n);
}
function vf(e) {
  var r = e.textContent;
  r === e._wrapperState.initialValue && r !== "" && r !== null && (e.value = r);
}
function Wh(e) {
  switch (e) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function Gu(e, r) {
  return e == null || e === "http://www.w3.org/1999/xhtml"
    ? Wh(r)
    : e === "http://www.w3.org/2000/svg" && r === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : e;
}
var oo,
  Zh = (function (e) {
    return typeof MSApp != "undefined" && MSApp.execUnsafeLocalFunction
      ? function (r, t, n, i) {
          MSApp.execUnsafeLocalFunction(function () {
            return e(r, t, n, i);
          });
        }
      : e;
  })(function (e, r) {
    if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in e)
      e.innerHTML = r;
    else {
      for (
        oo = oo || document.createElement("div"),
          oo.innerHTML = "<svg>" + r.valueOf().toString() + "</svg>",
          r = oo.firstChild;
        e.firstChild;

      )
        e.removeChild(e.firstChild);
      for (; r.firstChild; ) e.appendChild(r.firstChild);
    }
  });
function Ca(e, r) {
  if (r) {
    var t = e.firstChild;
    if (t && t === e.lastChild && t.nodeType === 3) {
      t.nodeValue = r;
      return;
    }
  }
  e.textContent = r;
}
var ha = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  Lx = ["Webkit", "ms", "Moz", "O"];
Object.keys(ha).forEach(function (e) {
  Lx.forEach(function (r) {
    (r = r + e.charAt(0).toUpperCase() + e.substring(1)), (ha[r] = ha[e]);
  });
});
function Qh(e, r, t) {
  return r == null || typeof r == "boolean" || r === ""
    ? ""
    : t || typeof r != "number" || r === 0 || (ha.hasOwnProperty(e) && ha[e])
    ? ("" + r).trim()
    : r + "px";
}
function Yh(e, r) {
  e = e.style;
  for (var t in r)
    if (r.hasOwnProperty(t)) {
      var n = t.indexOf("--") === 0,
        i = Qh(t, r[t], n);
      t === "float" && (t = "cssFloat"), n ? e.setProperty(t, i) : (e[t] = i);
    }
}
var kx = sr(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function Wu(e, r) {
  if (r) {
    if (kx[e] && (r.children != null || r.dangerouslySetInnerHTML != null))
      throw Error(le(137, e));
    if (r.dangerouslySetInnerHTML != null) {
      if (r.children != null) throw Error(le(60));
      if (
        typeof r.dangerouslySetInnerHTML != "object" ||
        !("__html" in r.dangerouslySetInnerHTML)
      )
        throw Error(le(61));
    }
    if (r.style != null && typeof r.style != "object") throw Error(le(62));
  }
}
function Zu(e, r) {
  if (e.indexOf("-") === -1) return typeof r.is == "string";
  switch (e) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var Qu = null;
function Kl(e) {
  return (
    (e = e.target || e.srcElement || window),
    e.correspondingUseElement && (e = e.correspondingUseElement),
    e.nodeType === 3 ? e.parentNode : e
  );
}
var Yu = null,
  Si = null,
  Ai = null;
function df(e) {
  if ((e = ja(e))) {
    if (typeof Yu != "function") throw Error(le(280));
    var r = e.stateNode;
    r && ((r = As(r)), Yu(e.stateNode, e.type, r));
  }
}
function Xh(e) {
  Si ? (Ai ? Ai.push(e) : (Ai = [e])) : (Si = e);
}
function jh() {
  if (Si) {
    var e = Si,
      r = Ai;
    if (((Ai = Si = null), df(e), r)) for (e = 0; e < r.length; e++) df(r[e]);
  }
}
function Jh(e, r) {
  return e(r);
}
function Kh() {}
var au = !1;
function eg(e, r, t) {
  if (au) return e(r, t);
  au = !0;
  try {
    return Jh(e, r, t);
  } finally {
    (au = !1), (Si !== null || Ai !== null) && (Kh(), jh());
  }
}
function Oa(e, r) {
  var t = e.stateNode;
  if (t === null) return null;
  var n = As(t);
  if (n === null) return null;
  t = n[r];
  e: switch (r) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (n = !n.disabled) ||
        ((e = e.type),
        (n = !(
          e === "button" ||
          e === "input" ||
          e === "select" ||
          e === "textarea"
        ))),
        (e = !n);
      break e;
    default:
      e = !1;
  }
  if (e) return null;
  if (t && typeof t != "function") throw Error(le(231, r, typeof t));
  return t;
}
var Xu = !1;
if (Qt)
  try {
    var ea = {};
    Object.defineProperty(ea, "passive", {
      get: function () {
        Xu = !0;
      },
    }),
      window.addEventListener("test", ea, ea),
      window.removeEventListener("test", ea, ea);
  } catch {
    Xu = !1;
  }
function Ux(e, r, t, n, i, a, s, f, l) {
  var p = Array.prototype.slice.call(arguments, 3);
  try {
    r.apply(t, p);
  } catch (u) {
    this.onError(u);
  }
}
var ga = !1,
  Uo = null,
  qo = !1,
  ju = null,
  qx = {
    onError: function (e) {
      (ga = !0), (Uo = e);
    },
  };
function Hx(e, r, t, n, i, a, s, f, l) {
  (ga = !1), (Uo = null), Ux.apply(qx, arguments);
}
function Vx(e, r, t, n, i, a, s, f, l) {
  if ((Hx.apply(this, arguments), ga)) {
    if (ga) {
      var p = Uo;
      (ga = !1), (Uo = null);
    } else throw Error(le(198));
    qo || ((qo = !0), (ju = p));
  }
}
function Xn(e) {
  var r = e,
    t = e;
  if (e.alternate) for (; r.return; ) r = r.return;
  else {
    e = r;
    do (r = e), (r.flags & 4098) !== 0 && (t = r.return), (e = r.return);
    while (e);
  }
  return r.tag === 3 ? t : null;
}
function rg(e) {
  if (e.tag === 13) {
    var r = e.memoizedState;
    if (
      (r === null && ((e = e.alternate), e !== null && (r = e.memoizedState)),
      r !== null)
    )
      return r.dehydrated;
  }
  return null;
}
function hf(e) {
  if (Xn(e) !== e) throw Error(le(188));
}
function Gx(e) {
  var r = e.alternate;
  if (!r) {
    if (((r = Xn(e)), r === null)) throw Error(le(188));
    return r !== e ? null : e;
  }
  for (var t = e, n = r; ; ) {
    var i = t.return;
    if (i === null) break;
    var a = i.alternate;
    if (a === null) {
      if (((n = i.return), n !== null)) {
        t = n;
        continue;
      }
      break;
    }
    if (i.child === a.child) {
      for (a = i.child; a; ) {
        if (a === t) return hf(i), e;
        if (a === n) return hf(i), r;
        a = a.sibling;
      }
      throw Error(le(188));
    }
    if (t.return !== n.return) (t = i), (n = a);
    else {
      for (var s = !1, f = i.child; f; ) {
        if (f === t) {
          (s = !0), (t = i), (n = a);
          break;
        }
        if (f === n) {
          (s = !0), (n = i), (t = a);
          break;
        }
        f = f.sibling;
      }
      if (!s) {
        for (f = a.child; f; ) {
          if (f === t) {
            (s = !0), (t = a), (n = i);
            break;
          }
          if (f === n) {
            (s = !0), (n = a), (t = i);
            break;
          }
          f = f.sibling;
        }
        if (!s) throw Error(le(189));
      }
    }
    if (t.alternate !== n) throw Error(le(190));
  }
  if (t.tag !== 3) throw Error(le(188));
  return t.stateNode.current === t ? e : r;
}
function tg(e) {
  return (e = Gx(e)), e !== null ? ng(e) : null;
}
function ng(e) {
  if (e.tag === 5 || e.tag === 6) return e;
  for (e = e.child; e !== null; ) {
    var r = ng(e);
    if (r !== null) return r;
    e = e.sibling;
  }
  return null;
}
var ig = et.unstable_scheduleCallback,
  gf = et.unstable_cancelCallback,
  Wx = et.unstable_shouldYield,
  Zx = et.unstable_requestPaint,
  cr = et.unstable_now,
  Qx = et.unstable_getCurrentPriorityLevel,
  ec = et.unstable_ImmediatePriority,
  ag = et.unstable_UserBlockingPriority,
  Ho = et.unstable_NormalPriority,
  Yx = et.unstable_LowPriority,
  og = et.unstable_IdlePriority,
  bs = null,
  Bt = null;
function Xx(e) {
  if (Bt && typeof Bt.onCommitFiberRoot == "function")
    try {
      Bt.onCommitFiberRoot(bs, e, void 0, (e.current.flags & 128) === 128);
    } catch {}
}
var wt = Math.clz32 ? Math.clz32 : Kx,
  jx = Math.log,
  Jx = Math.LN2;
function Kx(e) {
  return (e >>>= 0), e === 0 ? 32 : (31 - ((jx(e) / Jx) | 0)) | 0;
}
var so = 64,
  uo = 4194304;
function fa(e) {
  switch (e & -e) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return e & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return e;
  }
}
function Vo(e, r) {
  var t = e.pendingLanes;
  if (t === 0) return 0;
  var n = 0,
    i = e.suspendedLanes,
    a = e.pingedLanes,
    s = t & 268435455;
  if (s !== 0) {
    var f = s & ~i;
    f !== 0 ? (n = fa(f)) : ((a &= s), a !== 0 && (n = fa(a)));
  } else (s = t & ~i), s !== 0 ? (n = fa(s)) : a !== 0 && (n = fa(a));
  if (n === 0) return 0;
  if (
    r !== 0 &&
    r !== n &&
    (r & i) === 0 &&
    ((i = n & -n), (a = r & -r), i >= a || (i === 16 && (a & 4194240) !== 0))
  )
    return r;
  if (((n & 4) !== 0 && (n |= t & 16), (r = e.entangledLanes), r !== 0))
    for (e = e.entanglements, r &= n; 0 < r; )
      (t = 31 - wt(r)), (i = 1 << t), (n |= e[t]), (r &= ~i);
  return n;
}
function ew(e, r) {
  switch (e) {
    case 1:
    case 2:
    case 4:
      return r + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return r + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function rw(e, r) {
  for (
    var t = e.suspendedLanes,
      n = e.pingedLanes,
      i = e.expirationTimes,
      a = e.pendingLanes;
    0 < a;

  ) {
    var s = 31 - wt(a),
      f = 1 << s,
      l = i[s];
    l === -1
      ? ((f & t) === 0 || (f & n) !== 0) && (i[s] = ew(f, r))
      : l <= r && (e.expiredLanes |= f),
      (a &= ~f);
  }
}
function Ju(e) {
  return (
    (e = e.pendingLanes & -1073741825),
    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
  );
}
function sg() {
  var e = so;
  return (so <<= 1), (so & 4194240) === 0 && (so = 64), e;
}
function ou(e) {
  for (var r = [], t = 0; 31 > t; t++) r.push(e);
  return r;
}
function Ya(e, r, t) {
  (e.pendingLanes |= r),
    r !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
    (e = e.eventTimes),
    (r = 31 - wt(r)),
    (e[r] = t);
}
function tw(e, r) {
  var t = e.pendingLanes & ~r;
  (e.pendingLanes = r),
    (e.suspendedLanes = 0),
    (e.pingedLanes = 0),
    (e.expiredLanes &= r),
    (e.mutableReadLanes &= r),
    (e.entangledLanes &= r),
    (r = e.entanglements);
  var n = e.eventTimes;
  for (e = e.expirationTimes; 0 < t; ) {
    var i = 31 - wt(t),
      a = 1 << i;
    (r[i] = 0), (n[i] = -1), (e[i] = -1), (t &= ~a);
  }
}
function rc(e, r) {
  var t = (e.entangledLanes |= r);
  for (e = e.entanglements; t; ) {
    var n = 31 - wt(t),
      i = 1 << n;
    (i & r) | (e[n] & r) && (e[n] |= r), (t &= ~i);
  }
}
var Qe = 0;
function ug(e) {
  return (
    (e &= -e),
    1 < e ? (4 < e ? ((e & 268435455) !== 0 ? 16 : 536870912) : 4) : 1
  );
}
var lg,
  tc,
  cg,
  fg,
  pg,
  Ku = !1,
  lo = [],
  vn = null,
  dn = null,
  hn = null,
  Ta = new Map(),
  Da = new Map(),
  sn = [],
  nw =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function yf(e, r) {
  switch (e) {
    case "focusin":
    case "focusout":
      vn = null;
      break;
    case "dragenter":
    case "dragleave":
      dn = null;
      break;
    case "mouseover":
    case "mouseout":
      hn = null;
      break;
    case "pointerover":
    case "pointerout":
      Ta.delete(r.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Da.delete(r.pointerId);
  }
}
function ra(e, r, t, n, i, a) {
  return e === null || e.nativeEvent !== a
    ? ((e = {
        blockedOn: r,
        domEventName: t,
        eventSystemFlags: n,
        nativeEvent: a,
        targetContainers: [i],
      }),
      r !== null && ((r = ja(r)), r !== null && tc(r)),
      e)
    : ((e.eventSystemFlags |= n),
      (r = e.targetContainers),
      i !== null && r.indexOf(i) === -1 && r.push(i),
      e);
}
function iw(e, r, t, n, i) {
  switch (r) {
    case "focusin":
      return (vn = ra(vn, e, r, t, n, i)), !0;
    case "dragenter":
      return (dn = ra(dn, e, r, t, n, i)), !0;
    case "mouseover":
      return (hn = ra(hn, e, r, t, n, i)), !0;
    case "pointerover":
      var a = i.pointerId;
      return Ta.set(a, ra(Ta.get(a) || null, e, r, t, n, i)), !0;
    case "gotpointercapture":
      return (
        (a = i.pointerId), Da.set(a, ra(Da.get(a) || null, e, r, t, n, i)), !0
      );
  }
  return !1;
}
function mg(e) {
  var r = Pn(e.target);
  if (r !== null) {
    var t = Xn(r);
    if (t !== null) {
      if (((r = t.tag), r === 13)) {
        if (((r = rg(t)), r !== null)) {
          (e.blockedOn = r),
            pg(e.priority, function () {
              cg(t);
            });
          return;
        }
      } else if (r === 3 && t.stateNode.current.memoizedState.isDehydrated) {
        e.blockedOn = t.tag === 3 ? t.stateNode.containerInfo : null;
        return;
      }
    }
  }
  e.blockedOn = null;
}
function Oo(e) {
  if (e.blockedOn !== null) return !1;
  for (var r = e.targetContainers; 0 < r.length; ) {
    var t = el(e.domEventName, e.eventSystemFlags, r[0], e.nativeEvent);
    if (t === null) {
      t = e.nativeEvent;
      var n = new t.constructor(t.type, t);
      (Qu = n), t.target.dispatchEvent(n), (Qu = null);
    } else return (r = ja(t)), r !== null && tc(r), (e.blockedOn = t), !1;
    r.shift();
  }
  return !0;
}
function xf(e, r, t) {
  Oo(e) && t.delete(r);
}
function aw() {
  (Ku = !1),
    vn !== null && Oo(vn) && (vn = null),
    dn !== null && Oo(dn) && (dn = null),
    hn !== null && Oo(hn) && (hn = null),
    Ta.forEach(xf),
    Da.forEach(xf);
}
function ta(e, r) {
  e.blockedOn === r &&
    ((e.blockedOn = null),
    Ku ||
      ((Ku = !0),
      et.unstable_scheduleCallback(et.unstable_NormalPriority, aw)));
}
function _a(e) {
  function r(i) {
    return ta(i, e);
  }
  if (0 < lo.length) {
    ta(lo[0], e);
    for (var t = 1; t < lo.length; t++) {
      var n = lo[t];
      n.blockedOn === e && (n.blockedOn = null);
    }
  }
  for (
    vn !== null && ta(vn, e),
      dn !== null && ta(dn, e),
      hn !== null && ta(hn, e),
      Ta.forEach(r),
      Da.forEach(r),
      t = 0;
    t < sn.length;
    t++
  )
    (n = sn[t]), n.blockedOn === e && (n.blockedOn = null);
  for (; 0 < sn.length && ((t = sn[0]), t.blockedOn === null); )
    mg(t), t.blockedOn === null && sn.shift();
}
var Ei = Kt.ReactCurrentBatchConfig,
  Go = !0;
function ow(e, r, t, n) {
  var i = Qe,
    a = Ei.transition;
  Ei.transition = null;
  try {
    (Qe = 1), nc(e, r, t, n);
  } finally {
    (Qe = i), (Ei.transition = a);
  }
}
function sw(e, r, t, n) {
  var i = Qe,
    a = Ei.transition;
  Ei.transition = null;
  try {
    (Qe = 4), nc(e, r, t, n);
  } finally {
    (Qe = i), (Ei.transition = a);
  }
}
function nc(e, r, t, n) {
  if (Go) {
    var i = el(e, r, t, n);
    if (i === null) hu(e, r, n, Wo, t), yf(e, n);
    else if (iw(i, e, r, t, n)) n.stopPropagation();
    else if ((yf(e, n), r & 4 && -1 < nw.indexOf(e))) {
      for (; i !== null; ) {
        var a = ja(i);
        if (
          (a !== null && lg(a),
          (a = el(e, r, t, n)),
          a === null && hu(e, r, n, Wo, t),
          a === i)
        )
          break;
        i = a;
      }
      i !== null && n.stopPropagation();
    } else hu(e, r, n, null, t);
  }
}
var Wo = null;
function el(e, r, t, n) {
  if (((Wo = null), (e = Kl(n)), (e = Pn(e)), e !== null))
    if (((r = Xn(e)), r === null)) e = null;
    else if (((t = r.tag), t === 13)) {
      if (((e = rg(r)), e !== null)) return e;
      e = null;
    } else if (t === 3) {
      if (r.stateNode.current.memoizedState.isDehydrated)
        return r.tag === 3 ? r.stateNode.containerInfo : null;
      e = null;
    } else r !== e && (e = null);
  return (Wo = e), null;
}
function vg(e) {
  switch (e) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (Qx()) {
        case ec:
          return 1;
        case ag:
          return 4;
        case Ho:
        case Yx:
          return 16;
        case og:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var ln = null,
  ic = null,
  To = null;
function dg() {
  if (To) return To;
  var e,
    r = ic,
    t = r.length,
    n,
    i = "value" in ln ? ln.value : ln.textContent,
    a = i.length;
  for (e = 0; e < t && r[e] === i[e]; e++);
  var s = t - e;
  for (n = 1; n <= s && r[t - n] === i[a - n]; n++);
  return (To = i.slice(e, 1 < n ? 1 - n : void 0));
}
function Do(e) {
  var r = e.keyCode;
  return (
    "charCode" in e
      ? ((e = e.charCode), e === 0 && r === 13 && (e = 13))
      : (e = r),
    e === 10 && (e = 13),
    32 <= e || e === 13 ? e : 0
  );
}
function co() {
  return !0;
}
function wf() {
  return !1;
}
function nt(e) {
  function r(t, n, i, a, s) {
    (this._reactName = t),
      (this._targetInst = i),
      (this.type = n),
      (this.nativeEvent = a),
      (this.target = s),
      (this.currentTarget = null);
    for (var f in e)
      e.hasOwnProperty(f) && ((t = e[f]), (this[f] = t ? t(a) : a[f]));
    return (
      (this.isDefaultPrevented = (
        a.defaultPrevented != null ? a.defaultPrevented : a.returnValue === !1
      )
        ? co
        : wf),
      (this.isPropagationStopped = wf),
      this
    );
  }
  return (
    sr(r.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var t = this.nativeEvent;
        t &&
          (t.preventDefault
            ? t.preventDefault()
            : typeof t.returnValue != "unknown" && (t.returnValue = !1),
          (this.isDefaultPrevented = co));
      },
      stopPropagation: function () {
        var t = this.nativeEvent;
        t &&
          (t.stopPropagation
            ? t.stopPropagation()
            : typeof t.cancelBubble != "unknown" && (t.cancelBubble = !0),
          (this.isPropagationStopped = co));
      },
      persist: function () {},
      isPersistent: co,
    }),
    r
  );
}
var Gi = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (e) {
      return e.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  ac = nt(Gi),
  Xa = sr({}, Gi, { view: 0, detail: 0 }),
  uw = nt(Xa),
  su,
  uu,
  na,
  Ns = sr({}, Xa, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: oc,
    button: 0,
    buttons: 0,
    relatedTarget: function (e) {
      return e.relatedTarget === void 0
        ? e.fromElement === e.srcElement
          ? e.toElement
          : e.fromElement
        : e.relatedTarget;
    },
    movementX: function (e) {
      return "movementX" in e
        ? e.movementX
        : (e !== na &&
            (na && e.type === "mousemove"
              ? ((su = e.screenX - na.screenX), (uu = e.screenY - na.screenY))
              : (uu = su = 0),
            (na = e)),
          su);
    },
    movementY: function (e) {
      return "movementY" in e ? e.movementY : uu;
    },
  }),
  bf = nt(Ns),
  lw = sr({}, Ns, { dataTransfer: 0 }),
  cw = nt(lw),
  fw = sr({}, Xa, { relatedTarget: 0 }),
  lu = nt(fw),
  pw = sr({}, Gi, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  mw = nt(pw),
  vw = sr({}, Gi, {
    clipboardData: function (e) {
      return "clipboardData" in e ? e.clipboardData : window.clipboardData;
    },
  }),
  dw = nt(vw),
  hw = sr({}, Gi, { data: 0 }),
  Nf = nt(hw),
  gw = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  yw = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  xw = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function ww(e) {
  var r = this.nativeEvent;
  return r.getModifierState ? r.getModifierState(e) : (e = xw[e]) ? !!r[e] : !1;
}
function oc() {
  return ww;
}
var bw = sr({}, Xa, {
    key: function (e) {
      if (e.key) {
        var r = gw[e.key] || e.key;
        if (r !== "Unidentified") return r;
      }
      return e.type === "keypress"
        ? ((e = Do(e)), e === 13 ? "Enter" : String.fromCharCode(e))
        : e.type === "keydown" || e.type === "keyup"
        ? yw[e.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: oc,
    charCode: function (e) {
      return e.type === "keypress" ? Do(e) : 0;
    },
    keyCode: function (e) {
      return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
    },
    which: function (e) {
      return e.type === "keypress"
        ? Do(e)
        : e.type === "keydown" || e.type === "keyup"
        ? e.keyCode
        : 0;
    },
  }),
  Nw = nt(bw),
  Mw = sr({}, Ns, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Mf = nt(Mw),
  Sw = sr({}, Xa, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: oc,
  }),
  Aw = nt(Sw),
  Ew = sr({}, Gi, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Cw = nt(Ew),
  Ow = sr({}, Ns, {
    deltaX: function (e) {
      return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0;
    },
    deltaY: function (e) {
      return "deltaY" in e
        ? e.deltaY
        : "wheelDeltaY" in e
        ? -e.wheelDeltaY
        : "wheelDelta" in e
        ? -e.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  Tw = nt(Ow),
  Dw = [9, 13, 27, 32],
  sc = Qt && "CompositionEvent" in window,
  ya = null;
Qt && "documentMode" in document && (ya = document.documentMode);
var _w = Qt && "TextEvent" in window && !ya,
  hg = Qt && (!sc || (ya && 8 < ya && 11 >= ya)),
  Sf = String.fromCharCode(32),
  Af = !1;
function gg(e, r) {
  switch (e) {
    case "keyup":
      return Dw.indexOf(r.keyCode) !== -1;
    case "keydown":
      return r.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function yg(e) {
  return (e = e.detail), typeof e == "object" && "data" in e ? e.data : null;
}
var pi = !1;
function Bw(e, r) {
  switch (e) {
    case "compositionend":
      return yg(r);
    case "keypress":
      return r.which !== 32 ? null : ((Af = !0), Sf);
    case "textInput":
      return (e = r.data), e === Sf && Af ? null : e;
    default:
      return null;
  }
}
function Iw(e, r) {
  if (pi)
    return e === "compositionend" || (!sc && gg(e, r))
      ? ((e = dg()), (To = ic = ln = null), (pi = !1), e)
      : null;
  switch (e) {
    case "paste":
      return null;
    case "keypress":
      if (!(r.ctrlKey || r.altKey || r.metaKey) || (r.ctrlKey && r.altKey)) {
        if (r.char && 1 < r.char.length) return r.char;
        if (r.which) return String.fromCharCode(r.which);
      }
      return null;
    case "compositionend":
      return hg && r.locale !== "ko" ? null : r.data;
    default:
      return null;
  }
}
var $w = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function Ef(e) {
  var r = e && e.nodeName && e.nodeName.toLowerCase();
  return r === "input" ? !!$w[e.type] : r === "textarea";
}
function xg(e, r, t, n) {
  Xh(n),
    (r = Zo(r, "onChange")),
    0 < r.length &&
      ((t = new ac("onChange", "change", null, t, n)),
      e.push({ event: t, listeners: r }));
}
var xa = null,
  Ba = null;
function zw(e) {
  Dg(e, 0);
}
function Ms(e) {
  var r = di(e);
  if (Hh(r)) return e;
}
function Rw(e, r) {
  if (e === "change") return r;
}
var wg = !1;
if (Qt) {
  var cu;
  if (Qt) {
    var fu = "oninput" in document;
    if (!fu) {
      var Cf = document.createElement("div");
      Cf.setAttribute("oninput", "return;"),
        (fu = typeof Cf.oninput == "function");
    }
    cu = fu;
  } else cu = !1;
  wg = cu && (!document.documentMode || 9 < document.documentMode);
}
function Of() {
  xa && (xa.detachEvent("onpropertychange", bg), (Ba = xa = null));
}
function bg(e) {
  if (e.propertyName === "value" && Ms(Ba)) {
    var r = [];
    xg(r, Ba, e, Kl(e)), eg(zw, r);
  }
}
function Fw(e, r, t) {
  e === "focusin"
    ? (Of(), (xa = r), (Ba = t), xa.attachEvent("onpropertychange", bg))
    : e === "focusout" && Of();
}
function Pw(e) {
  if (e === "selectionchange" || e === "keyup" || e === "keydown")
    return Ms(Ba);
}
function Lw(e, r) {
  if (e === "click") return Ms(r);
}
function kw(e, r) {
  if (e === "input" || e === "change") return Ms(r);
}
function Uw(e, r) {
  return (e === r && (e !== 0 || 1 / e === 1 / r)) || (e !== e && r !== r);
}
var St = typeof Object.is == "function" ? Object.is : Uw;
function Ia(e, r) {
  if (St(e, r)) return !0;
  if (typeof e != "object" || e === null || typeof r != "object" || r === null)
    return !1;
  var t = Object.keys(e),
    n = Object.keys(r);
  if (t.length !== n.length) return !1;
  for (n = 0; n < t.length; n++) {
    var i = t[n];
    if (!Ru.call(r, i) || !St(e[i], r[i])) return !1;
  }
  return !0;
}
function Tf(e) {
  for (; e && e.firstChild; ) e = e.firstChild;
  return e;
}
function Df(e, r) {
  var t = Tf(e);
  e = 0;
  for (var n; t; ) {
    if (t.nodeType === 3) {
      if (((n = e + t.textContent.length), e <= r && n >= r))
        return { node: t, offset: r - e };
      e = n;
    }
    e: {
      for (; t; ) {
        if (t.nextSibling) {
          t = t.nextSibling;
          break e;
        }
        t = t.parentNode;
      }
      t = void 0;
    }
    t = Tf(t);
  }
}
function Ng(e, r) {
  return e && r
    ? e === r
      ? !0
      : e && e.nodeType === 3
      ? !1
      : r && r.nodeType === 3
      ? Ng(e, r.parentNode)
      : "contains" in e
      ? e.contains(r)
      : e.compareDocumentPosition
      ? !!(e.compareDocumentPosition(r) & 16)
      : !1
    : !1;
}
function Mg() {
  for (var e = window, r = ko(); r instanceof e.HTMLIFrameElement; ) {
    try {
      var t = typeof r.contentWindow.location.href == "string";
    } catch {
      t = !1;
    }
    if (t) e = r.contentWindow;
    else break;
    r = ko(e.document);
  }
  return r;
}
function uc(e) {
  var r = e && e.nodeName && e.nodeName.toLowerCase();
  return (
    r &&
    ((r === "input" &&
      (e.type === "text" ||
        e.type === "search" ||
        e.type === "tel" ||
        e.type === "url" ||
        e.type === "password")) ||
      r === "textarea" ||
      e.contentEditable === "true")
  );
}
function qw(e) {
  var r = Mg(),
    t = e.focusedElem,
    n = e.selectionRange;
  if (
    r !== t &&
    t &&
    t.ownerDocument &&
    Ng(t.ownerDocument.documentElement, t)
  ) {
    if (n !== null && uc(t)) {
      if (
        ((r = n.start),
        (e = n.end),
        e === void 0 && (e = r),
        "selectionStart" in t)
      )
        (t.selectionStart = r), (t.selectionEnd = Math.min(e, t.value.length));
      else if (
        ((e = ((r = t.ownerDocument || document) && r.defaultView) || window),
        e.getSelection)
      ) {
        e = e.getSelection();
        var i = t.textContent.length,
          a = Math.min(n.start, i);
        (n = n.end === void 0 ? a : Math.min(n.end, i)),
          !e.extend && a > n && ((i = n), (n = a), (a = i)),
          (i = Df(t, a));
        var s = Df(t, n);
        i &&
          s &&
          (e.rangeCount !== 1 ||
            e.anchorNode !== i.node ||
            e.anchorOffset !== i.offset ||
            e.focusNode !== s.node ||
            e.focusOffset !== s.offset) &&
          ((r = r.createRange()),
          r.setStart(i.node, i.offset),
          e.removeAllRanges(),
          a > n
            ? (e.addRange(r), e.extend(s.node, s.offset))
            : (r.setEnd(s.node, s.offset), e.addRange(r)));
      }
    }
    for (r = [], e = t; (e = e.parentNode); )
      e.nodeType === 1 &&
        r.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
    for (typeof t.focus == "function" && t.focus(), t = 0; t < r.length; t++)
      (e = r[t]),
        (e.element.scrollLeft = e.left),
        (e.element.scrollTop = e.top);
  }
}
var Hw = Qt && "documentMode" in document && 11 >= document.documentMode,
  mi = null,
  rl = null,
  wa = null,
  tl = !1;
function _f(e, r, t) {
  var n = t.window === t ? t.document : t.nodeType === 9 ? t : t.ownerDocument;
  tl ||
    mi == null ||
    mi !== ko(n) ||
    ((n = mi),
    "selectionStart" in n && uc(n)
      ? (n = { start: n.selectionStart, end: n.selectionEnd })
      : ((n = (
          (n.ownerDocument && n.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (n = {
          anchorNode: n.anchorNode,
          anchorOffset: n.anchorOffset,
          focusNode: n.focusNode,
          focusOffset: n.focusOffset,
        })),
    (wa && Ia(wa, n)) ||
      ((wa = n),
      (n = Zo(rl, "onSelect")),
      0 < n.length &&
        ((r = new ac("onSelect", "select", null, r, t)),
        e.push({ event: r, listeners: n }),
        (r.target = mi))));
}
function fo(e, r) {
  var t = {};
  return (
    (t[e.toLowerCase()] = r.toLowerCase()),
    (t["Webkit" + e] = "webkit" + r),
    (t["Moz" + e] = "moz" + r),
    t
  );
}
var vi = {
    animationend: fo("Animation", "AnimationEnd"),
    animationiteration: fo("Animation", "AnimationIteration"),
    animationstart: fo("Animation", "AnimationStart"),
    transitionend: fo("Transition", "TransitionEnd"),
  },
  pu = {},
  Sg = {};
Qt &&
  ((Sg = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete vi.animationend.animation,
    delete vi.animationiteration.animation,
    delete vi.animationstart.animation),
  "TransitionEvent" in window || delete vi.transitionend.transition);
function Ss(e) {
  if (pu[e]) return pu[e];
  if (!vi[e]) return e;
  var r = vi[e],
    t;
  for (t in r) if (r.hasOwnProperty(t) && t in Sg) return (pu[e] = r[t]);
  return e;
}
var Ag = Ss("animationend"),
  Eg = Ss("animationiteration"),
  Cg = Ss("animationstart"),
  Og = Ss("transitionend"),
  Tg = new Map(),
  Bf =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function Tn(e, r) {
  Tg.set(e, r), Yn(r, [e]);
}
for (var mu = 0; mu < Bf.length; mu++) {
  var vu = Bf[mu],
    Vw = vu.toLowerCase(),
    Gw = vu[0].toUpperCase() + vu.slice(1);
  Tn(Vw, "on" + Gw);
}
Tn(Ag, "onAnimationEnd");
Tn(Eg, "onAnimationIteration");
Tn(Cg, "onAnimationStart");
Tn("dblclick", "onDoubleClick");
Tn("focusin", "onFocus");
Tn("focusout", "onBlur");
Tn(Og, "onTransitionEnd");
Bi("onMouseEnter", ["mouseout", "mouseover"]);
Bi("onMouseLeave", ["mouseout", "mouseover"]);
Bi("onPointerEnter", ["pointerout", "pointerover"]);
Bi("onPointerLeave", ["pointerout", "pointerover"]);
Yn(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
Yn(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
Yn("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Yn(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
Yn(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
Yn(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var pa =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  Ww = new Set("cancel close invalid load scroll toggle".split(" ").concat(pa));
function If(e, r, t) {
  var n = e.type || "unknown-event";
  (e.currentTarget = t), Vx(n, r, void 0, e), (e.currentTarget = null);
}
function Dg(e, r) {
  r = (r & 4) !== 0;
  for (var t = 0; t < e.length; t++) {
    var n = e[t],
      i = n.event;
    n = n.listeners;
    e: {
      var a = void 0;
      if (r)
        for (var s = n.length - 1; 0 <= s; s--) {
          var f = n[s],
            l = f.instance,
            p = f.currentTarget;
          if (((f = f.listener), l !== a && i.isPropagationStopped())) break e;
          If(i, f, p), (a = l);
        }
      else
        for (s = 0; s < n.length; s++) {
          if (
            ((f = n[s]),
            (l = f.instance),
            (p = f.currentTarget),
            (f = f.listener),
            l !== a && i.isPropagationStopped())
          )
            break e;
          If(i, f, p), (a = l);
        }
    }
  }
  if (qo) throw ((e = ju), (qo = !1), (ju = null), e);
}
function rr(e, r) {
  var t = r[sl];
  t === void 0 && (t = r[sl] = new Set());
  var n = e + "__bubble";
  t.has(n) || (_g(r, e, 2, !1), t.add(n));
}
function du(e, r, t) {
  var n = 0;
  r && (n |= 4), _g(t, e, n, r);
}
var po = "_reactListening" + Math.random().toString(36).slice(2);
function $a(e) {
  if (!e[po]) {
    (e[po] = !0),
      Ph.forEach(function (t) {
        t !== "selectionchange" && (Ww.has(t) || du(t, !1, e), du(t, !0, e));
      });
    var r = e.nodeType === 9 ? e : e.ownerDocument;
    r === null || r[po] || ((r[po] = !0), du("selectionchange", !1, r));
  }
}
function _g(e, r, t, n) {
  switch (vg(r)) {
    case 1:
      var i = ow;
      break;
    case 4:
      i = sw;
      break;
    default:
      i = nc;
  }
  (t = i.bind(null, r, t, e)),
    (i = void 0),
    !Xu ||
      (r !== "touchstart" && r !== "touchmove" && r !== "wheel") ||
      (i = !0),
    n
      ? i !== void 0
        ? e.addEventListener(r, t, { capture: !0, passive: i })
        : e.addEventListener(r, t, !0)
      : i !== void 0
      ? e.addEventListener(r, t, { passive: i })
      : e.addEventListener(r, t, !1);
}
function hu(e, r, t, n, i) {
  var a = n;
  if ((r & 1) === 0 && (r & 2) === 0 && n !== null)
    e: for (;;) {
      if (n === null) return;
      var s = n.tag;
      if (s === 3 || s === 4) {
        var f = n.stateNode.containerInfo;
        if (f === i || (f.nodeType === 8 && f.parentNode === i)) break;
        if (s === 4)
          for (s = n.return; s !== null; ) {
            var l = s.tag;
            if (
              (l === 3 || l === 4) &&
              ((l = s.stateNode.containerInfo),
              l === i || (l.nodeType === 8 && l.parentNode === i))
            )
              return;
            s = s.return;
          }
        for (; f !== null; ) {
          if (((s = Pn(f)), s === null)) return;
          if (((l = s.tag), l === 5 || l === 6)) {
            n = a = s;
            continue e;
          }
          f = f.parentNode;
        }
      }
      n = n.return;
    }
  eg(function () {
    var p = a,
      u = Kl(t),
      o = [];
    e: {
      var c = Tg.get(e);
      if (c !== void 0) {
        var m = ac,
          v = e;
        switch (e) {
          case "keypress":
            if (Do(t) === 0) break e;
          case "keydown":
          case "keyup":
            m = Nw;
            break;
          case "focusin":
            (v = "focus"), (m = lu);
            break;
          case "focusout":
            (v = "blur"), (m = lu);
            break;
          case "beforeblur":
          case "afterblur":
            m = lu;
            break;
          case "click":
            if (t.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            m = bf;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            m = cw;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            m = Aw;
            break;
          case Ag:
          case Eg:
          case Cg:
            m = mw;
            break;
          case Og:
            m = Cw;
            break;
          case "scroll":
            m = uw;
            break;
          case "wheel":
            m = Tw;
            break;
          case "copy":
          case "cut":
          case "paste":
            m = dw;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            m = Mf;
        }
        var d = (r & 4) !== 0,
          N = !d && e === "scroll",
          g = d ? (c !== null ? c + "Capture" : null) : c;
        d = [];
        for (var w = p, h; w !== null; ) {
          h = w;
          var x = h.stateNode;
          if (
            (h.tag === 5 &&
              x !== null &&
              ((h = x),
              g !== null && ((x = Oa(w, g)), x != null && d.push(za(w, x, h)))),
            N)
          )
            break;
          w = w.return;
        }
        0 < d.length &&
          ((c = new m(c, v, null, t, u)), o.push({ event: c, listeners: d }));
      }
    }
    if ((r & 7) === 0) {
      e: {
        if (
          ((c = e === "mouseover" || e === "pointerover"),
          (m = e === "mouseout" || e === "pointerout"),
          c &&
            t !== Qu &&
            (v = t.relatedTarget || t.fromElement) &&
            (Pn(v) || v[Yt]))
        )
          break e;
        if (
          (m || c) &&
          ((c =
            u.window === u
              ? u
              : (c = u.ownerDocument)
              ? c.defaultView || c.parentWindow
              : window),
          m
            ? ((v = t.relatedTarget || t.toElement),
              (m = p),
              (v = v ? Pn(v) : null),
              v !== null &&
                ((N = Xn(v)), v !== N || (v.tag !== 5 && v.tag !== 6)) &&
                (v = null))
            : ((m = null), (v = p)),
          m !== v)
        ) {
          if (
            ((d = bf),
            (x = "onMouseLeave"),
            (g = "onMouseEnter"),
            (w = "mouse"),
            (e === "pointerout" || e === "pointerover") &&
              ((d = Mf),
              (x = "onPointerLeave"),
              (g = "onPointerEnter"),
              (w = "pointer")),
            (N = m == null ? c : di(m)),
            (h = v == null ? c : di(v)),
            (c = new d(x, w + "leave", m, t, u)),
            (c.target = N),
            (c.relatedTarget = h),
            (x = null),
            Pn(u) === p &&
              ((d = new d(g, w + "enter", v, t, u)),
              (d.target = h),
              (d.relatedTarget = N),
              (x = d)),
            (N = x),
            m && v)
          )
            r: {
              for (d = m, g = v, w = 0, h = d; h; h = ii(h)) w++;
              for (h = 0, x = g; x; x = ii(x)) h++;
              for (; 0 < w - h; ) (d = ii(d)), w--;
              for (; 0 < h - w; ) (g = ii(g)), h--;
              for (; w--; ) {
                if (d === g || (g !== null && d === g.alternate)) break r;
                (d = ii(d)), (g = ii(g));
              }
              d = null;
            }
          else d = null;
          m !== null && $f(o, c, m, d, !1),
            v !== null && N !== null && $f(o, N, v, d, !0);
        }
      }
      e: {
        if (
          ((c = p ? di(p) : window),
          (m = c.nodeName && c.nodeName.toLowerCase()),
          m === "select" || (m === "input" && c.type === "file"))
        )
          var b = Rw;
        else if (Ef(c))
          if (wg) b = kw;
          else {
            b = Pw;
            var y = Fw;
          }
        else
          (m = c.nodeName) &&
            m.toLowerCase() === "input" &&
            (c.type === "checkbox" || c.type === "radio") &&
            (b = Lw);
        if (b && (b = b(e, p))) {
          xg(o, b, t, u);
          break e;
        }
        y && y(e, c, p),
          e === "focusout" &&
            (y = c._wrapperState) &&
            y.controlled &&
            c.type === "number" &&
            Hu(c, "number", c.value);
      }
      switch (((y = p ? di(p) : window), e)) {
        case "focusin":
          (Ef(y) || y.contentEditable === "true") &&
            ((mi = y), (rl = p), (wa = null));
          break;
        case "focusout":
          wa = rl = mi = null;
          break;
        case "mousedown":
          tl = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (tl = !1), _f(o, t, u);
          break;
        case "selectionchange":
          if (Hw) break;
        case "keydown":
        case "keyup":
          _f(o, t, u);
      }
      var A;
      if (sc)
        e: {
          switch (e) {
            case "compositionstart":
              var S = "onCompositionStart";
              break e;
            case "compositionend":
              S = "onCompositionEnd";
              break e;
            case "compositionupdate":
              S = "onCompositionUpdate";
              break e;
          }
          S = void 0;
        }
      else
        pi
          ? gg(e, t) && (S = "onCompositionEnd")
          : e === "keydown" && t.keyCode === 229 && (S = "onCompositionStart");
      S &&
        (hg &&
          t.locale !== "ko" &&
          (pi || S !== "onCompositionStart"
            ? S === "onCompositionEnd" && pi && (A = dg())
            : ((ln = u),
              (ic = "value" in ln ? ln.value : ln.textContent),
              (pi = !0))),
        (y = Zo(p, S)),
        0 < y.length &&
          ((S = new Nf(S, e, null, t, u)),
          o.push({ event: S, listeners: y }),
          A ? (S.data = A) : ((A = yg(t)), A !== null && (S.data = A)))),
        (A = _w ? Bw(e, t) : Iw(e, t)) &&
          ((p = Zo(p, "onBeforeInput")),
          0 < p.length &&
            ((u = new Nf("onBeforeInput", "beforeinput", null, t, u)),
            o.push({ event: u, listeners: p }),
            (u.data = A)));
    }
    Dg(o, r);
  });
}
function za(e, r, t) {
  return { instance: e, listener: r, currentTarget: t };
}
function Zo(e, r) {
  for (var t = r + "Capture", n = []; e !== null; ) {
    var i = e,
      a = i.stateNode;
    i.tag === 5 &&
      a !== null &&
      ((i = a),
      (a = Oa(e, t)),
      a != null && n.unshift(za(e, a, i)),
      (a = Oa(e, r)),
      a != null && n.push(za(e, a, i))),
      (e = e.return);
  }
  return n;
}
function ii(e) {
  if (e === null) return null;
  do e = e.return;
  while (e && e.tag !== 5);
  return e || null;
}
function $f(e, r, t, n, i) {
  for (var a = r._reactName, s = []; t !== null && t !== n; ) {
    var f = t,
      l = f.alternate,
      p = f.stateNode;
    if (l !== null && l === n) break;
    f.tag === 5 &&
      p !== null &&
      ((f = p),
      i
        ? ((l = Oa(t, a)), l != null && s.unshift(za(t, l, f)))
        : i || ((l = Oa(t, a)), l != null && s.push(za(t, l, f)))),
      (t = t.return);
  }
  s.length !== 0 && e.push({ event: r, listeners: s });
}
var Zw = /\r\n?/g,
  Qw = /\u0000|\uFFFD/g;
function zf(e) {
  return (typeof e == "string" ? e : "" + e)
    .replace(
      Zw,
      `
`
    )
    .replace(Qw, "");
}
function mo(e, r, t) {
  if (((r = zf(r)), zf(e) !== r && t)) throw Error(le(425));
}
function Qo() {}
var nl = null,
  il = null;
function al(e, r) {
  return (
    e === "textarea" ||
    e === "noscript" ||
    typeof r.children == "string" ||
    typeof r.children == "number" ||
    (typeof r.dangerouslySetInnerHTML == "object" &&
      r.dangerouslySetInnerHTML !== null &&
      r.dangerouslySetInnerHTML.__html != null)
  );
}
var ol = typeof setTimeout == "function" ? setTimeout : void 0,
  Yw = typeof clearTimeout == "function" ? clearTimeout : void 0,
  Rf = typeof Promise == "function" ? Promise : void 0,
  Xw =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof Rf != "undefined"
      ? function (e) {
          return Rf.resolve(null).then(e).catch(jw);
        }
      : ol;
function jw(e) {
  setTimeout(function () {
    throw e;
  });
}
function gu(e, r) {
  var t = r,
    n = 0;
  do {
    var i = t.nextSibling;
    if ((e.removeChild(t), i && i.nodeType === 8))
      if (((t = i.data), t === "/$")) {
        if (n === 0) {
          e.removeChild(i), _a(r);
          return;
        }
        n--;
      } else (t !== "$" && t !== "$?" && t !== "$!") || n++;
    t = i;
  } while (t);
  _a(r);
}
function gn(e) {
  for (; e != null; e = e.nextSibling) {
    var r = e.nodeType;
    if (r === 1 || r === 3) break;
    if (r === 8) {
      if (((r = e.data), r === "$" || r === "$!" || r === "$?")) break;
      if (r === "/$") return null;
    }
  }
  return e;
}
function Ff(e) {
  e = e.previousSibling;
  for (var r = 0; e; ) {
    if (e.nodeType === 8) {
      var t = e.data;
      if (t === "$" || t === "$!" || t === "$?") {
        if (r === 0) return e;
        r--;
      } else t === "/$" && r++;
    }
    e = e.previousSibling;
  }
  return null;
}
var Wi = Math.random().toString(36).slice(2),
  _t = "__reactFiber$" + Wi,
  Ra = "__reactProps$" + Wi,
  Yt = "__reactContainer$" + Wi,
  sl = "__reactEvents$" + Wi,
  Jw = "__reactListeners$" + Wi,
  Kw = "__reactHandles$" + Wi;
function Pn(e) {
  var r = e[_t];
  if (r) return r;
  for (var t = e.parentNode; t; ) {
    if ((r = t[Yt] || t[_t])) {
      if (
        ((t = r.alternate),
        r.child !== null || (t !== null && t.child !== null))
      )
        for (e = Ff(e); e !== null; ) {
          if ((t = e[_t])) return t;
          e = Ff(e);
        }
      return r;
    }
    (e = t), (t = e.parentNode);
  }
  return null;
}
function ja(e) {
  return (
    (e = e[_t] || e[Yt]),
    !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3) ? null : e
  );
}
function di(e) {
  if (e.tag === 5 || e.tag === 6) return e.stateNode;
  throw Error(le(33));
}
function As(e) {
  return e[Ra] || null;
}
var ul = [],
  hi = -1;
function Dn(e) {
  return { current: e };
}
function tr(e) {
  0 > hi || ((e.current = ul[hi]), (ul[hi] = null), hi--);
}
function Ke(e, r) {
  hi++, (ul[hi] = e.current), (e.current = r);
}
var Mn = {},
  Tr = Dn(Mn),
  Vr = Dn(!1),
  Vn = Mn;
function Ii(e, r) {
  var t = e.type.contextTypes;
  if (!t) return Mn;
  var n = e.stateNode;
  if (n && n.__reactInternalMemoizedUnmaskedChildContext === r)
    return n.__reactInternalMemoizedMaskedChildContext;
  var i = {},
    a;
  for (a in t) i[a] = r[a];
  return (
    n &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = r),
      (e.__reactInternalMemoizedMaskedChildContext = i)),
    i
  );
}
function Gr(e) {
  return (e = e.childContextTypes), e != null;
}
function Yo() {
  tr(Vr), tr(Tr);
}
function Pf(e, r, t) {
  if (Tr.current !== Mn) throw Error(le(168));
  Ke(Tr, r), Ke(Vr, t);
}
function Bg(e, r, t) {
  var n = e.stateNode;
  if (((r = r.childContextTypes), typeof n.getChildContext != "function"))
    return t;
  n = n.getChildContext();
  for (var i in n) if (!(i in r)) throw Error(le(108, Fx(e) || "Unknown", i));
  return sr({}, t, n);
}
function Xo(e) {
  return (
    (e =
      ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || Mn),
    (Vn = Tr.current),
    Ke(Tr, e),
    Ke(Vr, Vr.current),
    !0
  );
}
function Lf(e, r, t) {
  var n = e.stateNode;
  if (!n) throw Error(le(169));
  t
    ? ((e = Bg(e, r, Vn)),
      (n.__reactInternalMemoizedMergedChildContext = e),
      tr(Vr),
      tr(Tr),
      Ke(Tr, e))
    : tr(Vr),
    Ke(Vr, t);
}
var kt = null,
  Es = !1,
  yu = !1;
function Ig(e) {
  kt === null ? (kt = [e]) : kt.push(e);
}
function eb(e) {
  (Es = !0), Ig(e);
}
function _n() {
  if (!yu && kt !== null) {
    yu = !0;
    var e = 0,
      r = Qe;
    try {
      var t = kt;
      for (Qe = 1; e < t.length; e++) {
        var n = t[e];
        do n = n(!0);
        while (n !== null);
      }
      (kt = null), (Es = !1);
    } catch (i) {
      throw (kt !== null && (kt = kt.slice(e + 1)), ig(ec, _n), i);
    } finally {
      (Qe = r), (yu = !1);
    }
  }
  return null;
}
var gi = [],
  yi = 0,
  jo = null,
  Jo = 0,
  ot = [],
  st = 0,
  Gn = null,
  Ut = 1,
  qt = "";
function Rn(e, r) {
  (gi[yi++] = Jo), (gi[yi++] = jo), (jo = e), (Jo = r);
}
function $g(e, r, t) {
  (ot[st++] = Ut), (ot[st++] = qt), (ot[st++] = Gn), (Gn = e);
  var n = Ut;
  e = qt;
  var i = 32 - wt(n) - 1;
  (n &= ~(1 << i)), (t += 1);
  var a = 32 - wt(r) + i;
  if (30 < a) {
    var s = i - (i % 5);
    (a = (n & ((1 << s) - 1)).toString(32)),
      (n >>= s),
      (i -= s),
      (Ut = (1 << (32 - wt(r) + i)) | (t << i) | n),
      (qt = a + e);
  } else (Ut = (1 << a) | (t << i) | n), (qt = e);
}
function lc(e) {
  e.return !== null && (Rn(e, 1), $g(e, 1, 0));
}
function cc(e) {
  for (; e === jo; )
    (jo = gi[--yi]), (gi[yi] = null), (Jo = gi[--yi]), (gi[yi] = null);
  for (; e === Gn; )
    (Gn = ot[--st]),
      (ot[st] = null),
      (qt = ot[--st]),
      (ot[st] = null),
      (Ut = ot[--st]),
      (ot[st] = null);
}
var Kr = null,
  Jr = null,
  nr = !1,
  yt = null;
function zg(e, r) {
  var t = lt(5, null, null, 0);
  (t.elementType = "DELETED"),
    (t.stateNode = r),
    (t.return = e),
    (r = e.deletions),
    r === null ? ((e.deletions = [t]), (e.flags |= 16)) : r.push(t);
}
function kf(e, r) {
  switch (e.tag) {
    case 5:
      var t = e.type;
      return (
        (r =
          r.nodeType !== 1 || t.toLowerCase() !== r.nodeName.toLowerCase()
            ? null
            : r),
        r !== null
          ? ((e.stateNode = r), (Kr = e), (Jr = gn(r.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (r = e.pendingProps === "" || r.nodeType !== 3 ? null : r),
        r !== null ? ((e.stateNode = r), (Kr = e), (Jr = null), !0) : !1
      );
    case 13:
      return (
        (r = r.nodeType !== 8 ? null : r),
        r !== null
          ? ((t = Gn !== null ? { id: Ut, overflow: qt } : null),
            (e.memoizedState = {
              dehydrated: r,
              treeContext: t,
              retryLane: 1073741824,
            }),
            (t = lt(18, null, null, 0)),
            (t.stateNode = r),
            (t.return = e),
            (e.child = t),
            (Kr = e),
            (Jr = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function ll(e) {
  return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function cl(e) {
  if (nr) {
    var r = Jr;
    if (r) {
      var t = r;
      if (!kf(e, r)) {
        if (ll(e)) throw Error(le(418));
        r = gn(t.nextSibling);
        var n = Kr;
        r && kf(e, r)
          ? zg(n, t)
          : ((e.flags = (e.flags & -4097) | 2), (nr = !1), (Kr = e));
      }
    } else {
      if (ll(e)) throw Error(le(418));
      (e.flags = (e.flags & -4097) | 2), (nr = !1), (Kr = e);
    }
  }
}
function Uf(e) {
  for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; )
    e = e.return;
  Kr = e;
}
function vo(e) {
  if (e !== Kr) return !1;
  if (!nr) return Uf(e), (nr = !0), !1;
  var r;
  if (
    ((r = e.tag !== 3) &&
      !(r = e.tag !== 5) &&
      ((r = e.type),
      (r = r !== "head" && r !== "body" && !al(e.type, e.memoizedProps))),
    r && (r = Jr))
  ) {
    if (ll(e)) throw (Rg(), Error(le(418)));
    for (; r; ) zg(e, r), (r = gn(r.nextSibling));
  }
  if ((Uf(e), e.tag === 13)) {
    if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e))
      throw Error(le(317));
    e: {
      for (e = e.nextSibling, r = 0; e; ) {
        if (e.nodeType === 8) {
          var t = e.data;
          if (t === "/$") {
            if (r === 0) {
              Jr = gn(e.nextSibling);
              break e;
            }
            r--;
          } else (t !== "$" && t !== "$!" && t !== "$?") || r++;
        }
        e = e.nextSibling;
      }
      Jr = null;
    }
  } else Jr = Kr ? gn(e.stateNode.nextSibling) : null;
  return !0;
}
function Rg() {
  for (var e = Jr; e; ) e = gn(e.nextSibling);
}
function $i() {
  (Jr = Kr = null), (nr = !1);
}
function fc(e) {
  yt === null ? (yt = [e]) : yt.push(e);
}
var rb = Kt.ReactCurrentBatchConfig;
function ht(e, r) {
  if (e && e.defaultProps) {
    (r = sr({}, r)), (e = e.defaultProps);
    for (var t in e) r[t] === void 0 && (r[t] = e[t]);
    return r;
  }
  return r;
}
var Ko = Dn(null),
  es = null,
  xi = null,
  pc = null;
function mc() {
  pc = xi = es = null;
}
function vc(e) {
  var r = Ko.current;
  tr(Ko), (e._currentValue = r);
}
function fl(e, r, t) {
  for (; e !== null; ) {
    var n = e.alternate;
    if (
      ((e.childLanes & r) !== r
        ? ((e.childLanes |= r), n !== null && (n.childLanes |= r))
        : n !== null && (n.childLanes & r) !== r && (n.childLanes |= r),
      e === t)
    )
      break;
    e = e.return;
  }
}
function Ci(e, r) {
  (es = e),
    (pc = xi = null),
    (e = e.dependencies),
    e !== null &&
      e.firstContext !== null &&
      ((e.lanes & r) !== 0 && (Hr = !0), (e.firstContext = null));
}
function ft(e) {
  var r = e._currentValue;
  if (pc !== e)
    if (((e = { context: e, memoizedValue: r, next: null }), xi === null)) {
      if (es === null) throw Error(le(308));
      (xi = e), (es.dependencies = { lanes: 0, firstContext: e });
    } else xi = xi.next = e;
  return r;
}
var Ln = null;
function dc(e) {
  Ln === null ? (Ln = [e]) : Ln.push(e);
}
function Fg(e, r, t, n) {
  var i = r.interleaved;
  return (
    i === null ? ((t.next = t), dc(r)) : ((t.next = i.next), (i.next = t)),
    (r.interleaved = t),
    Xt(e, n)
  );
}
function Xt(e, r) {
  e.lanes |= r;
  var t = e.alternate;
  for (t !== null && (t.lanes |= r), t = e, e = e.return; e !== null; )
    (e.childLanes |= r),
      (t = e.alternate),
      t !== null && (t.childLanes |= r),
      (t = e),
      (e = e.return);
  return t.tag === 3 ? t.stateNode : null;
}
var nn = !1;
function hc(e) {
  e.updateQueue = {
    baseState: e.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function Pg(e, r) {
  (e = e.updateQueue),
    r.updateQueue === e &&
      (r.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects,
      });
}
function Wt(e, r) {
  return {
    eventTime: e,
    lane: r,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function yn(e, r, t) {
  var n = e.updateQueue;
  if (n === null) return null;
  if (((n = n.shared), (Ue & 2) !== 0)) {
    var i = n.pending;
    return (
      i === null ? (r.next = r) : ((r.next = i.next), (i.next = r)),
      (n.pending = r),
      Xt(e, t)
    );
  }
  return (
    (i = n.interleaved),
    i === null ? ((r.next = r), dc(n)) : ((r.next = i.next), (i.next = r)),
    (n.interleaved = r),
    Xt(e, t)
  );
}
function _o(e, r, t) {
  if (
    ((r = r.updateQueue), r !== null && ((r = r.shared), (t & 4194240) !== 0))
  ) {
    var n = r.lanes;
    (n &= e.pendingLanes), (t |= n), (r.lanes = t), rc(e, t);
  }
}
function qf(e, r) {
  var t = e.updateQueue,
    n = e.alternate;
  if (n !== null && ((n = n.updateQueue), t === n)) {
    var i = null,
      a = null;
    if (((t = t.firstBaseUpdate), t !== null)) {
      do {
        var s = {
          eventTime: t.eventTime,
          lane: t.lane,
          tag: t.tag,
          payload: t.payload,
          callback: t.callback,
          next: null,
        };
        a === null ? (i = a = s) : (a = a.next = s), (t = t.next);
      } while (t !== null);
      a === null ? (i = a = r) : (a = a.next = r);
    } else i = a = r;
    (t = {
      baseState: n.baseState,
      firstBaseUpdate: i,
      lastBaseUpdate: a,
      shared: n.shared,
      effects: n.effects,
    }),
      (e.updateQueue = t);
    return;
  }
  (e = t.lastBaseUpdate),
    e === null ? (t.firstBaseUpdate = r) : (e.next = r),
    (t.lastBaseUpdate = r);
}
function rs(e, r, t, n) {
  var i = e.updateQueue;
  nn = !1;
  var a = i.firstBaseUpdate,
    s = i.lastBaseUpdate,
    f = i.shared.pending;
  if (f !== null) {
    i.shared.pending = null;
    var l = f,
      p = l.next;
    (l.next = null), s === null ? (a = p) : (s.next = p), (s = l);
    var u = e.alternate;
    u !== null &&
      ((u = u.updateQueue),
      (f = u.lastBaseUpdate),
      f !== s &&
        (f === null ? (u.firstBaseUpdate = p) : (f.next = p),
        (u.lastBaseUpdate = l)));
  }
  if (a !== null) {
    var o = i.baseState;
    (s = 0), (u = p = l = null), (f = a);
    do {
      var c = f.lane,
        m = f.eventTime;
      if ((n & c) === c) {
        u !== null &&
          (u = u.next =
            {
              eventTime: m,
              lane: 0,
              tag: f.tag,
              payload: f.payload,
              callback: f.callback,
              next: null,
            });
        e: {
          var v = e,
            d = f;
          switch (((c = r), (m = t), d.tag)) {
            case 1:
              if (((v = d.payload), typeof v == "function")) {
                o = v.call(m, o, c);
                break e;
              }
              o = v;
              break e;
            case 3:
              v.flags = (v.flags & -65537) | 128;
            case 0:
              if (
                ((v = d.payload),
                (c = typeof v == "function" ? v.call(m, o, c) : v),
                c == null)
              )
                break e;
              o = sr({}, o, c);
              break e;
            case 2:
              nn = !0;
          }
        }
        f.callback !== null &&
          f.lane !== 0 &&
          ((e.flags |= 64),
          (c = i.effects),
          c === null ? (i.effects = [f]) : c.push(f));
      } else
        (m = {
          eventTime: m,
          lane: c,
          tag: f.tag,
          payload: f.payload,
          callback: f.callback,
          next: null,
        }),
          u === null ? ((p = u = m), (l = o)) : (u = u.next = m),
          (s |= c);
      if (((f = f.next), f === null)) {
        if (((f = i.shared.pending), f === null)) break;
        (c = f),
          (f = c.next),
          (c.next = null),
          (i.lastBaseUpdate = c),
          (i.shared.pending = null);
      }
    } while (1);
    if (
      (u === null && (l = o),
      (i.baseState = l),
      (i.firstBaseUpdate = p),
      (i.lastBaseUpdate = u),
      (r = i.shared.interleaved),
      r !== null)
    ) {
      i = r;
      do (s |= i.lane), (i = i.next);
      while (i !== r);
    } else a === null && (i.shared.lanes = 0);
    (Zn |= s), (e.lanes = s), (e.memoizedState = o);
  }
}
function Hf(e, r, t) {
  if (((e = r.effects), (r.effects = null), e !== null))
    for (r = 0; r < e.length; r++) {
      var n = e[r],
        i = n.callback;
      if (i !== null) {
        if (((n.callback = null), (n = t), typeof i != "function"))
          throw Error(le(191, i));
        i.call(n);
      }
    }
}
var Lg = new Fh.Component().refs;
function pl(e, r, t, n) {
  (r = e.memoizedState),
    (t = t(n, r)),
    (t = t == null ? r : sr({}, r, t)),
    (e.memoizedState = t),
    e.lanes === 0 && (e.updateQueue.baseState = t);
}
var Cs = {
  isMounted: function (e) {
    return (e = e._reactInternals) ? Xn(e) === e : !1;
  },
  enqueueSetState: function (e, r, t) {
    e = e._reactInternals;
    var n = zr(),
      i = wn(e),
      a = Wt(n, i);
    (a.payload = r),
      t != null && (a.callback = t),
      (r = yn(e, a, i)),
      r !== null && (bt(r, e, i, n), _o(r, e, i));
  },
  enqueueReplaceState: function (e, r, t) {
    e = e._reactInternals;
    var n = zr(),
      i = wn(e),
      a = Wt(n, i);
    (a.tag = 1),
      (a.payload = r),
      t != null && (a.callback = t),
      (r = yn(e, a, i)),
      r !== null && (bt(r, e, i, n), _o(r, e, i));
  },
  enqueueForceUpdate: function (e, r) {
    e = e._reactInternals;
    var t = zr(),
      n = wn(e),
      i = Wt(t, n);
    (i.tag = 2),
      r != null && (i.callback = r),
      (r = yn(e, i, n)),
      r !== null && (bt(r, e, n, t), _o(r, e, n));
  },
};
function Vf(e, r, t, n, i, a, s) {
  return (
    (e = e.stateNode),
    typeof e.shouldComponentUpdate == "function"
      ? e.shouldComponentUpdate(n, a, s)
      : r.prototype && r.prototype.isPureReactComponent
      ? !Ia(t, n) || !Ia(i, a)
      : !0
  );
}
function kg(e, r, t) {
  var n = !1,
    i = Mn,
    a = r.contextType;
  return (
    typeof a == "object" && a !== null
      ? (a = ft(a))
      : ((i = Gr(r) ? Vn : Tr.current),
        (n = r.contextTypes),
        (a = (n = n != null) ? Ii(e, i) : Mn)),
    (r = new r(t, a)),
    (e.memoizedState = r.state !== null && r.state !== void 0 ? r.state : null),
    (r.updater = Cs),
    (e.stateNode = r),
    (r._reactInternals = e),
    n &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = i),
      (e.__reactInternalMemoizedMaskedChildContext = a)),
    r
  );
}
function Gf(e, r, t, n) {
  (e = r.state),
    typeof r.componentWillReceiveProps == "function" &&
      r.componentWillReceiveProps(t, n),
    typeof r.UNSAFE_componentWillReceiveProps == "function" &&
      r.UNSAFE_componentWillReceiveProps(t, n),
    r.state !== e && Cs.enqueueReplaceState(r, r.state, null);
}
function ml(e, r, t, n) {
  var i = e.stateNode;
  (i.props = t), (i.state = e.memoizedState), (i.refs = Lg), hc(e);
  var a = r.contextType;
  typeof a == "object" && a !== null
    ? (i.context = ft(a))
    : ((a = Gr(r) ? Vn : Tr.current), (i.context = Ii(e, a))),
    (i.state = e.memoizedState),
    (a = r.getDerivedStateFromProps),
    typeof a == "function" && (pl(e, r, a, t), (i.state = e.memoizedState)),
    typeof r.getDerivedStateFromProps == "function" ||
      typeof i.getSnapshotBeforeUpdate == "function" ||
      (typeof i.UNSAFE_componentWillMount != "function" &&
        typeof i.componentWillMount != "function") ||
      ((r = i.state),
      typeof i.componentWillMount == "function" && i.componentWillMount(),
      typeof i.UNSAFE_componentWillMount == "function" &&
        i.UNSAFE_componentWillMount(),
      r !== i.state && Cs.enqueueReplaceState(i, i.state, null),
      rs(e, t, i, n),
      (i.state = e.memoizedState)),
    typeof i.componentDidMount == "function" && (e.flags |= 4194308);
}
function ia(e, r, t) {
  if (
    ((e = t.ref), e !== null && typeof e != "function" && typeof e != "object")
  ) {
    if (t._owner) {
      if (((t = t._owner), t)) {
        if (t.tag !== 1) throw Error(le(309));
        var n = t.stateNode;
      }
      if (!n) throw Error(le(147, e));
      var i = n,
        a = "" + e;
      return r !== null &&
        r.ref !== null &&
        typeof r.ref == "function" &&
        r.ref._stringRef === a
        ? r.ref
        : ((r = function (s) {
            var f = i.refs;
            f === Lg && (f = i.refs = {}),
              s === null ? delete f[a] : (f[a] = s);
          }),
          (r._stringRef = a),
          r);
    }
    if (typeof e != "string") throw Error(le(284));
    if (!t._owner) throw Error(le(290, e));
  }
  return e;
}
function ho(e, r) {
  throw (
    ((e = Object.prototype.toString.call(r)),
    Error(
      le(
        31,
        e === "[object Object]"
          ? "object with keys {" + Object.keys(r).join(", ") + "}"
          : e
      )
    ))
  );
}
function Wf(e) {
  var r = e._init;
  return r(e._payload);
}
function Ug(e) {
  function r(g, w) {
    if (e) {
      var h = g.deletions;
      h === null ? ((g.deletions = [w]), (g.flags |= 16)) : h.push(w);
    }
  }
  function t(g, w) {
    if (!e) return null;
    for (; w !== null; ) r(g, w), (w = w.sibling);
    return null;
  }
  function n(g, w) {
    for (g = new Map(); w !== null; )
      w.key !== null ? g.set(w.key, w) : g.set(w.index, w), (w = w.sibling);
    return g;
  }
  function i(g, w) {
    return (g = bn(g, w)), (g.index = 0), (g.sibling = null), g;
  }
  function a(g, w, h) {
    return (
      (g.index = h),
      e
        ? ((h = g.alternate),
          h !== null
            ? ((h = h.index), h < w ? ((g.flags |= 2), w) : h)
            : ((g.flags |= 2), w))
        : ((g.flags |= 1048576), w)
    );
  }
  function s(g) {
    return e && g.alternate === null && (g.flags |= 2), g;
  }
  function f(g, w, h, x) {
    return w === null || w.tag !== 6
      ? ((w = Au(h, g.mode, x)), (w.return = g), w)
      : ((w = i(w, h)), (w.return = g), w);
  }
  function l(g, w, h, x) {
    var b = h.type;
    return b === fi
      ? u(g, w, h.props.children, x, h.key)
      : w !== null &&
        (w.elementType === b ||
          (typeof b == "object" &&
            b !== null &&
            b.$$typeof === tn &&
            Wf(b) === w.type))
      ? ((x = i(w, h.props)), (x.ref = ia(g, w, h)), (x.return = g), x)
      : ((x = Fo(h.type, h.key, h.props, null, g.mode, x)),
        (x.ref = ia(g, w, h)),
        (x.return = g),
        x);
  }
  function p(g, w, h, x) {
    return w === null ||
      w.tag !== 4 ||
      w.stateNode.containerInfo !== h.containerInfo ||
      w.stateNode.implementation !== h.implementation
      ? ((w = Eu(h, g.mode, x)), (w.return = g), w)
      : ((w = i(w, h.children || [])), (w.return = g), w);
  }
  function u(g, w, h, x, b) {
    return w === null || w.tag !== 7
      ? ((w = qn(h, g.mode, x, b)), (w.return = g), w)
      : ((w = i(w, h)), (w.return = g), w);
  }
  function o(g, w, h) {
    if ((typeof w == "string" && w !== "") || typeof w == "number")
      return (w = Au("" + w, g.mode, h)), (w.return = g), w;
    if (typeof w == "object" && w !== null) {
      switch (w.$$typeof) {
        case io:
          return (
            (h = Fo(w.type, w.key, w.props, null, g.mode, h)),
            (h.ref = ia(g, null, w)),
            (h.return = g),
            h
          );
        case ci:
          return (w = Eu(w, g.mode, h)), (w.return = g), w;
        case tn:
          var x = w._init;
          return o(g, x(w._payload), h);
      }
      if (ca(w) || Ki(w))
        return (w = qn(w, g.mode, h, null)), (w.return = g), w;
      ho(g, w);
    }
    return null;
  }
  function c(g, w, h, x) {
    var b = w !== null ? w.key : null;
    if ((typeof h == "string" && h !== "") || typeof h == "number")
      return b !== null ? null : f(g, w, "" + h, x);
    if (typeof h == "object" && h !== null) {
      switch (h.$$typeof) {
        case io:
          return h.key === b ? l(g, w, h, x) : null;
        case ci:
          return h.key === b ? p(g, w, h, x) : null;
        case tn:
          return (b = h._init), c(g, w, b(h._payload), x);
      }
      if (ca(h) || Ki(h)) return b !== null ? null : u(g, w, h, x, null);
      ho(g, h);
    }
    return null;
  }
  function m(g, w, h, x, b) {
    if ((typeof x == "string" && x !== "") || typeof x == "number")
      return (g = g.get(h) || null), f(w, g, "" + x, b);
    if (typeof x == "object" && x !== null) {
      switch (x.$$typeof) {
        case io:
          return (g = g.get(x.key === null ? h : x.key) || null), l(w, g, x, b);
        case ci:
          return (g = g.get(x.key === null ? h : x.key) || null), p(w, g, x, b);
        case tn:
          var y = x._init;
          return m(g, w, h, y(x._payload), b);
      }
      if (ca(x) || Ki(x)) return (g = g.get(h) || null), u(w, g, x, b, null);
      ho(w, x);
    }
    return null;
  }
  function v(g, w, h, x) {
    for (
      var b = null, y = null, A = w, S = (w = 0), E = null;
      A !== null && S < h.length;
      S++
    ) {
      A.index > S ? ((E = A), (A = null)) : (E = A.sibling);
      var M = c(g, A, h[S], x);
      if (M === null) {
        A === null && (A = E);
        break;
      }
      e && A && M.alternate === null && r(g, A),
        (w = a(M, w, S)),
        y === null ? (b = M) : (y.sibling = M),
        (y = M),
        (A = E);
    }
    if (S === h.length) return t(g, A), nr && Rn(g, S), b;
    if (A === null) {
      for (; S < h.length; S++)
        (A = o(g, h[S], x)),
          A !== null &&
            ((w = a(A, w, S)), y === null ? (b = A) : (y.sibling = A), (y = A));
      return nr && Rn(g, S), b;
    }
    for (A = n(g, A); S < h.length; S++)
      (E = m(A, g, S, h[S], x)),
        E !== null &&
          (e && E.alternate !== null && A.delete(E.key === null ? S : E.key),
          (w = a(E, w, S)),
          y === null ? (b = E) : (y.sibling = E),
          (y = E));
    return (
      e &&
        A.forEach(function (_) {
          return r(g, _);
        }),
      nr && Rn(g, S),
      b
    );
  }
  function d(g, w, h, x) {
    var b = Ki(h);
    if (typeof b != "function") throw Error(le(150));
    if (((h = b.call(h)), h == null)) throw Error(le(151));
    for (
      var y = (b = null), A = w, S = (w = 0), E = null, M = h.next();
      A !== null && !M.done;
      S++, M = h.next()
    ) {
      A.index > S ? ((E = A), (A = null)) : (E = A.sibling);
      var _ = c(g, A, M.value, x);
      if (_ === null) {
        A === null && (A = E);
        break;
      }
      e && A && _.alternate === null && r(g, A),
        (w = a(_, w, S)),
        y === null ? (b = _) : (y.sibling = _),
        (y = _),
        (A = E);
    }
    if (M.done) return t(g, A), nr && Rn(g, S), b;
    if (A === null) {
      for (; !M.done; S++, M = h.next())
        (M = o(g, M.value, x)),
          M !== null &&
            ((w = a(M, w, S)), y === null ? (b = M) : (y.sibling = M), (y = M));
      return nr && Rn(g, S), b;
    }
    for (A = n(g, A); !M.done; S++, M = h.next())
      (M = m(A, g, S, M.value, x)),
        M !== null &&
          (e && M.alternate !== null && A.delete(M.key === null ? S : M.key),
          (w = a(M, w, S)),
          y === null ? (b = M) : (y.sibling = M),
          (y = M));
    return (
      e &&
        A.forEach(function (C) {
          return r(g, C);
        }),
      nr && Rn(g, S),
      b
    );
  }
  function N(g, w, h, x) {
    if (
      (typeof h == "object" &&
        h !== null &&
        h.type === fi &&
        h.key === null &&
        (h = h.props.children),
      typeof h == "object" && h !== null)
    ) {
      switch (h.$$typeof) {
        case io:
          e: {
            for (var b = h.key, y = w; y !== null; ) {
              if (y.key === b) {
                if (((b = h.type), b === fi)) {
                  if (y.tag === 7) {
                    t(g, y.sibling),
                      (w = i(y, h.props.children)),
                      (w.return = g),
                      (g = w);
                    break e;
                  }
                } else if (
                  y.elementType === b ||
                  (typeof b == "object" &&
                    b !== null &&
                    b.$$typeof === tn &&
                    Wf(b) === y.type)
                ) {
                  t(g, y.sibling),
                    (w = i(y, h.props)),
                    (w.ref = ia(g, y, h)),
                    (w.return = g),
                    (g = w);
                  break e;
                }
                t(g, y);
                break;
              } else r(g, y);
              y = y.sibling;
            }
            h.type === fi
              ? ((w = qn(h.props.children, g.mode, x, h.key)),
                (w.return = g),
                (g = w))
              : ((x = Fo(h.type, h.key, h.props, null, g.mode, x)),
                (x.ref = ia(g, w, h)),
                (x.return = g),
                (g = x));
          }
          return s(g);
        case ci:
          e: {
            for (y = h.key; w !== null; ) {
              if (w.key === y)
                if (
                  w.tag === 4 &&
                  w.stateNode.containerInfo === h.containerInfo &&
                  w.stateNode.implementation === h.implementation
                ) {
                  t(g, w.sibling),
                    (w = i(w, h.children || [])),
                    (w.return = g),
                    (g = w);
                  break e;
                } else {
                  t(g, w);
                  break;
                }
              else r(g, w);
              w = w.sibling;
            }
            (w = Eu(h, g.mode, x)), (w.return = g), (g = w);
          }
          return s(g);
        case tn:
          return (y = h._init), N(g, w, y(h._payload), x);
      }
      if (ca(h)) return v(g, w, h, x);
      if (Ki(h)) return d(g, w, h, x);
      ho(g, h);
    }
    return (typeof h == "string" && h !== "") || typeof h == "number"
      ? ((h = "" + h),
        w !== null && w.tag === 6
          ? (t(g, w.sibling), (w = i(w, h)), (w.return = g), (g = w))
          : (t(g, w), (w = Au(h, g.mode, x)), (w.return = g), (g = w)),
        s(g))
      : t(g, w);
  }
  return N;
}
var zi = Ug(!0),
  qg = Ug(!1),
  Ja = {},
  It = Dn(Ja),
  Fa = Dn(Ja),
  Pa = Dn(Ja);
function kn(e) {
  if (e === Ja) throw Error(le(174));
  return e;
}
function gc(e, r) {
  switch ((Ke(Pa, r), Ke(Fa, e), Ke(It, Ja), (e = r.nodeType), e)) {
    case 9:
    case 11:
      r = (r = r.documentElement) ? r.namespaceURI : Gu(null, "");
      break;
    default:
      (e = e === 8 ? r.parentNode : r),
        (r = e.namespaceURI || null),
        (e = e.tagName),
        (r = Gu(r, e));
  }
  tr(It), Ke(It, r);
}
function Ri() {
  tr(It), tr(Fa), tr(Pa);
}
function Hg(e) {
  kn(Pa.current);
  var r = kn(It.current),
    t = Gu(r, e.type);
  r !== t && (Ke(Fa, e), Ke(It, t));
}
function yc(e) {
  Fa.current === e && (tr(It), tr(Fa));
}
var ar = Dn(0);
function ts(e) {
  for (var r = e; r !== null; ) {
    if (r.tag === 13) {
      var t = r.memoizedState;
      if (
        t !== null &&
        ((t = t.dehydrated), t === null || t.data === "$?" || t.data === "$!")
      )
        return r;
    } else if (r.tag === 19 && r.memoizedProps.revealOrder !== void 0) {
      if ((r.flags & 128) !== 0) return r;
    } else if (r.child !== null) {
      (r.child.return = r), (r = r.child);
      continue;
    }
    if (r === e) break;
    for (; r.sibling === null; ) {
      if (r.return === null || r.return === e) return null;
      r = r.return;
    }
    (r.sibling.return = r.return), (r = r.sibling);
  }
  return null;
}
var xu = [];
function xc() {
  for (var e = 0; e < xu.length; e++)
    xu[e]._workInProgressVersionPrimary = null;
  xu.length = 0;
}
var Bo = Kt.ReactCurrentDispatcher,
  wu = Kt.ReactCurrentBatchConfig,
  Wn = 0,
  or = null,
  mr = null,
  hr = null,
  ns = !1,
  ba = !1,
  La = 0,
  tb = 0;
function Er() {
  throw Error(le(321));
}
function wc(e, r) {
  if (r === null) return !1;
  for (var t = 0; t < r.length && t < e.length; t++)
    if (!St(e[t], r[t])) return !1;
  return !0;
}
function bc(e, r, t, n, i, a) {
  if (
    ((Wn = a),
    (or = r),
    (r.memoizedState = null),
    (r.updateQueue = null),
    (r.lanes = 0),
    (Bo.current = e === null || e.memoizedState === null ? ob : sb),
    (e = t(n, i)),
    ba)
  ) {
    a = 0;
    do {
      if (((ba = !1), (La = 0), 25 <= a)) throw Error(le(301));
      (a += 1),
        (hr = mr = null),
        (r.updateQueue = null),
        (Bo.current = ub),
        (e = t(n, i));
    } while (ba);
  }
  if (
    ((Bo.current = is),
    (r = mr !== null && mr.next !== null),
    (Wn = 0),
    (hr = mr = or = null),
    (ns = !1),
    r)
  )
    throw Error(le(300));
  return e;
}
function Nc() {
  var e = La !== 0;
  return (La = 0), e;
}
function Tt() {
  var e = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return hr === null ? (or.memoizedState = hr = e) : (hr = hr.next = e), hr;
}
function pt() {
  if (mr === null) {
    var e = or.alternate;
    e = e !== null ? e.memoizedState : null;
  } else e = mr.next;
  var r = hr === null ? or.memoizedState : hr.next;
  if (r !== null) (hr = r), (mr = e);
  else {
    if (e === null) throw Error(le(310));
    (mr = e),
      (e = {
        memoizedState: mr.memoizedState,
        baseState: mr.baseState,
        baseQueue: mr.baseQueue,
        queue: mr.queue,
        next: null,
      }),
      hr === null ? (or.memoizedState = hr = e) : (hr = hr.next = e);
  }
  return hr;
}
function ka(e, r) {
  return typeof r == "function" ? r(e) : r;
}
function bu(e) {
  var r = pt(),
    t = r.queue;
  if (t === null) throw Error(le(311));
  t.lastRenderedReducer = e;
  var n = mr,
    i = n.baseQueue,
    a = t.pending;
  if (a !== null) {
    if (i !== null) {
      var s = i.next;
      (i.next = a.next), (a.next = s);
    }
    (n.baseQueue = i = a), (t.pending = null);
  }
  if (i !== null) {
    (a = i.next), (n = n.baseState);
    var f = (s = null),
      l = null,
      p = a;
    do {
      var u = p.lane;
      if ((Wn & u) === u)
        l !== null &&
          (l = l.next =
            {
              lane: 0,
              action: p.action,
              hasEagerState: p.hasEagerState,
              eagerState: p.eagerState,
              next: null,
            }),
          (n = p.hasEagerState ? p.eagerState : e(n, p.action));
      else {
        var o = {
          lane: u,
          action: p.action,
          hasEagerState: p.hasEagerState,
          eagerState: p.eagerState,
          next: null,
        };
        l === null ? ((f = l = o), (s = n)) : (l = l.next = o),
          (or.lanes |= u),
          (Zn |= u);
      }
      p = p.next;
    } while (p !== null && p !== a);
    l === null ? (s = n) : (l.next = f),
      St(n, r.memoizedState) || (Hr = !0),
      (r.memoizedState = n),
      (r.baseState = s),
      (r.baseQueue = l),
      (t.lastRenderedState = n);
  }
  if (((e = t.interleaved), e !== null)) {
    i = e;
    do (a = i.lane), (or.lanes |= a), (Zn |= a), (i = i.next);
    while (i !== e);
  } else i === null && (t.lanes = 0);
  return [r.memoizedState, t.dispatch];
}
function Nu(e) {
  var r = pt(),
    t = r.queue;
  if (t === null) throw Error(le(311));
  t.lastRenderedReducer = e;
  var n = t.dispatch,
    i = t.pending,
    a = r.memoizedState;
  if (i !== null) {
    t.pending = null;
    var s = (i = i.next);
    do (a = e(a, s.action)), (s = s.next);
    while (s !== i);
    St(a, r.memoizedState) || (Hr = !0),
      (r.memoizedState = a),
      r.baseQueue === null && (r.baseState = a),
      (t.lastRenderedState = a);
  }
  return [a, n];
}
function Vg() {}
function Gg(e, r) {
  var t = or,
    n = pt(),
    i = r(),
    a = !St(n.memoizedState, i);
  if (
    (a && ((n.memoizedState = i), (Hr = !0)),
    (n = n.queue),
    Mc(Qg.bind(null, t, n, e), [e]),
    n.getSnapshot !== r || a || (hr !== null && hr.memoizedState.tag & 1))
  ) {
    if (
      ((t.flags |= 2048),
      Ua(9, Zg.bind(null, t, n, i, r), void 0, null),
      yr === null)
    )
      throw Error(le(349));
    (Wn & 30) !== 0 || Wg(t, r, i);
  }
  return i;
}
function Wg(e, r, t) {
  (e.flags |= 16384),
    (e = { getSnapshot: r, value: t }),
    (r = or.updateQueue),
    r === null
      ? ((r = { lastEffect: null, stores: null }),
        (or.updateQueue = r),
        (r.stores = [e]))
      : ((t = r.stores), t === null ? (r.stores = [e]) : t.push(e));
}
function Zg(e, r, t, n) {
  (r.value = t), (r.getSnapshot = n), Yg(r) && Xg(e);
}
function Qg(e, r, t) {
  return t(function () {
    Yg(r) && Xg(e);
  });
}
function Yg(e) {
  var r = e.getSnapshot;
  e = e.value;
  try {
    var t = r();
    return !St(e, t);
  } catch {
    return !0;
  }
}
function Xg(e) {
  var r = Xt(e, 1);
  r !== null && bt(r, e, 1, -1);
}
function Zf(e) {
  var r = Tt();
  return (
    typeof e == "function" && (e = e()),
    (r.memoizedState = r.baseState = e),
    (e = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: ka,
      lastRenderedState: e,
    }),
    (r.queue = e),
    (e = e.dispatch = ab.bind(null, or, e)),
    [r.memoizedState, e]
  );
}
function Ua(e, r, t, n) {
  return (
    (e = { tag: e, create: r, destroy: t, deps: n, next: null }),
    (r = or.updateQueue),
    r === null
      ? ((r = { lastEffect: null, stores: null }),
        (or.updateQueue = r),
        (r.lastEffect = e.next = e))
      : ((t = r.lastEffect),
        t === null
          ? (r.lastEffect = e.next = e)
          : ((n = t.next), (t.next = e), (e.next = n), (r.lastEffect = e))),
    e
  );
}
function jg() {
  return pt().memoizedState;
}
function Io(e, r, t, n) {
  var i = Tt();
  (or.flags |= e),
    (i.memoizedState = Ua(1 | r, t, void 0, n === void 0 ? null : n));
}
function Os(e, r, t, n) {
  var i = pt();
  n = n === void 0 ? null : n;
  var a = void 0;
  if (mr !== null) {
    var s = mr.memoizedState;
    if (((a = s.destroy), n !== null && wc(n, s.deps))) {
      i.memoizedState = Ua(r, t, a, n);
      return;
    }
  }
  (or.flags |= e), (i.memoizedState = Ua(1 | r, t, a, n));
}
function Qf(e, r) {
  return Io(8390656, 8, e, r);
}
function Mc(e, r) {
  return Os(2048, 8, e, r);
}
function Jg(e, r) {
  return Os(4, 2, e, r);
}
function Kg(e, r) {
  return Os(4, 4, e, r);
}
function ey(e, r) {
  if (typeof r == "function")
    return (
      (e = e()),
      r(e),
      function () {
        r(null);
      }
    );
  if (r != null)
    return (
      (e = e()),
      (r.current = e),
      function () {
        r.current = null;
      }
    );
}
function ry(e, r, t) {
  return (
    (t = t != null ? t.concat([e]) : null), Os(4, 4, ey.bind(null, r, e), t)
  );
}
function Sc() {}
function ty(e, r) {
  var t = pt();
  r = r === void 0 ? null : r;
  var n = t.memoizedState;
  return n !== null && r !== null && wc(r, n[1])
    ? n[0]
    : ((t.memoizedState = [e, r]), e);
}
function ny(e, r) {
  var t = pt();
  r = r === void 0 ? null : r;
  var n = t.memoizedState;
  return n !== null && r !== null && wc(r, n[1])
    ? n[0]
    : ((e = e()), (t.memoizedState = [e, r]), e);
}
function iy(e, r, t) {
  return (Wn & 21) === 0
    ? (e.baseState && ((e.baseState = !1), (Hr = !0)), (e.memoizedState = t))
    : (St(t, r) || ((t = sg()), (or.lanes |= t), (Zn |= t), (e.baseState = !0)),
      r);
}
function nb(e, r) {
  var t = Qe;
  (Qe = t !== 0 && 4 > t ? t : 4), e(!0);
  var n = wu.transition;
  wu.transition = {};
  try {
    e(!1), r();
  } finally {
    (Qe = t), (wu.transition = n);
  }
}
function ay() {
  return pt().memoizedState;
}
function ib(e, r, t) {
  var n = wn(e);
  if (
    ((t = {
      lane: n,
      action: t,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    oy(e))
  )
    sy(r, t);
  else if (((t = Fg(e, r, t, n)), t !== null)) {
    var i = zr();
    bt(t, e, n, i), uy(t, r, n);
  }
}
function ab(e, r, t) {
  var n = wn(e),
    i = { lane: n, action: t, hasEagerState: !1, eagerState: null, next: null };
  if (oy(e)) sy(r, i);
  else {
    var a = e.alternate;
    if (
      e.lanes === 0 &&
      (a === null || a.lanes === 0) &&
      ((a = r.lastRenderedReducer), a !== null)
    )
      try {
        var s = r.lastRenderedState,
          f = a(s, t);
        if (((i.hasEagerState = !0), (i.eagerState = f), St(f, s))) {
          var l = r.interleaved;
          l === null
            ? ((i.next = i), dc(r))
            : ((i.next = l.next), (l.next = i)),
            (r.interleaved = i);
          return;
        }
      } catch {
      } finally {
      }
    (t = Fg(e, r, i, n)),
      t !== null && ((i = zr()), bt(t, e, n, i), uy(t, r, n));
  }
}
function oy(e) {
  var r = e.alternate;
  return e === or || (r !== null && r === or);
}
function sy(e, r) {
  ba = ns = !0;
  var t = e.pending;
  t === null ? (r.next = r) : ((r.next = t.next), (t.next = r)),
    (e.pending = r);
}
function uy(e, r, t) {
  if ((t & 4194240) !== 0) {
    var n = r.lanes;
    (n &= e.pendingLanes), (t |= n), (r.lanes = t), rc(e, t);
  }
}
var is = {
    readContext: ft,
    useCallback: Er,
    useContext: Er,
    useEffect: Er,
    useImperativeHandle: Er,
    useInsertionEffect: Er,
    useLayoutEffect: Er,
    useMemo: Er,
    useReducer: Er,
    useRef: Er,
    useState: Er,
    useDebugValue: Er,
    useDeferredValue: Er,
    useTransition: Er,
    useMutableSource: Er,
    useSyncExternalStore: Er,
    useId: Er,
    unstable_isNewReconciler: !1,
  },
  ob = {
    readContext: ft,
    useCallback: function (e, r) {
      return (Tt().memoizedState = [e, r === void 0 ? null : r]), e;
    },
    useContext: ft,
    useEffect: Qf,
    useImperativeHandle: function (e, r, t) {
      return (
        (t = t != null ? t.concat([e]) : null),
        Io(4194308, 4, ey.bind(null, r, e), t)
      );
    },
    useLayoutEffect: function (e, r) {
      return Io(4194308, 4, e, r);
    },
    useInsertionEffect: function (e, r) {
      return Io(4, 2, e, r);
    },
    useMemo: function (e, r) {
      var t = Tt();
      return (
        (r = r === void 0 ? null : r), (e = e()), (t.memoizedState = [e, r]), e
      );
    },
    useReducer: function (e, r, t) {
      var n = Tt();
      return (
        (r = t !== void 0 ? t(r) : r),
        (n.memoizedState = n.baseState = r),
        (e = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: e,
          lastRenderedState: r,
        }),
        (n.queue = e),
        (e = e.dispatch = ib.bind(null, or, e)),
        [n.memoizedState, e]
      );
    },
    useRef: function (e) {
      var r = Tt();
      return (e = { current: e }), (r.memoizedState = e);
    },
    useState: Zf,
    useDebugValue: Sc,
    useDeferredValue: function (e) {
      return (Tt().memoizedState = e);
    },
    useTransition: function () {
      var e = Zf(!1),
        r = e[0];
      return (e = nb.bind(null, e[1])), (Tt().memoizedState = e), [r, e];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (e, r, t) {
      var n = or,
        i = Tt();
      if (nr) {
        if (t === void 0) throw Error(le(407));
        t = t();
      } else {
        if (((t = r()), yr === null)) throw Error(le(349));
        (Wn & 30) !== 0 || Wg(n, r, t);
      }
      i.memoizedState = t;
      var a = { value: t, getSnapshot: r };
      return (
        (i.queue = a),
        Qf(Qg.bind(null, n, a, e), [e]),
        (n.flags |= 2048),
        Ua(9, Zg.bind(null, n, a, t, r), void 0, null),
        t
      );
    },
    useId: function () {
      var e = Tt(),
        r = yr.identifierPrefix;
      if (nr) {
        var t = qt,
          n = Ut;
        (t = (n & ~(1 << (32 - wt(n) - 1))).toString(32) + t),
          (r = ":" + r + "R" + t),
          (t = La++),
          0 < t && (r += "H" + t.toString(32)),
          (r += ":");
      } else (t = tb++), (r = ":" + r + "r" + t.toString(32) + ":");
      return (e.memoizedState = r);
    },
    unstable_isNewReconciler: !1,
  },
  sb = {
    readContext: ft,
    useCallback: ty,
    useContext: ft,
    useEffect: Mc,
    useImperativeHandle: ry,
    useInsertionEffect: Jg,
    useLayoutEffect: Kg,
    useMemo: ny,
    useReducer: bu,
    useRef: jg,
    useState: function () {
      return bu(ka);
    },
    useDebugValue: Sc,
    useDeferredValue: function (e) {
      var r = pt();
      return iy(r, mr.memoizedState, e);
    },
    useTransition: function () {
      var e = bu(ka)[0],
        r = pt().memoizedState;
      return [e, r];
    },
    useMutableSource: Vg,
    useSyncExternalStore: Gg,
    useId: ay,
    unstable_isNewReconciler: !1,
  },
  ub = {
    readContext: ft,
    useCallback: ty,
    useContext: ft,
    useEffect: Mc,
    useImperativeHandle: ry,
    useInsertionEffect: Jg,
    useLayoutEffect: Kg,
    useMemo: ny,
    useReducer: Nu,
    useRef: jg,
    useState: function () {
      return Nu(ka);
    },
    useDebugValue: Sc,
    useDeferredValue: function (e) {
      var r = pt();
      return mr === null ? (r.memoizedState = e) : iy(r, mr.memoizedState, e);
    },
    useTransition: function () {
      var e = Nu(ka)[0],
        r = pt().memoizedState;
      return [e, r];
    },
    useMutableSource: Vg,
    useSyncExternalStore: Gg,
    useId: ay,
    unstable_isNewReconciler: !1,
  };
function Fi(e, r) {
  try {
    var t = "",
      n = r;
    do (t += Rx(n)), (n = n.return);
    while (n);
    var i = t;
  } catch (a) {
    i =
      `
Error generating stack: ` +
      a.message +
      `
` +
      a.stack;
  }
  return { value: e, source: r, stack: i, digest: null };
}
function Mu(e, r, t) {
  return {
    value: e,
    source: null,
    stack: t != null ? t : null,
    digest: r != null ? r : null,
  };
}
function vl(e, r) {
  try {
    console.error(r.value);
  } catch (t) {
    setTimeout(function () {
      throw t;
    });
  }
}
var lb = typeof WeakMap == "function" ? WeakMap : Map;
function ly(e, r, t) {
  (t = Wt(-1, t)), (t.tag = 3), (t.payload = { element: null });
  var n = r.value;
  return (
    (t.callback = function () {
      os || ((os = !0), (Sl = n)), vl(e, r);
    }),
    t
  );
}
function cy(e, r, t) {
  (t = Wt(-1, t)), (t.tag = 3);
  var n = e.type.getDerivedStateFromError;
  if (typeof n == "function") {
    var i = r.value;
    (t.payload = function () {
      return n(i);
    }),
      (t.callback = function () {
        vl(e, r);
      });
  }
  var a = e.stateNode;
  return (
    a !== null &&
      typeof a.componentDidCatch == "function" &&
      (t.callback = function () {
        vl(e, r),
          typeof n != "function" &&
            (xn === null ? (xn = new Set([this])) : xn.add(this));
        var s = r.stack;
        this.componentDidCatch(r.value, {
          componentStack: s !== null ? s : "",
        });
      }),
    t
  );
}
function Yf(e, r, t) {
  var n = e.pingCache;
  if (n === null) {
    n = e.pingCache = new lb();
    var i = new Set();
    n.set(r, i);
  } else (i = n.get(r)), i === void 0 && ((i = new Set()), n.set(r, i));
  i.has(t) || (i.add(t), (e = Mb.bind(null, e, r, t)), r.then(e, e));
}
function Xf(e) {
  do {
    var r;
    if (
      ((r = e.tag === 13) &&
        ((r = e.memoizedState), (r = r !== null ? r.dehydrated !== null : !0)),
      r)
    )
      return e;
    e = e.return;
  } while (e !== null);
  return null;
}
function jf(e, r, t, n, i) {
  return (e.mode & 1) === 0
    ? (e === r
        ? (e.flags |= 65536)
        : ((e.flags |= 128),
          (t.flags |= 131072),
          (t.flags &= -52805),
          t.tag === 1 &&
            (t.alternate === null
              ? (t.tag = 17)
              : ((r = Wt(-1, 1)), (r.tag = 2), yn(t, r, 1))),
          (t.lanes |= 1)),
      e)
    : ((e.flags |= 65536), (e.lanes = i), e);
}
var cb = Kt.ReactCurrentOwner,
  Hr = !1;
function Br(e, r, t, n) {
  r.child = e === null ? qg(r, null, t, n) : zi(r, e.child, t, n);
}
function Jf(e, r, t, n, i) {
  t = t.render;
  var a = r.ref;
  return (
    Ci(r, i),
    (n = bc(e, r, t, n, a, i)),
    (t = Nc()),
    e !== null && !Hr
      ? ((r.updateQueue = e.updateQueue),
        (r.flags &= -2053),
        (e.lanes &= ~i),
        jt(e, r, i))
      : (nr && t && lc(r), (r.flags |= 1), Br(e, r, n, i), r.child)
  );
}
function Kf(e, r, t, n, i) {
  if (e === null) {
    var a = t.type;
    return typeof a == "function" &&
      !Bc(a) &&
      a.defaultProps === void 0 &&
      t.compare === null &&
      t.defaultProps === void 0
      ? ((r.tag = 15), (r.type = a), fy(e, r, a, n, i))
      : ((e = Fo(t.type, null, n, r, r.mode, i)),
        (e.ref = r.ref),
        (e.return = r),
        (r.child = e));
  }
  if (((a = e.child), (e.lanes & i) === 0)) {
    var s = a.memoizedProps;
    if (
      ((t = t.compare), (t = t !== null ? t : Ia), t(s, n) && e.ref === r.ref)
    )
      return jt(e, r, i);
  }
  return (
    (r.flags |= 1),
    (e = bn(a, n)),
    (e.ref = r.ref),
    (e.return = r),
    (r.child = e)
  );
}
function fy(e, r, t, n, i) {
  if (e !== null) {
    var a = e.memoizedProps;
    if (Ia(a, n) && e.ref === r.ref)
      if (((Hr = !1), (r.pendingProps = n = a), (e.lanes & i) !== 0))
        (e.flags & 131072) !== 0 && (Hr = !0);
      else return (r.lanes = e.lanes), jt(e, r, i);
  }
  return dl(e, r, t, n, i);
}
function py(e, r, t) {
  var n = r.pendingProps,
    i = n.children,
    a = e !== null ? e.memoizedState : null;
  if (n.mode === "hidden")
    if ((r.mode & 1) === 0)
      (r.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        Ke(bi, Yr),
        (Yr |= t);
    else {
      if ((t & 1073741824) === 0)
        return (
          (e = a !== null ? a.baseLanes | t : t),
          (r.lanes = r.childLanes = 1073741824),
          (r.memoizedState = {
            baseLanes: e,
            cachePool: null,
            transitions: null,
          }),
          (r.updateQueue = null),
          Ke(bi, Yr),
          (Yr |= e),
          null
        );
      (r.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (n = a !== null ? a.baseLanes : t),
        Ke(bi, Yr),
        (Yr |= n);
    }
  else
    a !== null ? ((n = a.baseLanes | t), (r.memoizedState = null)) : (n = t),
      Ke(bi, Yr),
      (Yr |= n);
  return Br(e, r, i, t), r.child;
}
function my(e, r) {
  var t = r.ref;
  ((e === null && t !== null) || (e !== null && e.ref !== t)) &&
    ((r.flags |= 512), (r.flags |= 2097152));
}
function dl(e, r, t, n, i) {
  var a = Gr(t) ? Vn : Tr.current;
  return (
    (a = Ii(r, a)),
    Ci(r, i),
    (t = bc(e, r, t, n, a, i)),
    (n = Nc()),
    e !== null && !Hr
      ? ((r.updateQueue = e.updateQueue),
        (r.flags &= -2053),
        (e.lanes &= ~i),
        jt(e, r, i))
      : (nr && n && lc(r), (r.flags |= 1), Br(e, r, t, i), r.child)
  );
}
function ep(e, r, t, n, i) {
  if (Gr(t)) {
    var a = !0;
    Xo(r);
  } else a = !1;
  if ((Ci(r, i), r.stateNode === null))
    $o(e, r), kg(r, t, n), ml(r, t, n, i), (n = !0);
  else if (e === null) {
    var s = r.stateNode,
      f = r.memoizedProps;
    s.props = f;
    var l = s.context,
      p = t.contextType;
    typeof p == "object" && p !== null
      ? (p = ft(p))
      : ((p = Gr(t) ? Vn : Tr.current), (p = Ii(r, p)));
    var u = t.getDerivedStateFromProps,
      o =
        typeof u == "function" ||
        typeof s.getSnapshotBeforeUpdate == "function";
    o ||
      (typeof s.UNSAFE_componentWillReceiveProps != "function" &&
        typeof s.componentWillReceiveProps != "function") ||
      ((f !== n || l !== p) && Gf(r, s, n, p)),
      (nn = !1);
    var c = r.memoizedState;
    (s.state = c),
      rs(r, n, s, i),
      (l = r.memoizedState),
      f !== n || c !== l || Vr.current || nn
        ? (typeof u == "function" && (pl(r, t, u, n), (l = r.memoizedState)),
          (f = nn || Vf(r, t, f, n, c, l, p))
            ? (o ||
                (typeof s.UNSAFE_componentWillMount != "function" &&
                  typeof s.componentWillMount != "function") ||
                (typeof s.componentWillMount == "function" &&
                  s.componentWillMount(),
                typeof s.UNSAFE_componentWillMount == "function" &&
                  s.UNSAFE_componentWillMount()),
              typeof s.componentDidMount == "function" && (r.flags |= 4194308))
            : (typeof s.componentDidMount == "function" && (r.flags |= 4194308),
              (r.memoizedProps = n),
              (r.memoizedState = l)),
          (s.props = n),
          (s.state = l),
          (s.context = p),
          (n = f))
        : (typeof s.componentDidMount == "function" && (r.flags |= 4194308),
          (n = !1));
  } else {
    (s = r.stateNode),
      Pg(e, r),
      (f = r.memoizedProps),
      (p = r.type === r.elementType ? f : ht(r.type, f)),
      (s.props = p),
      (o = r.pendingProps),
      (c = s.context),
      (l = t.contextType),
      typeof l == "object" && l !== null
        ? (l = ft(l))
        : ((l = Gr(t) ? Vn : Tr.current), (l = Ii(r, l)));
    var m = t.getDerivedStateFromProps;
    (u =
      typeof m == "function" ||
      typeof s.getSnapshotBeforeUpdate == "function") ||
      (typeof s.UNSAFE_componentWillReceiveProps != "function" &&
        typeof s.componentWillReceiveProps != "function") ||
      ((f !== o || c !== l) && Gf(r, s, n, l)),
      (nn = !1),
      (c = r.memoizedState),
      (s.state = c),
      rs(r, n, s, i);
    var v = r.memoizedState;
    f !== o || c !== v || Vr.current || nn
      ? (typeof m == "function" && (pl(r, t, m, n), (v = r.memoizedState)),
        (p = nn || Vf(r, t, p, n, c, v, l) || !1)
          ? (u ||
              (typeof s.UNSAFE_componentWillUpdate != "function" &&
                typeof s.componentWillUpdate != "function") ||
              (typeof s.componentWillUpdate == "function" &&
                s.componentWillUpdate(n, v, l),
              typeof s.UNSAFE_componentWillUpdate == "function" &&
                s.UNSAFE_componentWillUpdate(n, v, l)),
            typeof s.componentDidUpdate == "function" && (r.flags |= 4),
            typeof s.getSnapshotBeforeUpdate == "function" && (r.flags |= 1024))
          : (typeof s.componentDidUpdate != "function" ||
              (f === e.memoizedProps && c === e.memoizedState) ||
              (r.flags |= 4),
            typeof s.getSnapshotBeforeUpdate != "function" ||
              (f === e.memoizedProps && c === e.memoizedState) ||
              (r.flags |= 1024),
            (r.memoizedProps = n),
            (r.memoizedState = v)),
        (s.props = n),
        (s.state = v),
        (s.context = l),
        (n = p))
      : (typeof s.componentDidUpdate != "function" ||
          (f === e.memoizedProps && c === e.memoizedState) ||
          (r.flags |= 4),
        typeof s.getSnapshotBeforeUpdate != "function" ||
          (f === e.memoizedProps && c === e.memoizedState) ||
          (r.flags |= 1024),
        (n = !1));
  }
  return hl(e, r, t, n, a, i);
}
function hl(e, r, t, n, i, a) {
  my(e, r);
  var s = (r.flags & 128) !== 0;
  if (!n && !s) return i && Lf(r, t, !1), jt(e, r, a);
  (n = r.stateNode), (cb.current = r);
  var f =
    s && typeof t.getDerivedStateFromError != "function" ? null : n.render();
  return (
    (r.flags |= 1),
    e !== null && s
      ? ((r.child = zi(r, e.child, null, a)), (r.child = zi(r, null, f, a)))
      : Br(e, r, f, a),
    (r.memoizedState = n.state),
    i && Lf(r, t, !0),
    r.child
  );
}
function vy(e) {
  var r = e.stateNode;
  r.pendingContext
    ? Pf(e, r.pendingContext, r.pendingContext !== r.context)
    : r.context && Pf(e, r.context, !1),
    gc(e, r.containerInfo);
}
function rp(e, r, t, n, i) {
  return $i(), fc(i), (r.flags |= 256), Br(e, r, t, n), r.child;
}
var gl = { dehydrated: null, treeContext: null, retryLane: 0 };
function yl(e) {
  return { baseLanes: e, cachePool: null, transitions: null };
}
function dy(e, r, t) {
  var n = r.pendingProps,
    i = ar.current,
    a = !1,
    s = (r.flags & 128) !== 0,
    f;
  if (
    ((f = s) ||
      (f = e !== null && e.memoizedState === null ? !1 : (i & 2) !== 0),
    f
      ? ((a = !0), (r.flags &= -129))
      : (e === null || e.memoizedState !== null) && (i |= 1),
    Ke(ar, i & 1),
    e === null)
  )
    return (
      cl(r),
      (e = r.memoizedState),
      e !== null && ((e = e.dehydrated), e !== null)
        ? ((r.mode & 1) === 0
            ? (r.lanes = 1)
            : e.data === "$!"
            ? (r.lanes = 8)
            : (r.lanes = 1073741824),
          null)
        : ((s = n.children),
          (e = n.fallback),
          a
            ? ((n = r.mode),
              (a = r.child),
              (s = { mode: "hidden", children: s }),
              (n & 1) === 0 && a !== null
                ? ((a.childLanes = 0), (a.pendingProps = s))
                : (a = _s(s, n, 0, null)),
              (e = qn(e, n, t, null)),
              (a.return = r),
              (e.return = r),
              (a.sibling = e),
              (r.child = a),
              (r.child.memoizedState = yl(t)),
              (r.memoizedState = gl),
              e)
            : Ac(r, s))
    );
  if (((i = e.memoizedState), i !== null && ((f = i.dehydrated), f !== null)))
    return fb(e, r, s, n, f, i, t);
  if (a) {
    (a = n.fallback), (s = r.mode), (i = e.child), (f = i.sibling);
    var l = { mode: "hidden", children: n.children };
    return (
      (s & 1) === 0 && r.child !== i
        ? ((n = r.child),
          (n.childLanes = 0),
          (n.pendingProps = l),
          (r.deletions = null))
        : ((n = bn(i, l)), (n.subtreeFlags = i.subtreeFlags & 14680064)),
      f !== null ? (a = bn(f, a)) : ((a = qn(a, s, t, null)), (a.flags |= 2)),
      (a.return = r),
      (n.return = r),
      (n.sibling = a),
      (r.child = n),
      (n = a),
      (a = r.child),
      (s = e.child.memoizedState),
      (s =
        s === null
          ? yl(t)
          : {
              baseLanes: s.baseLanes | t,
              cachePool: null,
              transitions: s.transitions,
            }),
      (a.memoizedState = s),
      (a.childLanes = e.childLanes & ~t),
      (r.memoizedState = gl),
      n
    );
  }
  return (
    (a = e.child),
    (e = a.sibling),
    (n = bn(a, { mode: "visible", children: n.children })),
    (r.mode & 1) === 0 && (n.lanes = t),
    (n.return = r),
    (n.sibling = null),
    e !== null &&
      ((t = r.deletions),
      t === null ? ((r.deletions = [e]), (r.flags |= 16)) : t.push(e)),
    (r.child = n),
    (r.memoizedState = null),
    n
  );
}
function Ac(e, r) {
  return (
    (r = _s({ mode: "visible", children: r }, e.mode, 0, null)),
    (r.return = e),
    (e.child = r)
  );
}
function go(e, r, t, n) {
  return (
    n !== null && fc(n),
    zi(r, e.child, null, t),
    (e = Ac(r, r.pendingProps.children)),
    (e.flags |= 2),
    (r.memoizedState = null),
    e
  );
}
function fb(e, r, t, n, i, a, s) {
  if (t)
    return r.flags & 256
      ? ((r.flags &= -257), (n = Mu(Error(le(422)))), go(e, r, s, n))
      : r.memoizedState !== null
      ? ((r.child = e.child), (r.flags |= 128), null)
      : ((a = n.fallback),
        (i = r.mode),
        (n = _s({ mode: "visible", children: n.children }, i, 0, null)),
        (a = qn(a, i, s, null)),
        (a.flags |= 2),
        (n.return = r),
        (a.return = r),
        (n.sibling = a),
        (r.child = n),
        (r.mode & 1) !== 0 && zi(r, e.child, null, s),
        (r.child.memoizedState = yl(s)),
        (r.memoizedState = gl),
        a);
  if ((r.mode & 1) === 0) return go(e, r, s, null);
  if (i.data === "$!") {
    if (((n = i.nextSibling && i.nextSibling.dataset), n)) var f = n.dgst;
    return (
      (n = f), (a = Error(le(419))), (n = Mu(a, n, void 0)), go(e, r, s, n)
    );
  }
  if (((f = (s & e.childLanes) !== 0), Hr || f)) {
    if (((n = yr), n !== null)) {
      switch (s & -s) {
        case 4:
          i = 2;
          break;
        case 16:
          i = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          i = 32;
          break;
        case 536870912:
          i = 268435456;
          break;
        default:
          i = 0;
      }
      (i = (i & (n.suspendedLanes | s)) !== 0 ? 0 : i),
        i !== 0 &&
          i !== a.retryLane &&
          ((a.retryLane = i), Xt(e, i), bt(n, e, i, -1));
    }
    return _c(), (n = Mu(Error(le(421)))), go(e, r, s, n);
  }
  return i.data === "$?"
    ? ((r.flags |= 128),
      (r.child = e.child),
      (r = Sb.bind(null, e)),
      (i._reactRetry = r),
      null)
    : ((e = a.treeContext),
      (Jr = gn(i.nextSibling)),
      (Kr = r),
      (nr = !0),
      (yt = null),
      e !== null &&
        ((ot[st++] = Ut),
        (ot[st++] = qt),
        (ot[st++] = Gn),
        (Ut = e.id),
        (qt = e.overflow),
        (Gn = r)),
      (r = Ac(r, n.children)),
      (r.flags |= 4096),
      r);
}
function tp(e, r, t) {
  e.lanes |= r;
  var n = e.alternate;
  n !== null && (n.lanes |= r), fl(e.return, r, t);
}
function Su(e, r, t, n, i) {
  var a = e.memoizedState;
  a === null
    ? (e.memoizedState = {
        isBackwards: r,
        rendering: null,
        renderingStartTime: 0,
        last: n,
        tail: t,
        tailMode: i,
      })
    : ((a.isBackwards = r),
      (a.rendering = null),
      (a.renderingStartTime = 0),
      (a.last = n),
      (a.tail = t),
      (a.tailMode = i));
}
function hy(e, r, t) {
  var n = r.pendingProps,
    i = n.revealOrder,
    a = n.tail;
  if ((Br(e, r, n.children, t), (n = ar.current), (n & 2) !== 0))
    (n = (n & 1) | 2), (r.flags |= 128);
  else {
    if (e !== null && (e.flags & 128) !== 0)
      e: for (e = r.child; e !== null; ) {
        if (e.tag === 13) e.memoizedState !== null && tp(e, t, r);
        else if (e.tag === 19) tp(e, t, r);
        else if (e.child !== null) {
          (e.child.return = e), (e = e.child);
          continue;
        }
        if (e === r) break e;
        for (; e.sibling === null; ) {
          if (e.return === null || e.return === r) break e;
          e = e.return;
        }
        (e.sibling.return = e.return), (e = e.sibling);
      }
    n &= 1;
  }
  if ((Ke(ar, n), (r.mode & 1) === 0)) r.memoizedState = null;
  else
    switch (i) {
      case "forwards":
        for (t = r.child, i = null; t !== null; )
          (e = t.alternate),
            e !== null && ts(e) === null && (i = t),
            (t = t.sibling);
        (t = i),
          t === null
            ? ((i = r.child), (r.child = null))
            : ((i = t.sibling), (t.sibling = null)),
          Su(r, !1, i, t, a);
        break;
      case "backwards":
        for (t = null, i = r.child, r.child = null; i !== null; ) {
          if (((e = i.alternate), e !== null && ts(e) === null)) {
            r.child = i;
            break;
          }
          (e = i.sibling), (i.sibling = t), (t = i), (i = e);
        }
        Su(r, !0, t, null, a);
        break;
      case "together":
        Su(r, !1, null, null, void 0);
        break;
      default:
        r.memoizedState = null;
    }
  return r.child;
}
function $o(e, r) {
  (r.mode & 1) === 0 &&
    e !== null &&
    ((e.alternate = null), (r.alternate = null), (r.flags |= 2));
}
function jt(e, r, t) {
  if (
    (e !== null && (r.dependencies = e.dependencies),
    (Zn |= r.lanes),
    (t & r.childLanes) === 0)
  )
    return null;
  if (e !== null && r.child !== e.child) throw Error(le(153));
  if (r.child !== null) {
    for (
      e = r.child, t = bn(e, e.pendingProps), r.child = t, t.return = r;
      e.sibling !== null;

    )
      (e = e.sibling), (t = t.sibling = bn(e, e.pendingProps)), (t.return = r);
    t.sibling = null;
  }
  return r.child;
}
function pb(e, r, t) {
  switch (r.tag) {
    case 3:
      vy(r), $i();
      break;
    case 5:
      Hg(r);
      break;
    case 1:
      Gr(r.type) && Xo(r);
      break;
    case 4:
      gc(r, r.stateNode.containerInfo);
      break;
    case 10:
      var n = r.type._context,
        i = r.memoizedProps.value;
      Ke(Ko, n._currentValue), (n._currentValue = i);
      break;
    case 13:
      if (((n = r.memoizedState), n !== null))
        return n.dehydrated !== null
          ? (Ke(ar, ar.current & 1), (r.flags |= 128), null)
          : (t & r.child.childLanes) !== 0
          ? dy(e, r, t)
          : (Ke(ar, ar.current & 1),
            (e = jt(e, r, t)),
            e !== null ? e.sibling : null);
      Ke(ar, ar.current & 1);
      break;
    case 19:
      if (((n = (t & r.childLanes) !== 0), (e.flags & 128) !== 0)) {
        if (n) return hy(e, r, t);
        r.flags |= 128;
      }
      if (
        ((i = r.memoizedState),
        i !== null &&
          ((i.rendering = null), (i.tail = null), (i.lastEffect = null)),
        Ke(ar, ar.current),
        n)
      )
        break;
      return null;
    case 22:
    case 23:
      return (r.lanes = 0), py(e, r, t);
  }
  return jt(e, r, t);
}
var gy, xl, yy, xy;
gy = function (e, r) {
  for (var t = r.child; t !== null; ) {
    if (t.tag === 5 || t.tag === 6) e.appendChild(t.stateNode);
    else if (t.tag !== 4 && t.child !== null) {
      (t.child.return = t), (t = t.child);
      continue;
    }
    if (t === r) break;
    for (; t.sibling === null; ) {
      if (t.return === null || t.return === r) return;
      t = t.return;
    }
    (t.sibling.return = t.return), (t = t.sibling);
  }
};
xl = function () {};
yy = function (e, r, t, n) {
  var i = e.memoizedProps;
  if (i !== n) {
    (e = r.stateNode), kn(It.current);
    var a = null;
    switch (t) {
      case "input":
        (i = Uu(e, i)), (n = Uu(e, n)), (a = []);
        break;
      case "select":
        (i = sr({}, i, { value: void 0 })),
          (n = sr({}, n, { value: void 0 })),
          (a = []);
        break;
      case "textarea":
        (i = Vu(e, i)), (n = Vu(e, n)), (a = []);
        break;
      default:
        typeof i.onClick != "function" &&
          typeof n.onClick == "function" &&
          (e.onclick = Qo);
    }
    Wu(t, n);
    var s;
    t = null;
    for (p in i)
      if (!n.hasOwnProperty(p) && i.hasOwnProperty(p) && i[p] != null)
        if (p === "style") {
          var f = i[p];
          for (s in f) f.hasOwnProperty(s) && (t || (t = {}), (t[s] = ""));
        } else
          p !== "dangerouslySetInnerHTML" &&
            p !== "children" &&
            p !== "suppressContentEditableWarning" &&
            p !== "suppressHydrationWarning" &&
            p !== "autoFocus" &&
            (Ea.hasOwnProperty(p)
              ? a || (a = [])
              : (a = a || []).push(p, null));
    for (p in n) {
      var l = n[p];
      if (
        ((f = i != null ? i[p] : void 0),
        n.hasOwnProperty(p) && l !== f && (l != null || f != null))
      )
        if (p === "style")
          if (f) {
            for (s in f)
              !f.hasOwnProperty(s) ||
                (l && l.hasOwnProperty(s)) ||
                (t || (t = {}), (t[s] = ""));
            for (s in l)
              l.hasOwnProperty(s) &&
                f[s] !== l[s] &&
                (t || (t = {}), (t[s] = l[s]));
          } else t || (a || (a = []), a.push(p, t)), (t = l);
        else
          p === "dangerouslySetInnerHTML"
            ? ((l = l ? l.__html : void 0),
              (f = f ? f.__html : void 0),
              l != null && f !== l && (a = a || []).push(p, l))
            : p === "children"
            ? (typeof l != "string" && typeof l != "number") ||
              (a = a || []).push(p, "" + l)
            : p !== "suppressContentEditableWarning" &&
              p !== "suppressHydrationWarning" &&
              (Ea.hasOwnProperty(p)
                ? (l != null && p === "onScroll" && rr("scroll", e),
                  a || f === l || (a = []))
                : (a = a || []).push(p, l));
    }
    t && (a = a || []).push("style", t);
    var p = a;
    (r.updateQueue = p) && (r.flags |= 4);
  }
};
xy = function (e, r, t, n) {
  t !== n && (r.flags |= 4);
};
function aa(e, r) {
  if (!nr)
    switch (e.tailMode) {
      case "hidden":
        r = e.tail;
        for (var t = null; r !== null; )
          r.alternate !== null && (t = r), (r = r.sibling);
        t === null ? (e.tail = null) : (t.sibling = null);
        break;
      case "collapsed":
        t = e.tail;
        for (var n = null; t !== null; )
          t.alternate !== null && (n = t), (t = t.sibling);
        n === null
          ? r || e.tail === null
            ? (e.tail = null)
            : (e.tail.sibling = null)
          : (n.sibling = null);
    }
}
function Cr(e) {
  var r = e.alternate !== null && e.alternate.child === e.child,
    t = 0,
    n = 0;
  if (r)
    for (var i = e.child; i !== null; )
      (t |= i.lanes | i.childLanes),
        (n |= i.subtreeFlags & 14680064),
        (n |= i.flags & 14680064),
        (i.return = e),
        (i = i.sibling);
  else
    for (i = e.child; i !== null; )
      (t |= i.lanes | i.childLanes),
        (n |= i.subtreeFlags),
        (n |= i.flags),
        (i.return = e),
        (i = i.sibling);
  return (e.subtreeFlags |= n), (e.childLanes = t), r;
}
function mb(e, r, t) {
  var n = r.pendingProps;
  switch ((cc(r), r.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return Cr(r), null;
    case 1:
      return Gr(r.type) && Yo(), Cr(r), null;
    case 3:
      return (
        (n = r.stateNode),
        Ri(),
        tr(Vr),
        tr(Tr),
        xc(),
        n.pendingContext &&
          ((n.context = n.pendingContext), (n.pendingContext = null)),
        (e === null || e.child === null) &&
          (vo(r)
            ? (r.flags |= 4)
            : e === null ||
              (e.memoizedState.isDehydrated && (r.flags & 256) === 0) ||
              ((r.flags |= 1024), yt !== null && (Cl(yt), (yt = null)))),
        xl(e, r),
        Cr(r),
        null
      );
    case 5:
      yc(r);
      var i = kn(Pa.current);
      if (((t = r.type), e !== null && r.stateNode != null))
        yy(e, r, t, n, i),
          e.ref !== r.ref && ((r.flags |= 512), (r.flags |= 2097152));
      else {
        if (!n) {
          if (r.stateNode === null) throw Error(le(166));
          return Cr(r), null;
        }
        if (((e = kn(It.current)), vo(r))) {
          (n = r.stateNode), (t = r.type);
          var a = r.memoizedProps;
          switch (((n[_t] = r), (n[Ra] = a), (e = (r.mode & 1) !== 0), t)) {
            case "dialog":
              rr("cancel", n), rr("close", n);
              break;
            case "iframe":
            case "object":
            case "embed":
              rr("load", n);
              break;
            case "video":
            case "audio":
              for (i = 0; i < pa.length; i++) rr(pa[i], n);
              break;
            case "source":
              rr("error", n);
              break;
            case "img":
            case "image":
            case "link":
              rr("error", n), rr("load", n);
              break;
            case "details":
              rr("toggle", n);
              break;
            case "input":
              ff(n, a), rr("invalid", n);
              break;
            case "select":
              (n._wrapperState = { wasMultiple: !!a.multiple }),
                rr("invalid", n);
              break;
            case "textarea":
              mf(n, a), rr("invalid", n);
          }
          Wu(t, a), (i = null);
          for (var s in a)
            if (a.hasOwnProperty(s)) {
              var f = a[s];
              s === "children"
                ? typeof f == "string"
                  ? n.textContent !== f &&
                    (a.suppressHydrationWarning !== !0 &&
                      mo(n.textContent, f, e),
                    (i = ["children", f]))
                  : typeof f == "number" &&
                    n.textContent !== "" + f &&
                    (a.suppressHydrationWarning !== !0 &&
                      mo(n.textContent, f, e),
                    (i = ["children", "" + f]))
                : Ea.hasOwnProperty(s) &&
                  f != null &&
                  s === "onScroll" &&
                  rr("scroll", n);
            }
          switch (t) {
            case "input":
              ao(n), pf(n, a, !0);
              break;
            case "textarea":
              ao(n), vf(n);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof a.onClick == "function" && (n.onclick = Qo);
          }
          (n = i), (r.updateQueue = n), n !== null && (r.flags |= 4);
        } else {
          (s = i.nodeType === 9 ? i : i.ownerDocument),
            e === "http://www.w3.org/1999/xhtml" && (e = Wh(t)),
            e === "http://www.w3.org/1999/xhtml"
              ? t === "script"
                ? ((e = s.createElement("div")),
                  (e.innerHTML = "<script></script>"),
                  (e = e.removeChild(e.firstChild)))
                : typeof n.is == "string"
                ? (e = s.createElement(t, { is: n.is }))
                : ((e = s.createElement(t)),
                  t === "select" &&
                    ((s = e),
                    n.multiple
                      ? (s.multiple = !0)
                      : n.size && (s.size = n.size)))
              : (e = s.createElementNS(e, t)),
            (e[_t] = r),
            (e[Ra] = n),
            gy(e, r, !1, !1),
            (r.stateNode = e);
          e: {
            switch (((s = Zu(t, n)), t)) {
              case "dialog":
                rr("cancel", e), rr("close", e), (i = n);
                break;
              case "iframe":
              case "object":
              case "embed":
                rr("load", e), (i = n);
                break;
              case "video":
              case "audio":
                for (i = 0; i < pa.length; i++) rr(pa[i], e);
                i = n;
                break;
              case "source":
                rr("error", e), (i = n);
                break;
              case "img":
              case "image":
              case "link":
                rr("error", e), rr("load", e), (i = n);
                break;
              case "details":
                rr("toggle", e), (i = n);
                break;
              case "input":
                ff(e, n), (i = Uu(e, n)), rr("invalid", e);
                break;
              case "option":
                i = n;
                break;
              case "select":
                (e._wrapperState = { wasMultiple: !!n.multiple }),
                  (i = sr({}, n, { value: void 0 })),
                  rr("invalid", e);
                break;
              case "textarea":
                mf(e, n), (i = Vu(e, n)), rr("invalid", e);
                break;
              default:
                i = n;
            }
            Wu(t, i), (f = i);
            for (a in f)
              if (f.hasOwnProperty(a)) {
                var l = f[a];
                a === "style"
                  ? Yh(e, l)
                  : a === "dangerouslySetInnerHTML"
                  ? ((l = l ? l.__html : void 0), l != null && Zh(e, l))
                  : a === "children"
                  ? typeof l == "string"
                    ? (t !== "textarea" || l !== "") && Ca(e, l)
                    : typeof l == "number" && Ca(e, "" + l)
                  : a !== "suppressContentEditableWarning" &&
                    a !== "suppressHydrationWarning" &&
                    a !== "autoFocus" &&
                    (Ea.hasOwnProperty(a)
                      ? l != null && a === "onScroll" && rr("scroll", e)
                      : l != null && Yl(e, a, l, s));
              }
            switch (t) {
              case "input":
                ao(e), pf(e, n, !1);
                break;
              case "textarea":
                ao(e), vf(e);
                break;
              case "option":
                n.value != null && e.setAttribute("value", "" + Nn(n.value));
                break;
              case "select":
                (e.multiple = !!n.multiple),
                  (a = n.value),
                  a != null
                    ? Mi(e, !!n.multiple, a, !1)
                    : n.defaultValue != null &&
                      Mi(e, !!n.multiple, n.defaultValue, !0);
                break;
              default:
                typeof i.onClick == "function" && (e.onclick = Qo);
            }
            switch (t) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                n = !!n.autoFocus;
                break e;
              case "img":
                n = !0;
                break e;
              default:
                n = !1;
            }
          }
          n && (r.flags |= 4);
        }
        r.ref !== null && ((r.flags |= 512), (r.flags |= 2097152));
      }
      return Cr(r), null;
    case 6:
      if (e && r.stateNode != null) xy(e, r, e.memoizedProps, n);
      else {
        if (typeof n != "string" && r.stateNode === null) throw Error(le(166));
        if (((t = kn(Pa.current)), kn(It.current), vo(r))) {
          if (
            ((n = r.stateNode),
            (t = r.memoizedProps),
            (n[_t] = r),
            (a = n.nodeValue !== t) && ((e = Kr), e !== null))
          )
            switch (e.tag) {
              case 3:
                mo(n.nodeValue, t, (e.mode & 1) !== 0);
                break;
              case 5:
                e.memoizedProps.suppressHydrationWarning !== !0 &&
                  mo(n.nodeValue, t, (e.mode & 1) !== 0);
            }
          a && (r.flags |= 4);
        } else
          (n = (t.nodeType === 9 ? t : t.ownerDocument).createTextNode(n)),
            (n[_t] = r),
            (r.stateNode = n);
      }
      return Cr(r), null;
    case 13:
      if (
        (tr(ar),
        (n = r.memoizedState),
        e === null ||
          (e.memoizedState !== null && e.memoizedState.dehydrated !== null))
      ) {
        if (nr && Jr !== null && (r.mode & 1) !== 0 && (r.flags & 128) === 0)
          Rg(), $i(), (r.flags |= 98560), (a = !1);
        else if (((a = vo(r)), n !== null && n.dehydrated !== null)) {
          if (e === null) {
            if (!a) throw Error(le(318));
            if (
              ((a = r.memoizedState),
              (a = a !== null ? a.dehydrated : null),
              !a)
            )
              throw Error(le(317));
            a[_t] = r;
          } else
            $i(),
              (r.flags & 128) === 0 && (r.memoizedState = null),
              (r.flags |= 4);
          Cr(r), (a = !1);
        } else yt !== null && (Cl(yt), (yt = null)), (a = !0);
        if (!a) return r.flags & 65536 ? r : null;
      }
      return (r.flags & 128) !== 0
        ? ((r.lanes = t), r)
        : ((n = n !== null),
          n !== (e !== null && e.memoizedState !== null) &&
            n &&
            ((r.child.flags |= 8192),
            (r.mode & 1) !== 0 &&
              (e === null || (ar.current & 1) !== 0
                ? dr === 0 && (dr = 3)
                : _c())),
          r.updateQueue !== null && (r.flags |= 4),
          Cr(r),
          null);
    case 4:
      return (
        Ri(), xl(e, r), e === null && $a(r.stateNode.containerInfo), Cr(r), null
      );
    case 10:
      return vc(r.type._context), Cr(r), null;
    case 17:
      return Gr(r.type) && Yo(), Cr(r), null;
    case 19:
      if ((tr(ar), (a = r.memoizedState), a === null)) return Cr(r), null;
      if (((n = (r.flags & 128) !== 0), (s = a.rendering), s === null))
        if (n) aa(a, !1);
        else {
          if (dr !== 0 || (e !== null && (e.flags & 128) !== 0))
            for (e = r.child; e !== null; ) {
              if (((s = ts(e)), s !== null)) {
                for (
                  r.flags |= 128,
                    aa(a, !1),
                    n = s.updateQueue,
                    n !== null && ((r.updateQueue = n), (r.flags |= 4)),
                    r.subtreeFlags = 0,
                    n = t,
                    t = r.child;
                  t !== null;

                )
                  (a = t),
                    (e = n),
                    (a.flags &= 14680066),
                    (s = a.alternate),
                    s === null
                      ? ((a.childLanes = 0),
                        (a.lanes = e),
                        (a.child = null),
                        (a.subtreeFlags = 0),
                        (a.memoizedProps = null),
                        (a.memoizedState = null),
                        (a.updateQueue = null),
                        (a.dependencies = null),
                        (a.stateNode = null))
                      : ((a.childLanes = s.childLanes),
                        (a.lanes = s.lanes),
                        (a.child = s.child),
                        (a.subtreeFlags = 0),
                        (a.deletions = null),
                        (a.memoizedProps = s.memoizedProps),
                        (a.memoizedState = s.memoizedState),
                        (a.updateQueue = s.updateQueue),
                        (a.type = s.type),
                        (e = s.dependencies),
                        (a.dependencies =
                          e === null
                            ? null
                            : {
                                lanes: e.lanes,
                                firstContext: e.firstContext,
                              })),
                    (t = t.sibling);
                return Ke(ar, (ar.current & 1) | 2), r.child;
              }
              e = e.sibling;
            }
          a.tail !== null &&
            cr() > Pi &&
            ((r.flags |= 128), (n = !0), aa(a, !1), (r.lanes = 4194304));
        }
      else {
        if (!n)
          if (((e = ts(s)), e !== null)) {
            if (
              ((r.flags |= 128),
              (n = !0),
              (t = e.updateQueue),
              t !== null && ((r.updateQueue = t), (r.flags |= 4)),
              aa(a, !0),
              a.tail === null && a.tailMode === "hidden" && !s.alternate && !nr)
            )
              return Cr(r), null;
          } else
            2 * cr() - a.renderingStartTime > Pi &&
              t !== 1073741824 &&
              ((r.flags |= 128), (n = !0), aa(a, !1), (r.lanes = 4194304));
        a.isBackwards
          ? ((s.sibling = r.child), (r.child = s))
          : ((t = a.last),
            t !== null ? (t.sibling = s) : (r.child = s),
            (a.last = s));
      }
      return a.tail !== null
        ? ((r = a.tail),
          (a.rendering = r),
          (a.tail = r.sibling),
          (a.renderingStartTime = cr()),
          (r.sibling = null),
          (t = ar.current),
          Ke(ar, n ? (t & 1) | 2 : t & 1),
          r)
        : (Cr(r), null);
    case 22:
    case 23:
      return (
        Dc(),
        (n = r.memoizedState !== null),
        e !== null && (e.memoizedState !== null) !== n && (r.flags |= 8192),
        n && (r.mode & 1) !== 0
          ? (Yr & 1073741824) !== 0 &&
            (Cr(r), r.subtreeFlags & 6 && (r.flags |= 8192))
          : Cr(r),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(le(156, r.tag));
}
function vb(e, r) {
  switch ((cc(r), r.tag)) {
    case 1:
      return (
        Gr(r.type) && Yo(),
        (e = r.flags),
        e & 65536 ? ((r.flags = (e & -65537) | 128), r) : null
      );
    case 3:
      return (
        Ri(),
        tr(Vr),
        tr(Tr),
        xc(),
        (e = r.flags),
        (e & 65536) !== 0 && (e & 128) === 0
          ? ((r.flags = (e & -65537) | 128), r)
          : null
      );
    case 5:
      return yc(r), null;
    case 13:
      if (
        (tr(ar), (e = r.memoizedState), e !== null && e.dehydrated !== null)
      ) {
        if (r.alternate === null) throw Error(le(340));
        $i();
      }
      return (
        (e = r.flags), e & 65536 ? ((r.flags = (e & -65537) | 128), r) : null
      );
    case 19:
      return tr(ar), null;
    case 4:
      return Ri(), null;
    case 10:
      return vc(r.type._context), null;
    case 22:
    case 23:
      return Dc(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var yo = !1,
  Or = !1,
  db = typeof WeakSet == "function" ? WeakSet : Set,
  be = null;
function wi(e, r) {
  var t = e.ref;
  if (t !== null)
    if (typeof t == "function")
      try {
        t(null);
      } catch (n) {
        lr(e, r, n);
      }
    else t.current = null;
}
function wl(e, r, t) {
  try {
    t();
  } catch (n) {
    lr(e, r, n);
  }
}
var np = !1;
function hb(e, r) {
  if (((nl = Go), (e = Mg()), uc(e))) {
    if ("selectionStart" in e)
      var t = { start: e.selectionStart, end: e.selectionEnd };
    else
      e: {
        t = ((t = e.ownerDocument) && t.defaultView) || window;
        var n = t.getSelection && t.getSelection();
        if (n && n.rangeCount !== 0) {
          t = n.anchorNode;
          var i = n.anchorOffset,
            a = n.focusNode;
          n = n.focusOffset;
          try {
            t.nodeType, a.nodeType;
          } catch {
            t = null;
            break e;
          }
          var s = 0,
            f = -1,
            l = -1,
            p = 0,
            u = 0,
            o = e,
            c = null;
          r: for (;;) {
            for (
              var m;
              o !== t || (i !== 0 && o.nodeType !== 3) || (f = s + i),
                o !== a || (n !== 0 && o.nodeType !== 3) || (l = s + n),
                o.nodeType === 3 && (s += o.nodeValue.length),
                (m = o.firstChild) !== null;

            )
              (c = o), (o = m);
            for (;;) {
              if (o === e) break r;
              if (
                (c === t && ++p === i && (f = s),
                c === a && ++u === n && (l = s),
                (m = o.nextSibling) !== null)
              )
                break;
              (o = c), (c = o.parentNode);
            }
            o = m;
          }
          t = f === -1 || l === -1 ? null : { start: f, end: l };
        } else t = null;
      }
    t = t || { start: 0, end: 0 };
  } else t = null;
  for (
    il = { focusedElem: e, selectionRange: t }, Go = !1, be = r;
    be !== null;

  )
    if (((r = be), (e = r.child), (r.subtreeFlags & 1028) !== 0 && e !== null))
      (e.return = r), (be = e);
    else
      for (; be !== null; ) {
        r = be;
        try {
          var v = r.alternate;
          if ((r.flags & 1024) !== 0)
            switch (r.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (v !== null) {
                  var d = v.memoizedProps,
                    N = v.memoizedState,
                    g = r.stateNode,
                    w = g.getSnapshotBeforeUpdate(
                      r.elementType === r.type ? d : ht(r.type, d),
                      N
                    );
                  g.__reactInternalSnapshotBeforeUpdate = w;
                }
                break;
              case 3:
                var h = r.stateNode.containerInfo;
                h.nodeType === 1
                  ? (h.textContent = "")
                  : h.nodeType === 9 &&
                    h.documentElement &&
                    h.removeChild(h.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(le(163));
            }
        } catch (x) {
          lr(r, r.return, x);
        }
        if (((e = r.sibling), e !== null)) {
          (e.return = r.return), (be = e);
          break;
        }
        be = r.return;
      }
  return (v = np), (np = !1), v;
}
function Na(e, r, t) {
  var n = r.updateQueue;
  if (((n = n !== null ? n.lastEffect : null), n !== null)) {
    var i = (n = n.next);
    do {
      if ((i.tag & e) === e) {
        var a = i.destroy;
        (i.destroy = void 0), a !== void 0 && wl(r, t, a);
      }
      i = i.next;
    } while (i !== n);
  }
}
function Ts(e, r) {
  if (
    ((r = r.updateQueue), (r = r !== null ? r.lastEffect : null), r !== null)
  ) {
    var t = (r = r.next);
    do {
      if ((t.tag & e) === e) {
        var n = t.create;
        t.destroy = n();
      }
      t = t.next;
    } while (t !== r);
  }
}
function bl(e) {
  var r = e.ref;
  if (r !== null) {
    var t = e.stateNode;
    switch (e.tag) {
      case 5:
        e = t;
        break;
      default:
        e = t;
    }
    typeof r == "function" ? r(e) : (r.current = e);
  }
}
function wy(e) {
  var r = e.alternate;
  r !== null && ((e.alternate = null), wy(r)),
    (e.child = null),
    (e.deletions = null),
    (e.sibling = null),
    e.tag === 5 &&
      ((r = e.stateNode),
      r !== null &&
        (delete r[_t], delete r[Ra], delete r[sl], delete r[Jw], delete r[Kw])),
    (e.stateNode = null),
    (e.return = null),
    (e.dependencies = null),
    (e.memoizedProps = null),
    (e.memoizedState = null),
    (e.pendingProps = null),
    (e.stateNode = null),
    (e.updateQueue = null);
}
function by(e) {
  return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function ip(e) {
  e: for (;;) {
    for (; e.sibling === null; ) {
      if (e.return === null || by(e.return)) return null;
      e = e.return;
    }
    for (
      e.sibling.return = e.return, e = e.sibling;
      e.tag !== 5 && e.tag !== 6 && e.tag !== 18;

    ) {
      if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
      (e.child.return = e), (e = e.child);
    }
    if (!(e.flags & 2)) return e.stateNode;
  }
}
function Nl(e, r, t) {
  var n = e.tag;
  if (n === 5 || n === 6)
    (e = e.stateNode),
      r
        ? t.nodeType === 8
          ? t.parentNode.insertBefore(e, r)
          : t.insertBefore(e, r)
        : (t.nodeType === 8
            ? ((r = t.parentNode), r.insertBefore(e, t))
            : ((r = t), r.appendChild(e)),
          (t = t._reactRootContainer),
          t != null || r.onclick !== null || (r.onclick = Qo));
  else if (n !== 4 && ((e = e.child), e !== null))
    for (Nl(e, r, t), e = e.sibling; e !== null; ) Nl(e, r, t), (e = e.sibling);
}
function Ml(e, r, t) {
  var n = e.tag;
  if (n === 5 || n === 6)
    (e = e.stateNode), r ? t.insertBefore(e, r) : t.appendChild(e);
  else if (n !== 4 && ((e = e.child), e !== null))
    for (Ml(e, r, t), e = e.sibling; e !== null; ) Ml(e, r, t), (e = e.sibling);
}
var wr = null,
  gt = !1;
function rn(e, r, t) {
  for (t = t.child; t !== null; ) Ny(e, r, t), (t = t.sibling);
}
function Ny(e, r, t) {
  if (Bt && typeof Bt.onCommitFiberUnmount == "function")
    try {
      Bt.onCommitFiberUnmount(bs, t);
    } catch {}
  switch (t.tag) {
    case 5:
      Or || wi(t, r);
    case 6:
      var n = wr,
        i = gt;
      (wr = null),
        rn(e, r, t),
        (wr = n),
        (gt = i),
        wr !== null &&
          (gt
            ? ((e = wr),
              (t = t.stateNode),
              e.nodeType === 8 ? e.parentNode.removeChild(t) : e.removeChild(t))
            : wr.removeChild(t.stateNode));
      break;
    case 18:
      wr !== null &&
        (gt
          ? ((e = wr),
            (t = t.stateNode),
            e.nodeType === 8
              ? gu(e.parentNode, t)
              : e.nodeType === 1 && gu(e, t),
            _a(e))
          : gu(wr, t.stateNode));
      break;
    case 4:
      (n = wr),
        (i = gt),
        (wr = t.stateNode.containerInfo),
        (gt = !0),
        rn(e, r, t),
        (wr = n),
        (gt = i);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !Or &&
        ((n = t.updateQueue), n !== null && ((n = n.lastEffect), n !== null))
      ) {
        i = n = n.next;
        do {
          var a = i,
            s = a.destroy;
          (a = a.tag),
            s !== void 0 && ((a & 2) !== 0 || (a & 4) !== 0) && wl(t, r, s),
            (i = i.next);
        } while (i !== n);
      }
      rn(e, r, t);
      break;
    case 1:
      if (
        !Or &&
        (wi(t, r),
        (n = t.stateNode),
        typeof n.componentWillUnmount == "function")
      )
        try {
          (n.props = t.memoizedProps),
            (n.state = t.memoizedState),
            n.componentWillUnmount();
        } catch (f) {
          lr(t, r, f);
        }
      rn(e, r, t);
      break;
    case 21:
      rn(e, r, t);
      break;
    case 22:
      t.mode & 1
        ? ((Or = (n = Or) || t.memoizedState !== null), rn(e, r, t), (Or = n))
        : rn(e, r, t);
      break;
    default:
      rn(e, r, t);
  }
}
function ap(e) {
  var r = e.updateQueue;
  if (r !== null) {
    e.updateQueue = null;
    var t = e.stateNode;
    t === null && (t = e.stateNode = new db()),
      r.forEach(function (n) {
        var i = Ab.bind(null, e, n);
        t.has(n) || (t.add(n), n.then(i, i));
      });
  }
}
function dt(e, r) {
  var t = r.deletions;
  if (t !== null)
    for (var n = 0; n < t.length; n++) {
      var i = t[n];
      try {
        var a = e,
          s = r,
          f = s;
        e: for (; f !== null; ) {
          switch (f.tag) {
            case 5:
              (wr = f.stateNode), (gt = !1);
              break e;
            case 3:
              (wr = f.stateNode.containerInfo), (gt = !0);
              break e;
            case 4:
              (wr = f.stateNode.containerInfo), (gt = !0);
              break e;
          }
          f = f.return;
        }
        if (wr === null) throw Error(le(160));
        Ny(a, s, i), (wr = null), (gt = !1);
        var l = i.alternate;
        l !== null && (l.return = null), (i.return = null);
      } catch (p) {
        lr(i, r, p);
      }
    }
  if (r.subtreeFlags & 12854)
    for (r = r.child; r !== null; ) My(r, e), (r = r.sibling);
}
function My(e, r) {
  var t = e.alternate,
    n = e.flags;
  switch (e.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((dt(r, e), Ot(e), n & 4)) {
        try {
          Na(3, e, e.return), Ts(3, e);
        } catch (d) {
          lr(e, e.return, d);
        }
        try {
          Na(5, e, e.return);
        } catch (d) {
          lr(e, e.return, d);
        }
      }
      break;
    case 1:
      dt(r, e), Ot(e), n & 512 && t !== null && wi(t, t.return);
      break;
    case 5:
      if (
        (dt(r, e),
        Ot(e),
        n & 512 && t !== null && wi(t, t.return),
        e.flags & 32)
      ) {
        var i = e.stateNode;
        try {
          Ca(i, "");
        } catch (d) {
          lr(e, e.return, d);
        }
      }
      if (n & 4 && ((i = e.stateNode), i != null)) {
        var a = e.memoizedProps,
          s = t !== null ? t.memoizedProps : a,
          f = e.type,
          l = e.updateQueue;
        if (((e.updateQueue = null), l !== null))
          try {
            f === "input" && a.type === "radio" && a.name != null && Vh(i, a),
              Zu(f, s);
            var p = Zu(f, a);
            for (s = 0; s < l.length; s += 2) {
              var u = l[s],
                o = l[s + 1];
              u === "style"
                ? Yh(i, o)
                : u === "dangerouslySetInnerHTML"
                ? Zh(i, o)
                : u === "children"
                ? Ca(i, o)
                : Yl(i, u, o, p);
            }
            switch (f) {
              case "input":
                qu(i, a);
                break;
              case "textarea":
                Gh(i, a);
                break;
              case "select":
                var c = i._wrapperState.wasMultiple;
                i._wrapperState.wasMultiple = !!a.multiple;
                var m = a.value;
                m != null
                  ? Mi(i, !!a.multiple, m, !1)
                  : c !== !!a.multiple &&
                    (a.defaultValue != null
                      ? Mi(i, !!a.multiple, a.defaultValue, !0)
                      : Mi(i, !!a.multiple, a.multiple ? [] : "", !1));
            }
            i[Ra] = a;
          } catch (d) {
            lr(e, e.return, d);
          }
      }
      break;
    case 6:
      if ((dt(r, e), Ot(e), n & 4)) {
        if (e.stateNode === null) throw Error(le(162));
        (i = e.stateNode), (a = e.memoizedProps);
        try {
          i.nodeValue = a;
        } catch (d) {
          lr(e, e.return, d);
        }
      }
      break;
    case 3:
      if (
        (dt(r, e), Ot(e), n & 4 && t !== null && t.memoizedState.isDehydrated)
      )
        try {
          _a(r.containerInfo);
        } catch (d) {
          lr(e, e.return, d);
        }
      break;
    case 4:
      dt(r, e), Ot(e);
      break;
    case 13:
      dt(r, e),
        Ot(e),
        (i = e.child),
        i.flags & 8192 &&
          ((a = i.memoizedState !== null),
          (i.stateNode.isHidden = a),
          !a ||
            (i.alternate !== null && i.alternate.memoizedState !== null) ||
            (Oc = cr())),
        n & 4 && ap(e);
      break;
    case 22:
      if (
        ((u = t !== null && t.memoizedState !== null),
        e.mode & 1 ? ((Or = (p = Or) || u), dt(r, e), (Or = p)) : dt(r, e),
        Ot(e),
        n & 8192)
      ) {
        if (
          ((p = e.memoizedState !== null),
          (e.stateNode.isHidden = p) && !u && (e.mode & 1) !== 0)
        )
          for (be = e, u = e.child; u !== null; ) {
            for (o = be = u; be !== null; ) {
              switch (((c = be), (m = c.child), c.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Na(4, c, c.return);
                  break;
                case 1:
                  wi(c, c.return);
                  var v = c.stateNode;
                  if (typeof v.componentWillUnmount == "function") {
                    (n = c), (t = c.return);
                    try {
                      (r = n),
                        (v.props = r.memoizedProps),
                        (v.state = r.memoizedState),
                        v.componentWillUnmount();
                    } catch (d) {
                      lr(n, t, d);
                    }
                  }
                  break;
                case 5:
                  wi(c, c.return);
                  break;
                case 22:
                  if (c.memoizedState !== null) {
                    sp(o);
                    continue;
                  }
              }
              m !== null ? ((m.return = c), (be = m)) : sp(o);
            }
            u = u.sibling;
          }
        e: for (u = null, o = e; ; ) {
          if (o.tag === 5) {
            if (u === null) {
              u = o;
              try {
                (i = o.stateNode),
                  p
                    ? ((a = i.style),
                      typeof a.setProperty == "function"
                        ? a.setProperty("display", "none", "important")
                        : (a.display = "none"))
                    : ((f = o.stateNode),
                      (l = o.memoizedProps.style),
                      (s =
                        l != null && l.hasOwnProperty("display")
                          ? l.display
                          : null),
                      (f.style.display = Qh("display", s)));
              } catch (d) {
                lr(e, e.return, d);
              }
            }
          } else if (o.tag === 6) {
            if (u === null)
              try {
                o.stateNode.nodeValue = p ? "" : o.memoizedProps;
              } catch (d) {
                lr(e, e.return, d);
              }
          } else if (
            ((o.tag !== 22 && o.tag !== 23) ||
              o.memoizedState === null ||
              o === e) &&
            o.child !== null
          ) {
            (o.child.return = o), (o = o.child);
            continue;
          }
          if (o === e) break e;
          for (; o.sibling === null; ) {
            if (o.return === null || o.return === e) break e;
            u === o && (u = null), (o = o.return);
          }
          u === o && (u = null), (o.sibling.return = o.return), (o = o.sibling);
        }
      }
      break;
    case 19:
      dt(r, e), Ot(e), n & 4 && ap(e);
      break;
    case 21:
      break;
    default:
      dt(r, e), Ot(e);
  }
}
function Ot(e) {
  var r = e.flags;
  if (r & 2) {
    try {
      e: {
        for (var t = e.return; t !== null; ) {
          if (by(t)) {
            var n = t;
            break e;
          }
          t = t.return;
        }
        throw Error(le(160));
      }
      switch (n.tag) {
        case 5:
          var i = n.stateNode;
          n.flags & 32 && (Ca(i, ""), (n.flags &= -33));
          var a = ip(e);
          Ml(e, a, i);
          break;
        case 3:
        case 4:
          var s = n.stateNode.containerInfo,
            f = ip(e);
          Nl(e, f, s);
          break;
        default:
          throw Error(le(161));
      }
    } catch (l) {
      lr(e, e.return, l);
    }
    e.flags &= -3;
  }
  r & 4096 && (e.flags &= -4097);
}
function gb(e, r, t) {
  (be = e), Sy(e);
}
function Sy(e, r, t) {
  for (var n = (e.mode & 1) !== 0; be !== null; ) {
    var i = be,
      a = i.child;
    if (i.tag === 22 && n) {
      var s = i.memoizedState !== null || yo;
      if (!s) {
        var f = i.alternate,
          l = (f !== null && f.memoizedState !== null) || Or;
        f = yo;
        var p = Or;
        if (((yo = s), (Or = l) && !p))
          for (be = i; be !== null; )
            (s = be),
              (l = s.child),
              s.tag === 22 && s.memoizedState !== null
                ? up(i)
                : l !== null
                ? ((l.return = s), (be = l))
                : up(i);
        for (; a !== null; ) (be = a), Sy(a), (a = a.sibling);
        (be = i), (yo = f), (Or = p);
      }
      op(e);
    } else
      (i.subtreeFlags & 8772) !== 0 && a !== null
        ? ((a.return = i), (be = a))
        : op(e);
  }
}
function op(e) {
  for (; be !== null; ) {
    var r = be;
    if ((r.flags & 8772) !== 0) {
      var t = r.alternate;
      try {
        if ((r.flags & 8772) !== 0)
          switch (r.tag) {
            case 0:
            case 11:
            case 15:
              Or || Ts(5, r);
              break;
            case 1:
              var n = r.stateNode;
              if (r.flags & 4 && !Or)
                if (t === null) n.componentDidMount();
                else {
                  var i =
                    r.elementType === r.type
                      ? t.memoizedProps
                      : ht(r.type, t.memoizedProps);
                  n.componentDidUpdate(
                    i,
                    t.memoizedState,
                    n.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var a = r.updateQueue;
              a !== null && Hf(r, a, n);
              break;
            case 3:
              var s = r.updateQueue;
              if (s !== null) {
                if (((t = null), r.child !== null))
                  switch (r.child.tag) {
                    case 5:
                      t = r.child.stateNode;
                      break;
                    case 1:
                      t = r.child.stateNode;
                  }
                Hf(r, s, t);
              }
              break;
            case 5:
              var f = r.stateNode;
              if (t === null && r.flags & 4) {
                t = f;
                var l = r.memoizedProps;
                switch (r.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    l.autoFocus && t.focus();
                    break;
                  case "img":
                    l.src && (t.src = l.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (r.memoizedState === null) {
                var p = r.alternate;
                if (p !== null) {
                  var u = p.memoizedState;
                  if (u !== null) {
                    var o = u.dehydrated;
                    o !== null && _a(o);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(le(163));
          }
        Or || (r.flags & 512 && bl(r));
      } catch (c) {
        lr(r, r.return, c);
      }
    }
    if (r === e) {
      be = null;
      break;
    }
    if (((t = r.sibling), t !== null)) {
      (t.return = r.return), (be = t);
      break;
    }
    be = r.return;
  }
}
function sp(e) {
  for (; be !== null; ) {
    var r = be;
    if (r === e) {
      be = null;
      break;
    }
    var t = r.sibling;
    if (t !== null) {
      (t.return = r.return), (be = t);
      break;
    }
    be = r.return;
  }
}
function up(e) {
  for (; be !== null; ) {
    var r = be;
    try {
      switch (r.tag) {
        case 0:
        case 11:
        case 15:
          var t = r.return;
          try {
            Ts(4, r);
          } catch (l) {
            lr(r, t, l);
          }
          break;
        case 1:
          var n = r.stateNode;
          if (typeof n.componentDidMount == "function") {
            var i = r.return;
            try {
              n.componentDidMount();
            } catch (l) {
              lr(r, i, l);
            }
          }
          var a = r.return;
          try {
            bl(r);
          } catch (l) {
            lr(r, a, l);
          }
          break;
        case 5:
          var s = r.return;
          try {
            bl(r);
          } catch (l) {
            lr(r, s, l);
          }
      }
    } catch (l) {
      lr(r, r.return, l);
    }
    if (r === e) {
      be = null;
      break;
    }
    var f = r.sibling;
    if (f !== null) {
      (f.return = r.return), (be = f);
      break;
    }
    be = r.return;
  }
}
var yb = Math.ceil,
  as = Kt.ReactCurrentDispatcher,
  Ec = Kt.ReactCurrentOwner,
  ct = Kt.ReactCurrentBatchConfig,
  Ue = 0,
  yr = null,
  fr = null,
  Nr = 0,
  Yr = 0,
  bi = Dn(0),
  dr = 0,
  qa = null,
  Zn = 0,
  Ds = 0,
  Cc = 0,
  Ma = null,
  qr = null,
  Oc = 0,
  Pi = 1 / 0,
  Lt = null,
  os = !1,
  Sl = null,
  xn = null,
  xo = !1,
  cn = null,
  ss = 0,
  Sa = 0,
  Al = null,
  zo = -1,
  Ro = 0;
function zr() {
  return (Ue & 6) !== 0 ? cr() : zo !== -1 ? zo : (zo = cr());
}
function wn(e) {
  return (e.mode & 1) === 0
    ? 1
    : (Ue & 2) !== 0 && Nr !== 0
    ? Nr & -Nr
    : rb.transition !== null
    ? (Ro === 0 && (Ro = sg()), Ro)
    : ((e = Qe),
      e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : vg(e.type))),
      e);
}
function bt(e, r, t, n) {
  if (50 < Sa) throw ((Sa = 0), (Al = null), Error(le(185)));
  Ya(e, t, n),
    ((Ue & 2) === 0 || e !== yr) &&
      (e === yr && ((Ue & 2) === 0 && (Ds |= t), dr === 4 && un(e, Nr)),
      Wr(e, n),
      t === 1 &&
        Ue === 0 &&
        (r.mode & 1) === 0 &&
        ((Pi = cr() + 500), Es && _n()));
}
function Wr(e, r) {
  var t = e.callbackNode;
  rw(e, r);
  var n = Vo(e, e === yr ? Nr : 0);
  if (n === 0)
    t !== null && gf(t), (e.callbackNode = null), (e.callbackPriority = 0);
  else if (((r = n & -n), e.callbackPriority !== r)) {
    if ((t != null && gf(t), r === 1))
      e.tag === 0 ? eb(lp.bind(null, e)) : Ig(lp.bind(null, e)),
        Xw(function () {
          (Ue & 6) === 0 && _n();
        }),
        (t = null);
    else {
      switch (ug(n)) {
        case 1:
          t = ec;
          break;
        case 4:
          t = ag;
          break;
        case 16:
          t = Ho;
          break;
        case 536870912:
          t = og;
          break;
        default:
          t = Ho;
      }
      t = By(t, Ay.bind(null, e));
    }
    (e.callbackPriority = r), (e.callbackNode = t);
  }
}
function Ay(e, r) {
  if (((zo = -1), (Ro = 0), (Ue & 6) !== 0)) throw Error(le(327));
  var t = e.callbackNode;
  if (Oi() && e.callbackNode !== t) return null;
  var n = Vo(e, e === yr ? Nr : 0);
  if (n === 0) return null;
  if ((n & 30) !== 0 || (n & e.expiredLanes) !== 0 || r) r = us(e, n);
  else {
    r = n;
    var i = Ue;
    Ue |= 2;
    var a = Cy();
    (yr !== e || Nr !== r) && ((Lt = null), (Pi = cr() + 500), Un(e, r));
    do
      try {
        bb();
        break;
      } catch (f) {
        Ey(e, f);
      }
    while (1);
    mc(),
      (as.current = a),
      (Ue = i),
      fr !== null ? (r = 0) : ((yr = null), (Nr = 0), (r = dr));
  }
  if (r !== 0) {
    if (
      (r === 2 && ((i = Ju(e)), i !== 0 && ((n = i), (r = El(e, i)))), r === 1)
    )
      throw ((t = qa), Un(e, 0), un(e, n), Wr(e, cr()), t);
    if (r === 6) un(e, n);
    else {
      if (
        ((i = e.current.alternate),
        (n & 30) === 0 &&
          !xb(i) &&
          ((r = us(e, n)),
          r === 2 && ((a = Ju(e)), a !== 0 && ((n = a), (r = El(e, a)))),
          r === 1))
      )
        throw ((t = qa), Un(e, 0), un(e, n), Wr(e, cr()), t);
      switch (((e.finishedWork = i), (e.finishedLanes = n), r)) {
        case 0:
        case 1:
          throw Error(le(345));
        case 2:
          Fn(e, qr, Lt);
          break;
        case 3:
          if (
            (un(e, n), (n & 130023424) === n && ((r = Oc + 500 - cr()), 10 < r))
          ) {
            if (Vo(e, 0) !== 0) break;
            if (((i = e.suspendedLanes), (i & n) !== n)) {
              zr(), (e.pingedLanes |= e.suspendedLanes & i);
              break;
            }
            e.timeoutHandle = ol(Fn.bind(null, e, qr, Lt), r);
            break;
          }
          Fn(e, qr, Lt);
          break;
        case 4:
          if ((un(e, n), (n & 4194240) === n)) break;
          for (r = e.eventTimes, i = -1; 0 < n; ) {
            var s = 31 - wt(n);
            (a = 1 << s), (s = r[s]), s > i && (i = s), (n &= ~a);
          }
          if (
            ((n = i),
            (n = cr() - n),
            (n =
              (120 > n
                ? 120
                : 480 > n
                ? 480
                : 1080 > n
                ? 1080
                : 1920 > n
                ? 1920
                : 3e3 > n
                ? 3e3
                : 4320 > n
                ? 4320
                : 1960 * yb(n / 1960)) - n),
            10 < n)
          ) {
            e.timeoutHandle = ol(Fn.bind(null, e, qr, Lt), n);
            break;
          }
          Fn(e, qr, Lt);
          break;
        case 5:
          Fn(e, qr, Lt);
          break;
        default:
          throw Error(le(329));
      }
    }
  }
  return Wr(e, cr()), e.callbackNode === t ? Ay.bind(null, e) : null;
}
function El(e, r) {
  var t = Ma;
  return (
    e.current.memoizedState.isDehydrated && (Un(e, r).flags |= 256),
    (e = us(e, r)),
    e !== 2 && ((r = qr), (qr = t), r !== null && Cl(r)),
    e
  );
}
function Cl(e) {
  qr === null ? (qr = e) : qr.push.apply(qr, e);
}
function xb(e) {
  for (var r = e; ; ) {
    if (r.flags & 16384) {
      var t = r.updateQueue;
      if (t !== null && ((t = t.stores), t !== null))
        for (var n = 0; n < t.length; n++) {
          var i = t[n],
            a = i.getSnapshot;
          i = i.value;
          try {
            if (!St(a(), i)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((t = r.child), r.subtreeFlags & 16384 && t !== null))
      (t.return = r), (r = t);
    else {
      if (r === e) break;
      for (; r.sibling === null; ) {
        if (r.return === null || r.return === e) return !0;
        r = r.return;
      }
      (r.sibling.return = r.return), (r = r.sibling);
    }
  }
  return !0;
}
function un(e, r) {
  for (
    r &= ~Cc,
      r &= ~Ds,
      e.suspendedLanes |= r,
      e.pingedLanes &= ~r,
      e = e.expirationTimes;
    0 < r;

  ) {
    var t = 31 - wt(r),
      n = 1 << t;
    (e[t] = -1), (r &= ~n);
  }
}
function lp(e) {
  if ((Ue & 6) !== 0) throw Error(le(327));
  Oi();
  var r = Vo(e, 0);
  if ((r & 1) === 0) return Wr(e, cr()), null;
  var t = us(e, r);
  if (e.tag !== 0 && t === 2) {
    var n = Ju(e);
    n !== 0 && ((r = n), (t = El(e, n)));
  }
  if (t === 1) throw ((t = qa), Un(e, 0), un(e, r), Wr(e, cr()), t);
  if (t === 6) throw Error(le(345));
  return (
    (e.finishedWork = e.current.alternate),
    (e.finishedLanes = r),
    Fn(e, qr, Lt),
    Wr(e, cr()),
    null
  );
}
function Tc(e, r) {
  var t = Ue;
  Ue |= 1;
  try {
    return e(r);
  } finally {
    (Ue = t), Ue === 0 && ((Pi = cr() + 500), Es && _n());
  }
}
function Qn(e) {
  cn !== null && cn.tag === 0 && (Ue & 6) === 0 && Oi();
  var r = Ue;
  Ue |= 1;
  var t = ct.transition,
    n = Qe;
  try {
    if (((ct.transition = null), (Qe = 1), e)) return e();
  } finally {
    (Qe = n), (ct.transition = t), (Ue = r), (Ue & 6) === 0 && _n();
  }
}
function Dc() {
  (Yr = bi.current), tr(bi);
}
function Un(e, r) {
  (e.finishedWork = null), (e.finishedLanes = 0);
  var t = e.timeoutHandle;
  if ((t !== -1 && ((e.timeoutHandle = -1), Yw(t)), fr !== null))
    for (t = fr.return; t !== null; ) {
      var n = t;
      switch ((cc(n), n.tag)) {
        case 1:
          (n = n.type.childContextTypes), n != null && Yo();
          break;
        case 3:
          Ri(), tr(Vr), tr(Tr), xc();
          break;
        case 5:
          yc(n);
          break;
        case 4:
          Ri();
          break;
        case 13:
          tr(ar);
          break;
        case 19:
          tr(ar);
          break;
        case 10:
          vc(n.type._context);
          break;
        case 22:
        case 23:
          Dc();
      }
      t = t.return;
    }
  if (
    ((yr = e),
    (fr = e = bn(e.current, null)),
    (Nr = Yr = r),
    (dr = 0),
    (qa = null),
    (Cc = Ds = Zn = 0),
    (qr = Ma = null),
    Ln !== null)
  ) {
    for (r = 0; r < Ln.length; r++)
      if (((t = Ln[r]), (n = t.interleaved), n !== null)) {
        t.interleaved = null;
        var i = n.next,
          a = t.pending;
        if (a !== null) {
          var s = a.next;
          (a.next = i), (n.next = s);
        }
        t.pending = n;
      }
    Ln = null;
  }
  return e;
}
function Ey(e, r) {
  do {
    var t = fr;
    try {
      if ((mc(), (Bo.current = is), ns)) {
        for (var n = or.memoizedState; n !== null; ) {
          var i = n.queue;
          i !== null && (i.pending = null), (n = n.next);
        }
        ns = !1;
      }
      if (
        ((Wn = 0),
        (hr = mr = or = null),
        (ba = !1),
        (La = 0),
        (Ec.current = null),
        t === null || t.return === null)
      ) {
        (dr = 1), (qa = r), (fr = null);
        break;
      }
      e: {
        var a = e,
          s = t.return,
          f = t,
          l = r;
        if (
          ((r = Nr),
          (f.flags |= 32768),
          l !== null && typeof l == "object" && typeof l.then == "function")
        ) {
          var p = l,
            u = f,
            o = u.tag;
          if ((u.mode & 1) === 0 && (o === 0 || o === 11 || o === 15)) {
            var c = u.alternate;
            c
              ? ((u.updateQueue = c.updateQueue),
                (u.memoizedState = c.memoizedState),
                (u.lanes = c.lanes))
              : ((u.updateQueue = null), (u.memoizedState = null));
          }
          var m = Xf(s);
          if (m !== null) {
            (m.flags &= -257),
              jf(m, s, f, a, r),
              m.mode & 1 && Yf(a, p, r),
              (r = m),
              (l = p);
            var v = r.updateQueue;
            if (v === null) {
              var d = new Set();
              d.add(l), (r.updateQueue = d);
            } else v.add(l);
            break e;
          } else {
            if ((r & 1) === 0) {
              Yf(a, p, r), _c();
              break e;
            }
            l = Error(le(426));
          }
        } else if (nr && f.mode & 1) {
          var N = Xf(s);
          if (N !== null) {
            (N.flags & 65536) === 0 && (N.flags |= 256),
              jf(N, s, f, a, r),
              fc(Fi(l, f));
            break e;
          }
        }
        (a = l = Fi(l, f)),
          dr !== 4 && (dr = 2),
          Ma === null ? (Ma = [a]) : Ma.push(a),
          (a = s);
        do {
          switch (a.tag) {
            case 3:
              (a.flags |= 65536), (r &= -r), (a.lanes |= r);
              var g = ly(a, l, r);
              qf(a, g);
              break e;
            case 1:
              f = l;
              var w = a.type,
                h = a.stateNode;
              if (
                (a.flags & 128) === 0 &&
                (typeof w.getDerivedStateFromError == "function" ||
                  (h !== null &&
                    typeof h.componentDidCatch == "function" &&
                    (xn === null || !xn.has(h))))
              ) {
                (a.flags |= 65536), (r &= -r), (a.lanes |= r);
                var x = cy(a, f, r);
                qf(a, x);
                break e;
              }
          }
          a = a.return;
        } while (a !== null);
      }
      Ty(t);
    } catch (b) {
      (r = b), fr === t && t !== null && (fr = t = t.return);
      continue;
    }
    break;
  } while (1);
}
function Cy() {
  var e = as.current;
  return (as.current = is), e === null ? is : e;
}
function _c() {
  (dr === 0 || dr === 3 || dr === 2) && (dr = 4),
    yr === null ||
      ((Zn & 268435455) === 0 && (Ds & 268435455) === 0) ||
      un(yr, Nr);
}
function us(e, r) {
  var t = Ue;
  Ue |= 2;
  var n = Cy();
  (yr !== e || Nr !== r) && ((Lt = null), Un(e, r));
  do
    try {
      wb();
      break;
    } catch (i) {
      Ey(e, i);
    }
  while (1);
  if ((mc(), (Ue = t), (as.current = n), fr !== null)) throw Error(le(261));
  return (yr = null), (Nr = 0), dr;
}
function wb() {
  for (; fr !== null; ) Oy(fr);
}
function bb() {
  for (; fr !== null && !Wx(); ) Oy(fr);
}
function Oy(e) {
  var r = _y(e.alternate, e, Yr);
  (e.memoizedProps = e.pendingProps),
    r === null ? Ty(e) : (fr = r),
    (Ec.current = null);
}
function Ty(e) {
  var r = e;
  do {
    var t = r.alternate;
    if (((e = r.return), (r.flags & 32768) === 0)) {
      if (((t = mb(t, r, Yr)), t !== null)) {
        fr = t;
        return;
      }
    } else {
      if (((t = vb(t, r)), t !== null)) {
        (t.flags &= 32767), (fr = t);
        return;
      }
      if (e !== null)
        (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
      else {
        (dr = 6), (fr = null);
        return;
      }
    }
    if (((r = r.sibling), r !== null)) {
      fr = r;
      return;
    }
    fr = r = e;
  } while (r !== null);
  dr === 0 && (dr = 5);
}
function Fn(e, r, t) {
  var n = Qe,
    i = ct.transition;
  try {
    (ct.transition = null), (Qe = 1), Nb(e, r, t, n);
  } finally {
    (ct.transition = i), (Qe = n);
  }
  return null;
}
function Nb(e, r, t, n) {
  do Oi();
  while (cn !== null);
  if ((Ue & 6) !== 0) throw Error(le(327));
  t = e.finishedWork;
  var i = e.finishedLanes;
  if (t === null) return null;
  if (((e.finishedWork = null), (e.finishedLanes = 0), t === e.current))
    throw Error(le(177));
  (e.callbackNode = null), (e.callbackPriority = 0);
  var a = t.lanes | t.childLanes;
  if (
    (tw(e, a),
    e === yr && ((fr = yr = null), (Nr = 0)),
    ((t.subtreeFlags & 2064) === 0 && (t.flags & 2064) === 0) ||
      xo ||
      ((xo = !0),
      By(Ho, function () {
        return Oi(), null;
      })),
    (a = (t.flags & 15990) !== 0),
    (t.subtreeFlags & 15990) !== 0 || a)
  ) {
    (a = ct.transition), (ct.transition = null);
    var s = Qe;
    Qe = 1;
    var f = Ue;
    (Ue |= 4),
      (Ec.current = null),
      hb(e, t),
      My(t, e),
      qw(il),
      (Go = !!nl),
      (il = nl = null),
      (e.current = t),
      gb(t),
      Zx(),
      (Ue = f),
      (Qe = s),
      (ct.transition = a);
  } else e.current = t;
  if (
    (xo && ((xo = !1), (cn = e), (ss = i)),
    (a = e.pendingLanes),
    a === 0 && (xn = null),
    Xx(t.stateNode),
    Wr(e, cr()),
    r !== null)
  )
    for (n = e.onRecoverableError, t = 0; t < r.length; t++)
      (i = r[t]), n(i.value, { componentStack: i.stack, digest: i.digest });
  if (os) throw ((os = !1), (e = Sl), (Sl = null), e);
  return (
    (ss & 1) !== 0 && e.tag !== 0 && Oi(),
    (a = e.pendingLanes),
    (a & 1) !== 0 ? (e === Al ? Sa++ : ((Sa = 0), (Al = e))) : (Sa = 0),
    _n(),
    null
  );
}
function Oi() {
  if (cn !== null) {
    var e = ug(ss),
      r = ct.transition,
      t = Qe;
    try {
      if (((ct.transition = null), (Qe = 16 > e ? 16 : e), cn === null))
        var n = !1;
      else {
        if (((e = cn), (cn = null), (ss = 0), (Ue & 6) !== 0))
          throw Error(le(331));
        var i = Ue;
        for (Ue |= 4, be = e.current; be !== null; ) {
          var a = be,
            s = a.child;
          if ((be.flags & 16) !== 0) {
            var f = a.deletions;
            if (f !== null) {
              for (var l = 0; l < f.length; l++) {
                var p = f[l];
                for (be = p; be !== null; ) {
                  var u = be;
                  switch (u.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Na(8, u, a);
                  }
                  var o = u.child;
                  if (o !== null) (o.return = u), (be = o);
                  else
                    for (; be !== null; ) {
                      u = be;
                      var c = u.sibling,
                        m = u.return;
                      if ((wy(u), u === p)) {
                        be = null;
                        break;
                      }
                      if (c !== null) {
                        (c.return = m), (be = c);
                        break;
                      }
                      be = m;
                    }
                }
              }
              var v = a.alternate;
              if (v !== null) {
                var d = v.child;
                if (d !== null) {
                  v.child = null;
                  do {
                    var N = d.sibling;
                    (d.sibling = null), (d = N);
                  } while (d !== null);
                }
              }
              be = a;
            }
          }
          if ((a.subtreeFlags & 2064) !== 0 && s !== null)
            (s.return = a), (be = s);
          else
            e: for (; be !== null; ) {
              if (((a = be), (a.flags & 2048) !== 0))
                switch (a.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Na(9, a, a.return);
                }
              var g = a.sibling;
              if (g !== null) {
                (g.return = a.return), (be = g);
                break e;
              }
              be = a.return;
            }
        }
        var w = e.current;
        for (be = w; be !== null; ) {
          s = be;
          var h = s.child;
          if ((s.subtreeFlags & 2064) !== 0 && h !== null)
            (h.return = s), (be = h);
          else
            e: for (s = w; be !== null; ) {
              if (((f = be), (f.flags & 2048) !== 0))
                try {
                  switch (f.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Ts(9, f);
                  }
                } catch (b) {
                  lr(f, f.return, b);
                }
              if (f === s) {
                be = null;
                break e;
              }
              var x = f.sibling;
              if (x !== null) {
                (x.return = f.return), (be = x);
                break e;
              }
              be = f.return;
            }
        }
        if (
          ((Ue = i), _n(), Bt && typeof Bt.onPostCommitFiberRoot == "function")
        )
          try {
            Bt.onPostCommitFiberRoot(bs, e);
          } catch {}
        n = !0;
      }
      return n;
    } finally {
      (Qe = t), (ct.transition = r);
    }
  }
  return !1;
}
function cp(e, r, t) {
  (r = Fi(t, r)),
    (r = ly(e, r, 1)),
    (e = yn(e, r, 1)),
    (r = zr()),
    e !== null && (Ya(e, 1, r), Wr(e, r));
}
function lr(e, r, t) {
  if (e.tag === 3) cp(e, e, t);
  else
    for (; r !== null; ) {
      if (r.tag === 3) {
        cp(r, e, t);
        break;
      } else if (r.tag === 1) {
        var n = r.stateNode;
        if (
          typeof r.type.getDerivedStateFromError == "function" ||
          (typeof n.componentDidCatch == "function" &&
            (xn === null || !xn.has(n)))
        ) {
          (e = Fi(t, e)),
            (e = cy(r, e, 1)),
            (r = yn(r, e, 1)),
            (e = zr()),
            r !== null && (Ya(r, 1, e), Wr(r, e));
          break;
        }
      }
      r = r.return;
    }
}
function Mb(e, r, t) {
  var n = e.pingCache;
  n !== null && n.delete(r),
    (r = zr()),
    (e.pingedLanes |= e.suspendedLanes & t),
    yr === e &&
      (Nr & t) === t &&
      (dr === 4 || (dr === 3 && (Nr & 130023424) === Nr && 500 > cr() - Oc)
        ? Un(e, 0)
        : (Cc |= t)),
    Wr(e, r);
}
function Dy(e, r) {
  r === 0 &&
    ((e.mode & 1) === 0
      ? (r = 1)
      : ((r = uo), (uo <<= 1), (uo & 130023424) === 0 && (uo = 4194304)));
  var t = zr();
  (e = Xt(e, r)), e !== null && (Ya(e, r, t), Wr(e, t));
}
function Sb(e) {
  var r = e.memoizedState,
    t = 0;
  r !== null && (t = r.retryLane), Dy(e, t);
}
function Ab(e, r) {
  var t = 0;
  switch (e.tag) {
    case 13:
      var n = e.stateNode,
        i = e.memoizedState;
      i !== null && (t = i.retryLane);
      break;
    case 19:
      n = e.stateNode;
      break;
    default:
      throw Error(le(314));
  }
  n !== null && n.delete(r), Dy(e, t);
}
var _y;
_y = function (e, r, t) {
  if (e !== null)
    if (e.memoizedProps !== r.pendingProps || Vr.current) Hr = !0;
    else {
      if ((e.lanes & t) === 0 && (r.flags & 128) === 0)
        return (Hr = !1), pb(e, r, t);
      Hr = (e.flags & 131072) !== 0;
    }
  else (Hr = !1), nr && (r.flags & 1048576) !== 0 && $g(r, Jo, r.index);
  switch (((r.lanes = 0), r.tag)) {
    case 2:
      var n = r.type;
      $o(e, r), (e = r.pendingProps);
      var i = Ii(r, Tr.current);
      Ci(r, t), (i = bc(null, r, n, e, i, t));
      var a = Nc();
      return (
        (r.flags |= 1),
        typeof i == "object" &&
        i !== null &&
        typeof i.render == "function" &&
        i.$$typeof === void 0
          ? ((r.tag = 1),
            (r.memoizedState = null),
            (r.updateQueue = null),
            Gr(n) ? ((a = !0), Xo(r)) : (a = !1),
            (r.memoizedState =
              i.state !== null && i.state !== void 0 ? i.state : null),
            hc(r),
            (i.updater = Cs),
            (r.stateNode = i),
            (i._reactInternals = r),
            ml(r, n, e, t),
            (r = hl(null, r, n, !0, a, t)))
          : ((r.tag = 0), nr && a && lc(r), Br(null, r, i, t), (r = r.child)),
        r
      );
    case 16:
      n = r.elementType;
      e: {
        switch (
          ($o(e, r),
          (e = r.pendingProps),
          (i = n._init),
          (n = i(n._payload)),
          (r.type = n),
          (i = r.tag = Cb(n)),
          (e = ht(n, e)),
          i)
        ) {
          case 0:
            r = dl(null, r, n, e, t);
            break e;
          case 1:
            r = ep(null, r, n, e, t);
            break e;
          case 11:
            r = Jf(null, r, n, e, t);
            break e;
          case 14:
            r = Kf(null, r, n, ht(n.type, e), t);
            break e;
        }
        throw Error(le(306, n, ""));
      }
      return r;
    case 0:
      return (
        (n = r.type),
        (i = r.pendingProps),
        (i = r.elementType === n ? i : ht(n, i)),
        dl(e, r, n, i, t)
      );
    case 1:
      return (
        (n = r.type),
        (i = r.pendingProps),
        (i = r.elementType === n ? i : ht(n, i)),
        ep(e, r, n, i, t)
      );
    case 3:
      e: {
        if ((vy(r), e === null)) throw Error(le(387));
        (n = r.pendingProps),
          (a = r.memoizedState),
          (i = a.element),
          Pg(e, r),
          rs(r, n, null, t);
        var s = r.memoizedState;
        if (((n = s.element), a.isDehydrated))
          if (
            ((a = {
              element: n,
              isDehydrated: !1,
              cache: s.cache,
              pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
              transitions: s.transitions,
            }),
            (r.updateQueue.baseState = a),
            (r.memoizedState = a),
            r.flags & 256)
          ) {
            (i = Fi(Error(le(423)), r)), (r = rp(e, r, n, t, i));
            break e;
          } else if (n !== i) {
            (i = Fi(Error(le(424)), r)), (r = rp(e, r, n, t, i));
            break e;
          } else
            for (
              Jr = gn(r.stateNode.containerInfo.firstChild),
                Kr = r,
                nr = !0,
                yt = null,
                t = qg(r, null, n, t),
                r.child = t;
              t;

            )
              (t.flags = (t.flags & -3) | 4096), (t = t.sibling);
        else {
          if (($i(), n === i)) {
            r = jt(e, r, t);
            break e;
          }
          Br(e, r, n, t);
        }
        r = r.child;
      }
      return r;
    case 5:
      return (
        Hg(r),
        e === null && cl(r),
        (n = r.type),
        (i = r.pendingProps),
        (a = e !== null ? e.memoizedProps : null),
        (s = i.children),
        al(n, i) ? (s = null) : a !== null && al(n, a) && (r.flags |= 32),
        my(e, r),
        Br(e, r, s, t),
        r.child
      );
    case 6:
      return e === null && cl(r), null;
    case 13:
      return dy(e, r, t);
    case 4:
      return (
        gc(r, r.stateNode.containerInfo),
        (n = r.pendingProps),
        e === null ? (r.child = zi(r, null, n, t)) : Br(e, r, n, t),
        r.child
      );
    case 11:
      return (
        (n = r.type),
        (i = r.pendingProps),
        (i = r.elementType === n ? i : ht(n, i)),
        Jf(e, r, n, i, t)
      );
    case 7:
      return Br(e, r, r.pendingProps, t), r.child;
    case 8:
      return Br(e, r, r.pendingProps.children, t), r.child;
    case 12:
      return Br(e, r, r.pendingProps.children, t), r.child;
    case 10:
      e: {
        if (
          ((n = r.type._context),
          (i = r.pendingProps),
          (a = r.memoizedProps),
          (s = i.value),
          Ke(Ko, n._currentValue),
          (n._currentValue = s),
          a !== null)
        )
          if (St(a.value, s)) {
            if (a.children === i.children && !Vr.current) {
              r = jt(e, r, t);
              break e;
            }
          } else
            for (a = r.child, a !== null && (a.return = r); a !== null; ) {
              var f = a.dependencies;
              if (f !== null) {
                s = a.child;
                for (var l = f.firstContext; l !== null; ) {
                  if (l.context === n) {
                    if (a.tag === 1) {
                      (l = Wt(-1, t & -t)), (l.tag = 2);
                      var p = a.updateQueue;
                      if (p !== null) {
                        p = p.shared;
                        var u = p.pending;
                        u === null
                          ? (l.next = l)
                          : ((l.next = u.next), (u.next = l)),
                          (p.pending = l);
                      }
                    }
                    (a.lanes |= t),
                      (l = a.alternate),
                      l !== null && (l.lanes |= t),
                      fl(a.return, t, r),
                      (f.lanes |= t);
                    break;
                  }
                  l = l.next;
                }
              } else if (a.tag === 10) s = a.type === r.type ? null : a.child;
              else if (a.tag === 18) {
                if (((s = a.return), s === null)) throw Error(le(341));
                (s.lanes |= t),
                  (f = s.alternate),
                  f !== null && (f.lanes |= t),
                  fl(s, t, r),
                  (s = a.sibling);
              } else s = a.child;
              if (s !== null) s.return = a;
              else
                for (s = a; s !== null; ) {
                  if (s === r) {
                    s = null;
                    break;
                  }
                  if (((a = s.sibling), a !== null)) {
                    (a.return = s.return), (s = a);
                    break;
                  }
                  s = s.return;
                }
              a = s;
            }
        Br(e, r, i.children, t), (r = r.child);
      }
      return r;
    case 9:
      return (
        (i = r.type),
        (n = r.pendingProps.children),
        Ci(r, t),
        (i = ft(i)),
        (n = n(i)),
        (r.flags |= 1),
        Br(e, r, n, t),
        r.child
      );
    case 14:
      return (
        (n = r.type),
        (i = ht(n, r.pendingProps)),
        (i = ht(n.type, i)),
        Kf(e, r, n, i, t)
      );
    case 15:
      return fy(e, r, r.type, r.pendingProps, t);
    case 17:
      return (
        (n = r.type),
        (i = r.pendingProps),
        (i = r.elementType === n ? i : ht(n, i)),
        $o(e, r),
        (r.tag = 1),
        Gr(n) ? ((e = !0), Xo(r)) : (e = !1),
        Ci(r, t),
        kg(r, n, i),
        ml(r, n, i, t),
        hl(null, r, n, !0, e, t)
      );
    case 19:
      return hy(e, r, t);
    case 22:
      return py(e, r, t);
  }
  throw Error(le(156, r.tag));
};
function By(e, r) {
  return ig(e, r);
}
function Eb(e, r, t, n) {
  (this.tag = e),
    (this.key = t),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = r),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = n),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function lt(e, r, t, n) {
  return new Eb(e, r, t, n);
}
function Bc(e) {
  return (e = e.prototype), !(!e || !e.isReactComponent);
}
function Cb(e) {
  if (typeof e == "function") return Bc(e) ? 1 : 0;
  if (e != null) {
    if (((e = e.$$typeof), e === jl)) return 11;
    if (e === Jl) return 14;
  }
  return 2;
}
function bn(e, r) {
  var t = e.alternate;
  return (
    t === null
      ? ((t = lt(e.tag, r, e.key, e.mode)),
        (t.elementType = e.elementType),
        (t.type = e.type),
        (t.stateNode = e.stateNode),
        (t.alternate = e),
        (e.alternate = t))
      : ((t.pendingProps = r),
        (t.type = e.type),
        (t.flags = 0),
        (t.subtreeFlags = 0),
        (t.deletions = null)),
    (t.flags = e.flags & 14680064),
    (t.childLanes = e.childLanes),
    (t.lanes = e.lanes),
    (t.child = e.child),
    (t.memoizedProps = e.memoizedProps),
    (t.memoizedState = e.memoizedState),
    (t.updateQueue = e.updateQueue),
    (r = e.dependencies),
    (t.dependencies =
      r === null ? null : { lanes: r.lanes, firstContext: r.firstContext }),
    (t.sibling = e.sibling),
    (t.index = e.index),
    (t.ref = e.ref),
    t
  );
}
function Fo(e, r, t, n, i, a) {
  var s = 2;
  if (((n = e), typeof e == "function")) Bc(e) && (s = 1);
  else if (typeof e == "string") s = 5;
  else
    e: switch (e) {
      case fi:
        return qn(t.children, i, a, r);
      case Xl:
        (s = 8), (i |= 8);
        break;
      case Fu:
        return (
          (e = lt(12, t, r, i | 2)), (e.elementType = Fu), (e.lanes = a), e
        );
      case Pu:
        return (e = lt(13, t, r, i)), (e.elementType = Pu), (e.lanes = a), e;
      case Lu:
        return (e = lt(19, t, r, i)), (e.elementType = Lu), (e.lanes = a), e;
      case Uh:
        return _s(t, i, a, r);
      default:
        if (typeof e == "object" && e !== null)
          switch (e.$$typeof) {
            case Lh:
              s = 10;
              break e;
            case kh:
              s = 9;
              break e;
            case jl:
              s = 11;
              break e;
            case Jl:
              s = 14;
              break e;
            case tn:
              (s = 16), (n = null);
              break e;
          }
        throw Error(le(130, e == null ? e : typeof e, ""));
    }
  return (
    (r = lt(s, t, r, i)), (r.elementType = e), (r.type = n), (r.lanes = a), r
  );
}
function qn(e, r, t, n) {
  return (e = lt(7, e, n, r)), (e.lanes = t), e;
}
function _s(e, r, t, n) {
  return (
    (e = lt(22, e, n, r)),
    (e.elementType = Uh),
    (e.lanes = t),
    (e.stateNode = { isHidden: !1 }),
    e
  );
}
function Au(e, r, t) {
  return (e = lt(6, e, null, r)), (e.lanes = t), e;
}
function Eu(e, r, t) {
  return (
    (r = lt(4, e.children !== null ? e.children : [], e.key, r)),
    (r.lanes = t),
    (r.stateNode = {
      containerInfo: e.containerInfo,
      pendingChildren: null,
      implementation: e.implementation,
    }),
    r
  );
}
function Ob(e, r, t, n, i) {
  (this.tag = r),
    (this.containerInfo = e),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = ou(0)),
    (this.expirationTimes = ou(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = ou(0)),
    (this.identifierPrefix = n),
    (this.onRecoverableError = i),
    (this.mutableSourceEagerHydrationData = null);
}
function Ic(e, r, t, n, i, a, s, f, l) {
  return (
    (e = new Ob(e, r, t, f, l)),
    r === 1 ? ((r = 1), a === !0 && (r |= 8)) : (r = 0),
    (a = lt(3, null, null, r)),
    (e.current = a),
    (a.stateNode = e),
    (a.memoizedState = {
      element: n,
      isDehydrated: t,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    hc(a),
    e
  );
}
function Tb(e, r, t) {
  var n = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: ci,
    key: n == null ? null : "" + n,
    children: e,
    containerInfo: r,
    implementation: t,
  };
}
function Iy(e) {
  if (!e) return Mn;
  e = e._reactInternals;
  e: {
    if (Xn(e) !== e || e.tag !== 1) throw Error(le(170));
    var r = e;
    do {
      switch (r.tag) {
        case 3:
          r = r.stateNode.context;
          break e;
        case 1:
          if (Gr(r.type)) {
            r = r.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      r = r.return;
    } while (r !== null);
    throw Error(le(171));
  }
  if (e.tag === 1) {
    var t = e.type;
    if (Gr(t)) return Bg(e, t, r);
  }
  return r;
}
function $y(e, r, t, n, i, a, s, f, l) {
  return (
    (e = Ic(t, n, !0, e, i, a, s, f, l)),
    (e.context = Iy(null)),
    (t = e.current),
    (n = zr()),
    (i = wn(t)),
    (a = Wt(n, i)),
    (a.callback = r != null ? r : null),
    yn(t, a, i),
    (e.current.lanes = i),
    Ya(e, i, n),
    Wr(e, n),
    e
  );
}
function Bs(e, r, t, n) {
  var i = r.current,
    a = zr(),
    s = wn(i);
  return (
    (t = Iy(t)),
    r.context === null ? (r.context = t) : (r.pendingContext = t),
    (r = Wt(a, s)),
    (r.payload = { element: e }),
    (n = n === void 0 ? null : n),
    n !== null && (r.callback = n),
    (e = yn(i, r, s)),
    e !== null && (bt(e, i, s, a), _o(e, i, s)),
    s
  );
}
function ls(e) {
  if (((e = e.current), !e.child)) return null;
  switch (e.child.tag) {
    case 5:
      return e.child.stateNode;
    default:
      return e.child.stateNode;
  }
}
function fp(e, r) {
  if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
    var t = e.retryLane;
    e.retryLane = t !== 0 && t < r ? t : r;
  }
}
function $c(e, r) {
  fp(e, r), (e = e.alternate) && fp(e, r);
}
function Db() {
  return null;
}
var zy =
  typeof reportError == "function"
    ? reportError
    : function (e) {
        console.error(e);
      };
function zc(e) {
  this._internalRoot = e;
}
Is.prototype.render = zc.prototype.render = function (e) {
  var r = this._internalRoot;
  if (r === null) throw Error(le(409));
  Bs(e, r, null, null);
};
Is.prototype.unmount = zc.prototype.unmount = function () {
  var e = this._internalRoot;
  if (e !== null) {
    this._internalRoot = null;
    var r = e.containerInfo;
    Qn(function () {
      Bs(null, e, null, null);
    }),
      (r[Yt] = null);
  }
};
function Is(e) {
  this._internalRoot = e;
}
Is.prototype.unstable_scheduleHydration = function (e) {
  if (e) {
    var r = fg();
    e = { blockedOn: null, target: e, priority: r };
    for (var t = 0; t < sn.length && r !== 0 && r < sn[t].priority; t++);
    sn.splice(t, 0, e), t === 0 && mg(e);
  }
};
function Rc(e) {
  return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11));
}
function $s(e) {
  return !(
    !e ||
    (e.nodeType !== 1 &&
      e.nodeType !== 9 &&
      e.nodeType !== 11 &&
      (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable "))
  );
}
function pp() {}
function _b(e, r, t, n, i) {
  if (i) {
    if (typeof n == "function") {
      var a = n;
      n = function () {
        var p = ls(s);
        a.call(p);
      };
    }
    var s = $y(r, n, e, 0, null, !1, !1, "", pp);
    return (
      (e._reactRootContainer = s),
      (e[Yt] = s.current),
      $a(e.nodeType === 8 ? e.parentNode : e),
      Qn(),
      s
    );
  }
  for (; (i = e.lastChild); ) e.removeChild(i);
  if (typeof n == "function") {
    var f = n;
    n = function () {
      var p = ls(l);
      f.call(p);
    };
  }
  var l = Ic(e, 0, !1, null, null, !1, !1, "", pp);
  return (
    (e._reactRootContainer = l),
    (e[Yt] = l.current),
    $a(e.nodeType === 8 ? e.parentNode : e),
    Qn(function () {
      Bs(r, l, t, n);
    }),
    l
  );
}
function zs(e, r, t, n, i) {
  var a = t._reactRootContainer;
  if (a) {
    var s = a;
    if (typeof i == "function") {
      var f = i;
      i = function () {
        var l = ls(s);
        f.call(l);
      };
    }
    Bs(r, s, e, i);
  } else s = _b(t, r, e, i, n);
  return ls(s);
}
lg = function (e) {
  switch (e.tag) {
    case 3:
      var r = e.stateNode;
      if (r.current.memoizedState.isDehydrated) {
        var t = fa(r.pendingLanes);
        t !== 0 &&
          (rc(r, t | 1),
          Wr(r, cr()),
          (Ue & 6) === 0 && ((Pi = cr() + 500), _n()));
      }
      break;
    case 13:
      Qn(function () {
        var n = Xt(e, 1);
        if (n !== null) {
          var i = zr();
          bt(n, e, 1, i);
        }
      }),
        $c(e, 1);
  }
};
tc = function (e) {
  if (e.tag === 13) {
    var r = Xt(e, 134217728);
    if (r !== null) {
      var t = zr();
      bt(r, e, 134217728, t);
    }
    $c(e, 134217728);
  }
};
cg = function (e) {
  if (e.tag === 13) {
    var r = wn(e),
      t = Xt(e, r);
    if (t !== null) {
      var n = zr();
      bt(t, e, r, n);
    }
    $c(e, r);
  }
};
fg = function () {
  return Qe;
};
pg = function (e, r) {
  var t = Qe;
  try {
    return (Qe = e), r();
  } finally {
    Qe = t;
  }
};
Yu = function (e, r, t) {
  switch (r) {
    case "input":
      if ((qu(e, t), (r = t.name), t.type === "radio" && r != null)) {
        for (t = e; t.parentNode; ) t = t.parentNode;
        for (
          t = t.querySelectorAll(
            "input[name=" + JSON.stringify("" + r) + '][type="radio"]'
          ),
            r = 0;
          r < t.length;
          r++
        ) {
          var n = t[r];
          if (n !== e && n.form === e.form) {
            var i = As(n);
            if (!i) throw Error(le(90));
            Hh(n), qu(n, i);
          }
        }
      }
      break;
    case "textarea":
      Gh(e, t);
      break;
    case "select":
      (r = t.value), r != null && Mi(e, !!t.multiple, r, !1);
  }
};
Jh = Tc;
Kh = Qn;
var Bb = { usingClientEntryPoint: !1, Events: [ja, di, As, Xh, jh, Tc] },
  oa = {
    findFiberByHostInstance: Pn,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  Ib = {
    bundleType: oa.bundleType,
    version: oa.version,
    rendererPackageName: oa.rendererPackageName,
    rendererConfig: oa.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: Kt.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (e) {
      return (e = tg(e)), e === null ? null : e.stateNode;
    },
    findFiberByHostInstance: oa.findFiberByHostInstance || Db,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ != "undefined") {
  var wo = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wo.isDisabled && wo.supportsFiber)
    try {
      (bs = wo.inject(Ib)), (Bt = wo);
    } catch {}
}
tt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Bb;
tt.createPortal = function (e, r) {
  var t = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!Rc(r)) throw Error(le(200));
  return Tb(e, r, null, t);
};
tt.createRoot = function (e, r) {
  if (!Rc(e)) throw Error(le(299));
  var t = !1,
    n = "",
    i = zy;
  return (
    r != null &&
      (r.unstable_strictMode === !0 && (t = !0),
      r.identifierPrefix !== void 0 && (n = r.identifierPrefix),
      r.onRecoverableError !== void 0 && (i = r.onRecoverableError)),
    (r = Ic(e, 1, !1, null, null, t, !1, n, i)),
    (e[Yt] = r.current),
    $a(e.nodeType === 8 ? e.parentNode : e),
    new zc(r)
  );
};
tt.findDOMNode = function (e) {
  if (e == null) return null;
  if (e.nodeType === 1) return e;
  var r = e._reactInternals;
  if (r === void 0)
    throw typeof e.render == "function"
      ? Error(le(188))
      : ((e = Object.keys(e).join(",")), Error(le(268, e)));
  return (e = tg(r)), (e = e === null ? null : e.stateNode), e;
};
tt.flushSync = function (e) {
  return Qn(e);
};
tt.hydrate = function (e, r, t) {
  if (!$s(r)) throw Error(le(200));
  return zs(null, e, r, !0, t);
};
tt.hydrateRoot = function (e, r, t) {
  if (!Rc(e)) throw Error(le(405));
  var n = (t != null && t.hydratedSources) || null,
    i = !1,
    a = "",
    s = zy;
  if (
    (t != null &&
      (t.unstable_strictMode === !0 && (i = !0),
      t.identifierPrefix !== void 0 && (a = t.identifierPrefix),
      t.onRecoverableError !== void 0 && (s = t.onRecoverableError)),
    (r = $y(r, null, e, 1, t != null ? t : null, i, !1, a, s)),
    (e[Yt] = r.current),
    $a(e),
    n)
  )
    for (e = 0; e < n.length; e++)
      (t = n[e]),
        (i = t._getVersion),
        (i = i(t._source)),
        r.mutableSourceEagerHydrationData == null
          ? (r.mutableSourceEagerHydrationData = [t, i])
          : r.mutableSourceEagerHydrationData.push(t, i);
  return new Is(r);
};
tt.render = function (e, r, t) {
  if (!$s(r)) throw Error(le(200));
  return zs(null, e, r, !1, t);
};
tt.unmountComponentAtNode = function (e) {
  if (!$s(e)) throw Error(le(40));
  return e._reactRootContainer
    ? (Qn(function () {
        zs(null, null, e, !1, function () {
          (e._reactRootContainer = null), (e[Yt] = null);
        });
      }),
      !0)
    : !1;
};
tt.unstable_batchedUpdates = Tc;
tt.unstable_renderSubtreeIntoContainer = function (e, r, t, n) {
  if (!$s(t)) throw Error(le(200));
  if (e == null || e._reactInternals === void 0) throw Error(le(38));
  return zs(e, r, t, !1, n);
};
tt.version = "18.2.0-next-9e3b772b8-20220608";
function Ry() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ == "undefined" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Ry);
    } catch (e) {
      console.error(e);
    }
}
Ry(), ($h.exports = tt);
var mp = $h.exports;
(zu.createRoot = mp.createRoot), (zu.hydrateRoot = mp.hydrateRoot);
function jr() {
  return (
    (jr = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var r = 1; r < arguments.length; r++) {
            var t = arguments[r];
            for (var n in t)
              Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
          }
          return e;
        }),
    jr.apply(this, arguments)
  );
}
var Fy = {
  epsilon: 1e-12,
  matrix: "Matrix",
  number: "number",
  precision: 64,
  predictable: !1,
  randomSeed: null,
};
function $e(e) {
  return typeof e == "number";
}
function Be(e) {
  return !e || typeof e != "object" || typeof e.constructor != "function"
    ? !1
    : (e.isBigNumber === !0 &&
        typeof e.constructor.prototype == "object" &&
        e.constructor.prototype.isBigNumber === !0) ||
        (typeof e.constructor.isDecimal == "function" &&
          e.constructor.isDecimal(e) === !0);
}
function Nt(e) {
  return (
    (e && typeof e == "object" && Object.getPrototypeOf(e).isComplex === !0) ||
    !1
  );
}
function Bn(e) {
  return (
    (e && typeof e == "object" && Object.getPrototypeOf(e).isFraction === !0) ||
    !1
  );
}
function jn(e) {
  return (e && e.constructor.prototype.isUnit === !0) || !1;
}
function $r(e) {
  return typeof e == "string";
}
var He = Array.isArray;
function Ae(e) {
  return (e && e.constructor.prototype.isMatrix === !0) || !1;
}
function Jn(e) {
  return Array.isArray(e) || Ae(e);
}
function Ha(e) {
  return (
    (e && e.isDenseMatrix && e.constructor.prototype.isMatrix === !0) || !1
  );
}
function fn(e) {
  return (
    (e && e.isSparseMatrix && e.constructor.prototype.isMatrix === !0) || !1
  );
}
function Ka(e) {
  return (e && e.constructor.prototype.isRange === !0) || !1;
}
function Zi(e) {
  return (e && e.constructor.prototype.isIndex === !0) || !1;
}
function Py(e) {
  return typeof e == "boolean";
}
function Fc(e) {
  return (e && e.constructor.prototype.isResultSet === !0) || !1;
}
function Rs(e) {
  return (e && e.constructor.prototype.isHelp === !0) || !1;
}
function Ly(e) {
  return typeof e == "function";
}
function ky(e) {
  return e instanceof Date;
}
function Uy(e) {
  return e instanceof RegExp;
}
function Fs(e) {
  return !!(
    e &&
    typeof e == "object" &&
    e.constructor === Object &&
    !Nt(e) &&
    !Bn(e)
  );
}
function qy(e) {
  return e === null;
}
function Hy(e) {
  return e === void 0;
}
function Sn(e) {
  return (
    (e && e.isAccessorNode === !0 && e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function Xr(e) {
  return (
    (e && e.isArrayNode === !0 && e.constructor.prototype.isNode === !0) || !1
  );
}
function Vy(e) {
  return (
    (e && e.isAssignmentNode === !0 && e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function Gy(e) {
  return (
    (e && e.isBlockNode === !0 && e.constructor.prototype.isNode === !0) || !1
  );
}
function Wy(e) {
  return (
    (e &&
      e.isConditionalNode === !0 &&
      e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function Ve(e) {
  return (
    (e && e.isConstantNode === !0 && e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function Qi(e) {
  return (
    (e &&
      e.isFunctionAssignmentNode === !0 &&
      e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function An(e) {
  return (
    (e && e.isFunctionNode === !0 && e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function Kn(e) {
  return (
    (e && e.isIndexNode === !0 && e.constructor.prototype.isNode === !0) || !1
  );
}
function Le(e) {
  return (e && e.isNode === !0 && e.constructor.prototype.isNode === !0) || !1;
}
function eo(e) {
  return (
    (e && e.isObjectNode === !0 && e.constructor.prototype.isNode === !0) || !1
  );
}
function Ir(e) {
  return (
    (e && e.isOperatorNode === !0 && e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function Yi(e) {
  return (
    (e &&
      e.isParenthesisNode === !0 &&
      e.constructor.prototype.isNode === !0) ||
    !1
  );
}
function Zy(e) {
  return (
    (e && e.isRangeNode === !0 && e.constructor.prototype.isNode === !0) || !1
  );
}
function gr(e) {
  return (
    (e && e.isSymbolNode === !0 && e.constructor.prototype.isNode === !0) || !1
  );
}
function Ps(e) {
  return (e && e.constructor.prototype.isChain === !0) || !1;
}
function Ye(e) {
  var r = typeof e;
  return r === "object"
    ? e === null
      ? "null"
      : Array.isArray(e)
      ? "Array"
      : e instanceof Date
      ? "Date"
      : e instanceof RegExp
      ? "RegExp"
      : Be(e)
      ? "BigNumber"
      : Nt(e)
      ? "Complex"
      : Bn(e)
      ? "Fraction"
      : Ae(e)
      ? "Matrix"
      : jn(e)
      ? "Unit"
      : Zi(e)
      ? "Index"
      : Ka(e)
      ? "Range"
      : Fc(e)
      ? "ResultSet"
      : Le(e)
      ? e.type
      : Ps(e)
      ? "Chain"
      : Rs(e)
      ? "Help"
      : "Object"
    : r === "function"
    ? "Function"
    : r;
}
function Me(e) {
  var r = typeof e;
  if (
    r === "number" ||
    r === "string" ||
    r === "boolean" ||
    e === null ||
    e === void 0
  )
    return e;
  if (typeof e.clone == "function") return e.clone();
  if (Array.isArray(e))
    return e.map(function (t) {
      return Me(t);
    });
  if (e instanceof Date) return new Date(e.valueOf());
  if (Be(e)) return e;
  if (e instanceof RegExp) throw new TypeError("Cannot clone " + e);
  return ma(e, Me);
}
function ma(e, r) {
  var t = {};
  for (var n in e) ge(e, n) && (t[n] = r(e[n]));
  return t;
}
function Pc(e, r) {
  for (var t in r) ge(r, t) && (e[t] = r[t]);
  return e;
}
function Qy(e, r) {
  if (Array.isArray(r))
    throw new TypeError("Arrays are not supported by deepExtend");
  for (var t in r)
    if (ge(r, t) && !(t in Object.prototype) && !(t in Function.prototype))
      if (r[t] && r[t].constructor === Object)
        e[t] === void 0 && (e[t] = {}),
          e[t] && e[t].constructor === Object ? Qy(e[t], r[t]) : (e[t] = r[t]);
      else {
        if (Array.isArray(r[t]))
          throw new TypeError("Arrays are not supported by deepExtend");
        e[t] = r[t];
      }
  return e;
}
function Va(e, r) {
  var t, n, i;
  if (Array.isArray(e)) {
    if (!Array.isArray(r) || e.length !== r.length) return !1;
    for (n = 0, i = e.length; n < i; n++) if (!Va(e[n], r[n])) return !1;
    return !0;
  } else {
    if (typeof e == "function") return e === r;
    if (e instanceof Object) {
      if (Array.isArray(r) || !(r instanceof Object)) return !1;
      for (t in e) if (!(t in r) || !Va(e[t], r[t])) return !1;
      for (t in r) if (!(t in e)) return !1;
      return !0;
    } else return e === r;
  }
}
function $b(e) {
  var r = {};
  return Yy(e, r), r;
}
function Yy(e, r) {
  for (var t in e)
    if (ge(e, t)) {
      var n = e[t];
      typeof n == "object" && n !== null ? Yy(n, r) : (r[t] = n);
    }
}
function Po(e, r, t) {
  var n = !0,
    i;
  Object.defineProperty(e, r, {
    get: function () {
      return n && ((i = t()), (n = !1)), i;
    },
    set: function (s) {
      (i = s), (n = !1);
    },
    configurable: !0,
    enumerable: !0,
  });
}
function ge(e, r) {
  return e && Object.hasOwnProperty.call(e, r);
}
function zb(e) {
  return e && typeof e.factory == "function";
}
function Rb(e, r) {
  for (var t = {}, n = 0; n < r.length; n++) {
    var i = r[n],
      a = e[i];
    a !== void 0 && (t[i] = a);
  }
  return t;
}
function vp(e) {
  return Object.keys(e).map((r) => e[r]);
}
var dp = ["Matrix", "Array"],
  hp = ["number", "BigNumber", "Fraction"];
function Fb(e, r) {
  function t(n) {
    if (n) {
      var i = ma(e, Me);
      gp(n, "matrix", dp), gp(n, "number", hp), Qy(e, n);
      var a = ma(e, Me),
        s = ma(n, Me);
      return r("config", a, i, s), a;
    } else return ma(e, Me);
  }
  return (
    (t.MATRIX_OPTIONS = dp),
    (t.NUMBER_OPTIONS = hp),
    Object.keys(Fy).forEach((n) => {
      Object.defineProperty(t, n, {
        get: () => e[n],
        enumerable: !0,
        configurable: !0,
      });
    }),
    t
  );
}
function Pb(e, r) {
  return e.indexOf(r) !== -1;
}
function gp(e, r, t) {
  e[r] !== void 0 &&
    !Pb(t, e[r]) &&
    console.warn(
      'Warning: Unknown value "' +
        e[r] +
        '" for configuration option "' +
        r +
        '". Available options: ' +
        t.map((n) => JSON.stringify(n)).join(", ") +
        "."
    );
}
var Xy = { exports: {} };
(function (e, r) {
  (function (t, n) {
    e.exports = n();
  })(On, function () {
    function t() {
      return !0;
    }
    function n() {
      return !1;
    }
    function i() {}
    function a() {
      var s = [
          {
            name: "number",
            test: function (z) {
              return typeof z == "number";
            },
          },
          {
            name: "string",
            test: function (z) {
              return typeof z == "string";
            },
          },
          {
            name: "boolean",
            test: function (z) {
              return typeof z == "boolean";
            },
          },
          {
            name: "Function",
            test: function (z) {
              return typeof z == "function";
            },
          },
          { name: "Array", test: Array.isArray },
          {
            name: "Date",
            test: function (z) {
              return z instanceof Date;
            },
          },
          {
            name: "RegExp",
            test: function (z) {
              return z instanceof RegExp;
            },
          },
          {
            name: "Object",
            test: function (z) {
              return (
                typeof z == "object" && z !== null && z.constructor === Object
              );
            },
          },
          {
            name: "null",
            test: function (z) {
              return z === null;
            },
          },
          {
            name: "undefined",
            test: function (z) {
              return z === void 0;
            },
          },
        ],
        f = { name: "any", test: t },
        l = [],
        p = [],
        u = { types: s, conversions: p, ignore: l };
      function o(z) {
        var U = k(u.types, function (H) {
          return H.name === z;
        });
        if (U) return U;
        if (z === "any") return f;
        var j = k(u.types, function (H) {
          return H.name.toLowerCase() === z.toLowerCase();
        });
        throw new TypeError(
          'Unknown type "' +
            z +
            '"' +
            (j ? '. Did you mean "' + j.name + '"?' : "")
        );
      }
      function c(z) {
        return z === f ? 999 : u.types.indexOf(z);
      }
      function m(z) {
        var U = k(u.types, function (j) {
          return j.test(z);
        });
        if (U) return U.name;
        throw new TypeError("Value has unknown type. Value: " + z);
      }
      function v(z, U) {
        if (!z.signatures) throw new TypeError("Function is no typed-function");
        var j;
        if (typeof U == "string") {
          j = U.split(",");
          for (var H = 0; H < j.length; H++) j[H] = j[H].trim();
        } else if (Array.isArray(U)) j = U;
        else
          throw new TypeError(
            "String array or a comma separated string expected"
          );
        var ae = j.join(","),
          ue = z.signatures[ae];
        if (ue) return ue;
        throw new TypeError(
          "Signature not found (signature: " +
            (z.name || "unnamed") +
            "(" +
            j.join(", ") +
            "))"
        );
      }
      function d(z, U) {
        var j = m(z);
        if (U === j) return z;
        for (var H = 0; H < u.conversions.length; H++) {
          var ae = u.conversions[H];
          if (ae.from === j && ae.to === U) return ae.convert(z);
        }
        throw new Error("Cannot convert from " + j + " to " + U);
      }
      function N(z) {
        return z
          .map(function (U) {
            var j = U.types.map(E);
            return (U.restParam ? "..." : "") + j.join("|");
          })
          .join(",");
      }
      function g(z, U) {
        var j = z.indexOf("...") === 0,
          H = j ? (z.length > 3 ? z.slice(3) : "any") : z,
          ae = H.split("|").map(K).filter(ie).filter(re),
          ue = B(U, ae),
          ve = ae.map(function (pe) {
            var we = o(pe);
            return {
              name: pe,
              typeIndex: c(we),
              test: we.test,
              conversion: null,
              conversionIndex: -1,
            };
          }),
          fe = ue.map(function (pe) {
            var we = o(pe.from);
            return {
              name: pe.from,
              typeIndex: c(we),
              test: we.test,
              conversion: pe,
              conversionIndex: U.indexOf(pe),
            };
          });
        return { types: ve.concat(fe), restParam: j };
      }
      function w(z, U, j) {
        var H = [];
        return (
          z.trim() !== "" &&
            (H = z
              .split(",")
              .map(K)
              .map(function (ae, ue, ve) {
                var fe = g(ae, j);
                if (fe.restParam && ue !== ve.length - 1)
                  throw new SyntaxError(
                    'Unexpected rest parameter "' +
                      ae +
                      '": only allowed for the last parameter'
                  );
                return fe;
              })),
          H.some(oe) ? null : { params: H, fn: U }
        );
      }
      function h(z) {
        var U = de(z);
        return U ? U.restParam : !1;
      }
      function x(z) {
        return z.types.some(function (U) {
          return U.conversion != null;
        });
      }
      function b(z) {
        if (!z || z.types.length === 0) return t;
        if (z.types.length === 1) return o(z.types[0].name).test;
        if (z.types.length === 2) {
          var U = o(z.types[0].name).test,
            j = o(z.types[1].name).test;
          return function (ue) {
            return U(ue) || j(ue);
          };
        } else {
          var H = z.types.map(function (ae) {
            return o(ae.name).test;
          });
          return function (ue) {
            for (var ve = 0; ve < H.length; ve++) if (H[ve](ue)) return !0;
            return !1;
          };
        }
      }
      function y(z) {
        var U, j, H;
        if (h(z)) {
          U = ee(z).map(b);
          var ae = U.length,
            ue = b(de(z)),
            ve = function (fe) {
              for (var pe = ae; pe < fe.length; pe++)
                if (!ue(fe[pe])) return !1;
              return !0;
            };
          return function (pe) {
            for (var we = 0; we < U.length; we++) if (!U[we](pe[we])) return !1;
            return ve(pe) && pe.length >= ae + 1;
          };
        } else
          return z.length === 0
            ? function (pe) {
                return pe.length === 0;
              }
            : z.length === 1
            ? ((j = b(z[0])),
              function (pe) {
                return j(pe[0]) && pe.length === 1;
              })
            : z.length === 2
            ? ((j = b(z[0])),
              (H = b(z[1])),
              function (pe) {
                return j(pe[0]) && H(pe[1]) && pe.length === 2;
              })
            : ((U = z.map(b)),
              function (pe) {
                for (var we = 0; we < U.length; we++)
                  if (!U[we](pe[we])) return !1;
                return pe.length === U.length;
              });
      }
      function A(z, U) {
        return U < z.params.length
          ? z.params[U]
          : h(z.params)
          ? de(z.params)
          : null;
      }
      function S(z, U, j) {
        var H = A(z, U),
          ae = H ? (j ? H.types.filter(M) : H.types) : [];
        return ae.map(E);
      }
      function E(z) {
        return z.name;
      }
      function M(z) {
        return z.conversion === null || z.conversion === void 0;
      }
      function _(z, U) {
        var j = Q(
          V(z, function (H) {
            return S(H, U, !1);
          })
        );
        return j.indexOf("any") !== -1 ? ["any"] : j;
      }
      function C(z, U, j) {
        var H,
          ae,
          ue = z || "unnamed",
          ve = j,
          fe;
        for (fe = 0; fe < U.length; fe++) {
          var pe = ve.filter(function (Je) {
            var at = b(A(Je, fe));
            return (fe < Je.params.length || h(Je.params)) && at(U[fe]);
          });
          if (pe.length === 0) {
            if (((ae = _(ve, fe)), ae.length > 0)) {
              var we = m(U[fe]);
              return (
                (H = new TypeError(
                  "Unexpected type of argument in function " +
                    ue +
                    " (expected: " +
                    ae.join(" or ") +
                    ", actual: " +
                    we +
                    ", index: " +
                    fe +
                    ")"
                )),
                (H.data = {
                  category: "wrongType",
                  fn: ue,
                  index: fe,
                  actual: we,
                  expected: ae,
                }),
                H
              );
            }
          } else ve = pe;
        }
        var Ge = ve.map(function (Je) {
          return h(Je.params) ? 1 / 0 : Je.params.length;
        });
        if (U.length < Math.min.apply(null, Ge))
          return (
            (ae = _(ve, fe)),
            (H = new TypeError(
              "Too few arguments in function " +
                ue +
                " (expected: " +
                ae.join(" or ") +
                ", index: " +
                U.length +
                ")"
            )),
            (H.data = {
              category: "tooFewArgs",
              fn: ue,
              index: U.length,
              expected: ae,
            }),
            H
          );
        var ir = Math.max.apply(null, Ge);
        return U.length > ir
          ? ((H = new TypeError(
              "Too many arguments in function " +
                ue +
                " (expected: " +
                ir +
                ", actual: " +
                U.length +
                ")"
            )),
            (H.data = {
              category: "tooManyArgs",
              fn: ue,
              index: U.length,
              expectedLength: ir,
            }),
            H)
          : ((H = new TypeError(
              'Arguments of type "' +
                U.join(", ") +
                '" do not match any of the defined signatures of function ' +
                ue +
                "."
            )),
            (H.data = { category: "mismatch", actual: U.map(m) }),
            H);
      }
      function I(z) {
        for (var U = 999, j = 0; j < z.types.length; j++)
          M(z.types[j]) && (U = Math.min(U, z.types[j].typeIndex));
        return U;
      }
      function L(z) {
        for (var U = 999, j = 0; j < z.types.length; j++)
          M(z.types[j]) || (U = Math.min(U, z.types[j].conversionIndex));
        return U;
      }
      function $(z, U) {
        var j;
        return (
          (j = z.restParam - U.restParam),
          j !== 0 ||
          ((j = x(z) - x(U)), j !== 0) ||
          ((j = I(z) - I(U)), j !== 0)
            ? j
            : L(z) - L(U)
        );
      }
      function D(z, U) {
        var j = Math.min(z.params.length, U.params.length),
          H,
          ae;
        if (((ae = z.params.some(x) - U.params.some(x)), ae !== 0)) return ae;
        for (H = 0; H < j; H++)
          if (((ae = x(z.params[H]) - x(U.params[H])), ae !== 0)) return ae;
        for (H = 0; H < j; H++)
          if (((ae = $(z.params[H], U.params[H])), ae !== 0)) return ae;
        return z.params.length - U.params.length;
      }
      function B(z, U) {
        var j = {};
        return (
          z.forEach(function (H) {
            U.indexOf(H.from) === -1 &&
              U.indexOf(H.to) !== -1 &&
              !j[H.from] &&
              (j[H.from] = H);
          }),
          Object.keys(j).map(function (H) {
            return j[H];
          })
        );
      }
      function R(z, U) {
        var j = U;
        if (z.some(x)) {
          var H = h(z),
            ae = z.map(T);
          j = function () {
            for (
              var pe = [],
                we = H ? arguments.length - 1 : arguments.length,
                Ge = 0;
              Ge < we;
              Ge++
            )
              pe[Ge] = ae[Ge](arguments[Ge]);
            return H && (pe[we] = arguments[we].map(ae[we])), U.apply(this, pe);
          };
        }
        var ue = j;
        if (h(z)) {
          var ve = z.length - 1;
          ue = function () {
            return j.apply(
              this,
              xe(arguments, 0, ve).concat([xe(arguments, ve)])
            );
          };
        }
        return ue;
      }
      function T(z) {
        var U,
          j,
          H,
          ae,
          ue = [],
          ve = [];
        switch (
          (z.types.forEach(function (fe) {
            fe.conversion &&
              (ue.push(o(fe.conversion.from).test),
              ve.push(fe.conversion.convert));
          }),
          ve.length)
        ) {
          case 0:
            return function (pe) {
              return pe;
            };
          case 1:
            return (
              (U = ue[0]),
              (H = ve[0]),
              function (pe) {
                return U(pe) ? H(pe) : pe;
              }
            );
          case 2:
            return (
              (U = ue[0]),
              (j = ue[1]),
              (H = ve[0]),
              (ae = ve[1]),
              function (pe) {
                return U(pe) ? H(pe) : j(pe) ? ae(pe) : pe;
              }
            );
          default:
            return function (pe) {
              for (var we = 0; we < ve.length; we++)
                if (ue[we](pe)) return ve[we](pe);
              return pe;
            };
        }
      }
      function P(z) {
        var U = {};
        return (
          z.forEach(function (j) {
            j.params.some(x) ||
              W(j.params, !0).forEach(function (H) {
                U[N(H)] = j.fn;
              });
          }),
          U
        );
      }
      function W(z, U) {
        function j(H, ae, ue) {
          if (ae < H.length) {
            var ve = H[ae],
              fe = U ? ve.types.filter(M) : ve.types,
              pe;
            if (ve.restParam) {
              var we = fe.filter(M);
              pe = we.length < fe.length ? [we, fe] : [fe];
            } else
              pe = fe.map(function (ir) {
                return [ir];
              });
            return V(pe, function (ir) {
              return j(H, ae + 1, ue.concat([ir]));
            });
          } else {
            var Ge = ue.map(function (ir, Je) {
              return { types: ir, restParam: Je === H.length - 1 && h(H) };
            });
            return [Ge];
          }
        }
        return j(z, 0, []);
      }
      function J(z, U) {
        for (
          var j = Math.max(z.params.length, U.params.length), H = 0;
          H < j;
          H++
        ) {
          var ae = S(z, H, !0),
            ue = S(U, H, !0);
          if (!he(ae, ue)) return !1;
        }
        var ve = z.params.length,
          fe = U.params.length,
          pe = h(z.params),
          we = h(U.params);
        return pe ? (we ? ve === fe : fe >= ve) : we ? ve >= fe : ve === fe;
      }
      function G(z, U) {
        if (Object.keys(U).length === 0)
          throw new SyntaxError("No signatures provided");
        var j = [];
        Object.keys(U)
          .map(function (er) {
            return w(er, U[er], u.conversions);
          })
          .filter(te)
          .forEach(function (er) {
            var Ar = k(j, function (Ct) {
              return J(Ct, er);
            });
            if (Ar)
              throw new TypeError(
                'Conflicting signatures "' +
                  N(Ar.params) +
                  '" and "' +
                  N(er.params) +
                  '".'
              );
            j.push(er);
          });
        var H = V(j, function (er) {
          var Ar = er ? W(er.params, !1) : [];
          return Ar.map(function (Ct) {
            return { params: Ct, fn: er.fn };
          });
        }).filter(te);
        H.sort(D);
        var ae = H[0] && H[0].params.length <= 2 && !h(H[0].params),
          ue = H[1] && H[1].params.length <= 2 && !h(H[1].params),
          ve = H[2] && H[2].params.length <= 2 && !h(H[2].params),
          fe = H[3] && H[3].params.length <= 2 && !h(H[3].params),
          pe = H[4] && H[4].params.length <= 2 && !h(H[4].params),
          we = H[5] && H[5].params.length <= 2 && !h(H[5].params),
          Ge = ae && ue && ve && fe && pe && we,
          ir = H.map(function (er) {
            return y(er.params);
          }),
          Je = ae ? b(H[0].params[0]) : n,
          at = ue ? b(H[1].params[0]) : n,
          Qr = ve ? b(H[2].params[0]) : n,
          Ft = fe ? b(H[3].params[0]) : n,
          qe = pe ? b(H[4].params[0]) : n,
          en = we ? b(H[5].params[0]) : n,
          O = ae ? b(H[0].params[1]) : n,
          Z = ue ? b(H[1].params[1]) : n,
          ne = ve ? b(H[2].params[1]) : n,
          me = fe ? b(H[3].params[1]) : n,
          Te = pe ? b(H[4].params[1]) : n,
          ze = we ? b(H[5].params[1]) : n,
          pr = H.map(function (er) {
            return R(er.params, er.fn);
          }),
          Ks = ae ? pr[0] : i,
          rx = ue ? pr[1] : i,
          tx = ve ? pr[2] : i,
          nx = fe ? pr[3] : i,
          ix = pe ? pr[4] : i,
          ax = we ? pr[5] : i,
          ox = ae ? H[0].params.length : -1,
          sx = ue ? H[1].params.length : -1,
          ux = ve ? H[2].params.length : -1,
          lx = fe ? H[3].params.length : -1,
          cx = pe ? H[4].params.length : -1,
          fx = we ? H[5].params.length : -1,
          px = Ge ? 6 : 0,
          mx = H.length,
          vx = function () {
            for (var Ar = px; Ar < mx; Ar++)
              if (ir[Ar](arguments)) return pr[Ar].apply(this, arguments);
            return u.onMismatch(z, arguments, H);
          },
          eu = function er(Ar, Ct) {
            return arguments.length === ox && Je(Ar) && O(Ct)
              ? Ks.apply(er, arguments)
              : arguments.length === sx && at(Ar) && Z(Ct)
              ? rx.apply(er, arguments)
              : arguments.length === ux && Qr(Ar) && ne(Ct)
              ? tx.apply(er, arguments)
              : arguments.length === lx && Ft(Ar) && me(Ct)
              ? nx.apply(er, arguments)
              : arguments.length === cx && qe(Ar) && Te(Ct)
              ? ix.apply(er, arguments)
              : arguments.length === fx && en(Ar) && ze(Ct)
              ? ax.apply(er, arguments)
              : vx.apply(er, arguments);
          };
        try {
          Object.defineProperty(eu, "name", { value: z });
        } catch {}
        return (eu.signatures = P(H)), eu;
      }
      function Y(z, U, j) {
        throw C(z, U, j);
      }
      function re(z) {
        return u.ignore.indexOf(z) === -1;
      }
      function K(z) {
        return z.trim();
      }
      function ie(z) {
        return !!z;
      }
      function te(z) {
        return z !== null;
      }
      function oe(z) {
        return z.types.length === 0;
      }
      function ee(z) {
        return z.slice(0, z.length - 1);
      }
      function de(z) {
        return z[z.length - 1];
      }
      function xe(z, U, j) {
        return Array.prototype.slice.call(z, U, j);
      }
      function ce(z, U) {
        return z.indexOf(U) !== -1;
      }
      function he(z, U) {
        for (var j = 0; j < z.length; j++) if (ce(U, z[j])) return !0;
        return !1;
      }
      function k(z, U) {
        for (var j = 0; j < z.length; j++) if (U(z[j])) return z[j];
      }
      function Q(z) {
        for (var U = {}, j = 0; j < z.length; j++) U[z[j]] = !0;
        return Object.keys(U);
      }
      function V(z, U) {
        return Array.prototype.concat.apply([], z.map(U));
      }
      function q(z) {
        for (var U = "", j = 0; j < z.length; j++) {
          var H = z[j];
          if (
            (typeof H.signatures == "object" ||
              typeof H.signature == "string") &&
            H.name !== ""
          ) {
            if (U === "") U = H.name;
            else if (U !== H.name) {
              var ae = new Error(
                "Function names do not match (expected: " +
                  U +
                  ", actual: " +
                  H.name +
                  ")"
              );
              throw ((ae.data = { actual: H.name, expected: U }), ae);
            }
          }
        }
        return U;
      }
      function X(z) {
        var U,
          j = {};
        function H(fe, pe) {
          if (j.hasOwnProperty(fe) && pe !== j[fe])
            throw (
              ((U = new Error('Signature "' + fe + '" is defined twice')),
              (U.data = { signature: fe }),
              U)
            );
        }
        for (var ae = 0; ae < z.length; ae++) {
          var ue = z[ae];
          if (typeof ue.signatures == "object")
            for (var ve in ue.signatures)
              ue.signatures.hasOwnProperty(ve) &&
                (H(ve, ue.signatures[ve]), (j[ve] = ue.signatures[ve]));
          else if (typeof ue.signature == "string")
            H(ue.signature, ue), (j[ue.signature] = ue);
          else
            throw (
              ((U = new TypeError(
                "Function is no typed-function (index: " + ae + ")"
              )),
              (U.data = { index: ae }),
              U)
            );
        }
        return j;
      }
      return (
        (u = G("typed", {
          "string, Object": G,
          Object: function (z) {
            var U = [];
            for (var j in z) z.hasOwnProperty(j) && U.push(z[j]);
            var H = q(U);
            return G(H, z);
          },
          "...Function": function (z) {
            return G(q(z), X(z));
          },
          "string, ...Function": function (z, U) {
            return G(z, X(U));
          },
        })),
        (u.create = a),
        (u.types = s),
        (u.conversions = p),
        (u.ignore = l),
        (u.onMismatch = Y),
        (u.throwMismatchError = Y),
        (u.createError = C),
        (u.convert = d),
        (u.find = v),
        (u.addType = function (z, U) {
          if (!z || typeof z.name != "string" || typeof z.test != "function")
            throw new TypeError(
              "Object with properties {name: string, test: function} expected"
            );
          if (U !== !1) {
            for (var j = 0; j < u.types.length; j++)
              if (u.types[j].name === "Object") {
                u.types.splice(j, 0, z);
                return;
              }
          }
          u.types.push(z);
        }),
        (u.addConversion = function (z) {
          if (
            !z ||
            typeof z.from != "string" ||
            typeof z.to != "string" ||
            typeof z.convert != "function"
          )
            throw new TypeError(
              "Object with properties {from: string, to: string, convert: function} expected"
            );
          u.conversions.push(z);
        }),
        u
      );
    }
    return a();
  });
})(Xy);
var yp = Xy.exports;
function Ne(e) {
  return typeof e == "boolean" ? !0 : isFinite(e) ? e === Math.round(e) : !1;
}
var pn =
    Math.sign ||
    function (e) {
      return e > 0 ? 1 : e < 0 ? -1 : 0;
    },
  Lb =
    Math.log2 ||
    function (r) {
      return Math.log(r) / Math.LN2;
    },
  kb =
    Math.log10 ||
    function (r) {
      return Math.log(r) / Math.LN10;
    },
  Ub =
    Math.log1p ||
    function (e) {
      return Math.log(e + 1);
    },
  qb =
    Math.cbrt ||
    function (r) {
      if (r === 0) return r;
      var t = r < 0,
        n;
      return (
        t && (r = -r),
        isFinite(r)
          ? ((n = Math.exp(Math.log(r) / 3)), (n = (r / (n * n) + 2 * n) / 3))
          : (n = r),
        t ? -n : n
      );
    },
  Hb =
    Math.expm1 ||
    function (r) {
      return r >= 2e-4 || r <= -2e-4
        ? Math.exp(r) - 1
        : r + (r * r) / 2 + (r * r * r) / 6;
    };
function Cu(e, r, t) {
  var n = { 2: "0b", 8: "0o", 16: "0x" },
    i = n[r],
    a = "";
  if (t) {
    if (t < 1) throw new Error("size must be in greater than 0");
    if (!Ne(t)) throw new Error("size must be an integer");
    if (e > 2 ** (t - 1) - 1 || e < -(2 ** (t - 1)))
      throw new Error(
        "Value must be in range [-2^".concat(t - 1, ", 2^").concat(t - 1, "-1]")
      );
    if (!Ne(e)) throw new Error("Value must be an integer");
    e < 0 && (e = e + 2 ** t), (a = "i".concat(t));
  }
  var s = "";
  return (
    e < 0 && ((e = -e), (s = "-")),
    "".concat(s).concat(i).concat(e.toString(r)).concat(a)
  );
}
function Hn(e, r) {
  if (typeof r == "function") return r(e);
  if (e === 1 / 0) return "Infinity";
  if (e === -1 / 0) return "-Infinity";
  if (isNaN(e)) return "NaN";
  var t = "auto",
    n,
    i;
  if (
    r &&
    (r.notation && (t = r.notation),
    $e(r) ? (n = r) : $e(r.precision) && (n = r.precision),
    r.wordSize && ((i = r.wordSize), typeof i != "number"))
  )
    throw new Error('Option "wordSize" must be a number');
  switch (t) {
    case "fixed":
      return jy(e, n);
    case "exponential":
      return Jy(e, n);
    case "engineering":
      return Vb(e, n);
    case "bin":
      return Cu(e, 2, i);
    case "oct":
      return Cu(e, 8, i);
    case "hex":
      return Cu(e, 16, i);
    case "auto":
      return Gb(e, n, r && r).replace(/((\.\d*?)(0+))($|e)/, function () {
        var a = arguments[2],
          s = arguments[4];
        return a !== "." ? a + s : s;
      });
    default:
      throw new Error(
        'Unknown notation "' +
          t +
          '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.'
      );
  }
}
function Ls(e) {
  var r = String(e)
    .toLowerCase()
    .match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);
  if (!r) throw new SyntaxError("Invalid number " + e);
  var t = r[1],
    n = r[2],
    i = parseFloat(r[4] || "0"),
    a = n.indexOf(".");
  i += a !== -1 ? a - 1 : n.length - 1;
  var s = n
    .replace(".", "")
    .replace(/^0*/, function (f) {
      return (i -= f.length), "";
    })
    .replace(/0*$/, "")
    .split("")
    .map(function (f) {
      return parseInt(f);
    });
  return (
    s.length === 0 && (s.push(0), i++),
    { sign: t, coefficients: s, exponent: i }
  );
}
function Vb(e, r) {
  if (isNaN(e) || !isFinite(e)) return String(e);
  var t = Ls(e),
    n = ks(t, r),
    i = n.exponent,
    a = n.coefficients,
    s = i % 3 === 0 ? i : i < 0 ? i - 3 - (i % 3) : i - (i % 3);
  if ($e(r)) for (; r > a.length || i - s + 1 > a.length; ) a.push(0);
  else
    for (var f = Math.abs(i - s) - (a.length - 1), l = 0; l < f; l++) a.push(0);
  for (var p = Math.abs(i - s), u = 1; p > 0; ) u++, p--;
  var o = a.slice(u).join(""),
    c = ($e(r) && o.length) || o.match(/[1-9]/) ? "." + o : "",
    m = a.slice(0, u).join("") + c + "e" + (i >= 0 ? "+" : "") + s.toString();
  return n.sign + m;
}
function jy(e, r) {
  if (isNaN(e) || !isFinite(e)) return String(e);
  var t = Ls(e),
    n = typeof r == "number" ? ks(t, t.exponent + 1 + r) : t,
    i = n.coefficients,
    a = n.exponent + 1,
    s = a + (r || 0);
  return (
    i.length < s && (i = i.concat(Ti(s - i.length))),
    a < 0 && ((i = Ti(-a + 1).concat(i)), (a = 1)),
    a < i.length && i.splice(a, 0, a === 0 ? "0." : "."),
    n.sign + i.join("")
  );
}
function Jy(e, r) {
  if (isNaN(e) || !isFinite(e)) return String(e);
  var t = Ls(e),
    n = r ? ks(t, r) : t,
    i = n.coefficients,
    a = n.exponent;
  i.length < r && (i = i.concat(Ti(r - i.length)));
  var s = i.shift();
  return (
    n.sign +
    s +
    (i.length > 0 ? "." + i.join("") : "") +
    "e" +
    (a >= 0 ? "+" : "") +
    a
  );
}
function Gb(e, r, t) {
  if (isNaN(e) || !isFinite(e)) return String(e);
  var n = t && t.lowerExp !== void 0 ? t.lowerExp : -3,
    i = t && t.upperExp !== void 0 ? t.upperExp : 5,
    a = Ls(e),
    s = r ? ks(a, r) : a;
  if (s.exponent < n || s.exponent >= i) return Jy(e, r);
  var f = s.coefficients,
    l = s.exponent;
  f.length < r && (f = f.concat(Ti(r - f.length))),
    (f = f.concat(Ti(l - f.length + 1 + (f.length < r ? r - f.length : 0)))),
    (f = Ti(-l).concat(f));
  var p = l > 0 ? l : 0;
  return p < f.length - 1 && f.splice(p + 1, 0, "."), s.sign + f.join("");
}
function ks(e, r) {
  for (
    var t = {
        sign: e.sign,
        coefficients: e.coefficients,
        exponent: e.exponent,
      },
      n = t.coefficients;
    r <= 0;

  )
    n.unshift(0), t.exponent++, r++;
  if (n.length > r) {
    var i = n.splice(r, n.length - r);
    if (i[0] >= 5) {
      var a = r - 1;
      for (n[a]++; n[a] === 10; )
        n.pop(), a === 0 && (n.unshift(0), t.exponent++, a++), a--, n[a]++;
    }
  }
  return t;
}
function Ti(e) {
  for (var r = [], t = 0; t < e; t++) r.push(0);
  return r;
}
function Wb(e) {
  return e
    .toExponential()
    .replace(/e.*$/, "")
    .replace(/^0\.?0*|\./, "").length;
}
var Zb = Number.EPSILON || 2220446049250313e-31;
function rt(e, r, t) {
  if (t == null) return e === r;
  if (e === r) return !0;
  if (isNaN(e) || isNaN(r)) return !1;
  if (isFinite(e) && isFinite(r)) {
    var n = Math.abs(e - r);
    return n < Zb ? !0 : n <= Math.max(Math.abs(e), Math.abs(r)) * t;
  }
  return !1;
}
var Qb =
    Math.acosh ||
    function (e) {
      return Math.log(Math.sqrt(e * e - 1) + e);
    },
  Yb =
    Math.asinh ||
    function (e) {
      return Math.log(Math.sqrt(e * e + 1) + e);
    },
  Xb =
    Math.atanh ||
    function (e) {
      return Math.log((1 + e) / (1 - e)) / 2;
    },
  jb =
    Math.cosh ||
    function (e) {
      return (Math.exp(e) + Math.exp(-e)) / 2;
    },
  Jb =
    Math.sinh ||
    function (e) {
      return (Math.exp(e) - Math.exp(-e)) / 2;
    },
  Kb =
    Math.tanh ||
    function (e) {
      var r = Math.exp(2 * e);
      return (r - 1) / (r + 1);
    };
function eN(e, r) {
  var t = e > 0 ? !0 : e < 0 ? !1 : 1 / e === 1 / 0,
    n = r > 0 ? !0 : r < 0 ? !1 : 1 / r === 1 / 0;
  return t ^ n ? -e : e;
}
function Ou(e, r, t) {
  var n = e.constructor,
    i = new n(2),
    a = "";
  if (t) {
    if (t < 1) throw new Error("size must be in greater than 0");
    if (!Ne(t)) throw new Error("size must be an integer");
    if (e.greaterThan(i.pow(t - 1).sub(1)) || e.lessThan(i.pow(t - 1).mul(-1)))
      throw new Error(
        "Value must be in range [-2^".concat(t - 1, ", 2^").concat(t - 1, "-1]")
      );
    if (!e.isInteger()) throw new Error("Value must be an integer");
    e.lessThan(0) && (e = e.add(i.pow(t))), (a = "i".concat(t));
  }
  switch (r) {
    case 2:
      return "".concat(e.toBinary()).concat(a);
    case 8:
      return "".concat(e.toOctal()).concat(a);
    case 16:
      return "".concat(e.toHexadecimal()).concat(a);
    default:
      throw new Error("Base ".concat(r, " not supported "));
  }
}
function rN(e, r) {
  if (typeof r == "function") return r(e);
  if (!e.isFinite())
    return e.isNaN() ? "NaN" : e.gt(0) ? "Infinity" : "-Infinity";
  var t = "auto",
    n,
    i;
  if (
    r !== void 0 &&
    (r.notation && (t = r.notation),
    typeof r == "number" ? (n = r) : r.precision && (n = r.precision),
    r.wordSize && ((i = r.wordSize), typeof i != "number"))
  )
    throw new Error('Option "wordSize" must be a number');
  switch (t) {
    case "fixed":
      return nN(e, n);
    case "exponential":
      return xp(e, n);
    case "engineering":
      return tN(e, n);
    case "bin":
      return Ou(e, 2, i);
    case "oct":
      return Ou(e, 8, i);
    case "hex":
      return Ou(e, 16, i);
    case "auto": {
      var a = r && r.lowerExp !== void 0 ? r.lowerExp : -3,
        s = r && r.upperExp !== void 0 ? r.upperExp : 5;
      if (e.isZero()) return "0";
      var f,
        l = e.toSignificantDigits(n),
        p = l.e;
      return (
        p >= a && p < s ? (f = l.toFixed()) : (f = xp(e, n)),
        f.replace(/((\.\d*?)(0+))($|e)/, function () {
          var u = arguments[2],
            o = arguments[4];
          return u !== "." ? u + o : o;
        })
      );
    }
    default:
      throw new Error(
        'Unknown notation "' +
          t +
          '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.'
      );
  }
}
function tN(e, r) {
  var t = e.e,
    n = t % 3 === 0 ? t : t < 0 ? t - 3 - (t % 3) : t - (t % 3),
    i = e.mul(Math.pow(10, -n)),
    a = i.toPrecision(r);
  return (
    a.indexOf("e") !== -1 && (a = i.toString()),
    a + "e" + (t >= 0 ? "+" : "") + n.toString()
  );
}
function xp(e, r) {
  return r !== void 0 ? e.toExponential(r - 1) : e.toExponential();
}
function nN(e, r) {
  return e.toFixed(r);
}
function iN(e, r) {
  var t = e.length - r.length,
    n = e.length;
  return e.substring(t, n) === r;
}
function _e(e, r) {
  var t = aN(e, r);
  return r && typeof r == "object" && "truncate" in r && t.length > r.truncate
    ? t.substring(0, r.truncate - 3) + "..."
    : t;
}
function aN(e, r) {
  if (typeof e == "number") return Hn(e, r);
  if (Be(e)) return rN(e, r);
  if (oN(e))
    return !r || r.fraction !== "decimal"
      ? e.s * e.n + "/" + e.d
      : e.toString();
  if (Array.isArray(e)) return Ky(e, r);
  if ($r(e)) return '"' + e + '"';
  if (typeof e == "function") return e.syntax ? String(e.syntax) : "function";
  if (e && typeof e == "object") {
    if (typeof e.format == "function") return e.format(r);
    if (e && e.toString(r) !== {}.toString()) return e.toString(r);
    var t = Object.keys(e).map((n) => '"' + n + '": ' + _e(e[n], r));
    return "{" + t.join(", ") + "}";
  }
  return String(e);
}
function bo(e) {
  for (var r = String(e), t = "", n = 0; n < r.length; ) {
    var i = r.charAt(n);
    i === "\\"
      ? ((t += i),
        n++,
        (i = r.charAt(n)),
        (i === "" || '"\\/bfnrtu'.indexOf(i) === -1) && (t += "\\"),
        (t += i))
      : i === '"'
      ? (t += '\\"')
      : (t += i),
      n++;
  }
  return '"' + t + '"';
}
function ut(e) {
  var r = String(e);
  return (
    (r = r
      .replace(/&/g, "&amp;")
      .replace(/"/g, "&quot;")
      .replace(/'/g, "&#39;")
      .replace(/</g, "&lt;")
      .replace(/>/g, "&gt;")),
    r
  );
}
function Ky(e, r) {
  if (Array.isArray(e)) {
    for (var t = "[", n = e.length, i = 0; i < n; i++)
      i !== 0 && (t += ", "), (t += Ky(e[i], r));
    return (t += "]"), t;
  } else return _e(e, r);
}
function oN(e) {
  return (
    (e &&
      typeof e == "object" &&
      typeof e.s == "number" &&
      typeof e.n == "number" &&
      typeof e.d == "number") ||
    !1
  );
}
function ai(e, r) {
  if (!$r(e))
    throw new TypeError(
      "Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " +
        Ye(e) +
        ", index: 0)"
    );
  if (!$r(r))
    throw new TypeError(
      "Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " +
        Ye(r) +
        ", index: 1)"
    );
  return e === r ? 0 : e > r ? 1 : -1;
}
function De(e, r, t) {
  if (!(this instanceof De))
    throw new SyntaxError("Constructor must be called with the new operator");
  (this.actual = e),
    (this.expected = r),
    (this.relation = t),
    (this.message =
      "Dimension mismatch (" +
      (Array.isArray(e) ? "[" + e.join(", ") + "]" : e) +
      " " +
      (this.relation || "!=") +
      " " +
      (Array.isArray(r) ? "[" + r.join(", ") + "]" : r) +
      ")"),
    (this.stack = new Error().stack);
}
De.prototype = new RangeError();
De.prototype.constructor = RangeError;
De.prototype.name = "DimensionError";
De.prototype.isDimensionError = !0;
function vt(e, r, t) {
  if (!(this instanceof vt))
    throw new SyntaxError("Constructor must be called with the new operator");
  (this.index = e),
    arguments.length < 3
      ? ((this.min = 0), (this.max = r))
      : ((this.min = r), (this.max = t)),
    this.min !== void 0 && this.index < this.min
      ? (this.message =
          "Index out of range (" + this.index + " < " + this.min + ")")
      : this.max !== void 0 && this.index >= this.max
      ? (this.message =
          "Index out of range (" + this.index + " > " + (this.max - 1) + ")")
      : (this.message = "Index out of range (" + this.index + ")"),
    (this.stack = new Error().stack);
}
vt.prototype = new RangeError();
vt.prototype.constructor = RangeError;
vt.prototype.name = "IndexError";
vt.prototype.isIndexError = !0;
function Ie(e) {
  for (var r = []; Array.isArray(e); ) r.push(e.length), (e = e[0]);
  return r;
}
function e0(e, r, t) {
  var n,
    i = e.length;
  if (i !== r[t]) throw new De(i, r[t]);
  if (t < r.length - 1) {
    var a = t + 1;
    for (n = 0; n < i; n++) {
      var s = e[n];
      if (!Array.isArray(s)) throw new De(r.length - 1, r.length, "<");
      e0(e[n], r, a);
    }
  } else
    for (n = 0; n < i; n++)
      if (Array.isArray(e[n])) throw new De(r.length + 1, r.length, ">");
}
function wp(e, r) {
  var t = r.length === 0;
  if (t) {
    if (Array.isArray(e)) throw new De(e.length, 0);
  } else e0(e, r, 0);
}
function We(e, r) {
  if (!$e(e) || !Ne(e))
    throw new TypeError("Index must be an integer (value: " + e + ")");
  if (e < 0 || (typeof r == "number" && e >= r)) throw new vt(e, r);
}
function Li(e, r, t) {
  if (!Array.isArray(e) || !Array.isArray(r))
    throw new TypeError("Array expected");
  if (r.length === 0) throw new Error("Resizing to scalar is not supported");
  r.forEach(function (i) {
    if (!$e(i) || !Ne(i) || i < 0)
      throw new TypeError(
        "Invalid size, must contain positive integers (size: " + _e(r) + ")"
      );
  });
  var n = t !== void 0 ? t : 0;
  return Ol(e, r, 0, n), e;
}
function Ol(e, r, t, n) {
  var i,
    a,
    s = e.length,
    f = r[t],
    l = Math.min(s, f);
  if (((e.length = f), t < r.length - 1)) {
    var p = t + 1;
    for (i = 0; i < l; i++)
      (a = e[i]), Array.isArray(a) || ((a = [a]), (e[i] = a)), Ol(a, r, p, n);
    for (i = l; i < f; i++) (a = []), (e[i] = a), Ol(a, r, p, n);
  } else {
    for (i = 0; i < l; i++) for (; Array.isArray(e[i]); ) e[i] = e[i][0];
    for (i = l; i < f; i++) e[i] = n;
  }
}
function r0(e, r) {
  var t = Re(e),
    n = t.length;
  if (!Array.isArray(e) || !Array.isArray(r))
    throw new TypeError("Array expected");
  if (r.length === 0) throw new De(0, n, "!=");
  r = Lc(r, n);
  var i = t0(r);
  if (n !== i) throw new De(i, n, "!=");
  try {
    return sN(t, r);
  } catch (a) {
    throw a instanceof De ? new De(i, n, "!=") : a;
  }
}
function Lc(e, r) {
  var t = t0(e),
    n = e.slice(),
    i = -1,
    a = e.indexOf(i),
    s = e.indexOf(i, a + 1) >= 0;
  if (s) throw new Error("More than one wildcard in sizes");
  var f = a >= 0,
    l = r % t === 0;
  if (f)
    if (l) n[a] = -r / t;
    else
      throw new Error(
        "Could not replace wildcard, since " + r + " is no multiple of " + -t
      );
  return n;
}
function t0(e) {
  return e.reduce((r, t) => r * t, 1);
}
function sN(e, r) {
  for (var t = e, n, i = r.length - 1; i > 0; i--) {
    var a = r[i];
    n = [];
    for (var s = t.length / a, f = 0; f < s; f++)
      n.push(t.slice(f * a, (f + 1) * a));
    t = n;
  }
  return t;
}
function cs(e, r) {
  for (var t = r || Ie(e); Array.isArray(e) && e.length === 1; )
    (e = e[0]), t.shift();
  for (var n = t.length; t[n - 1] === 1; ) n--;
  return n < t.length && ((e = n0(e, n, 0)), (t.length = n)), e;
}
function n0(e, r, t) {
  var n, i;
  if (t < r) {
    var a = t + 1;
    for (n = 0, i = e.length; n < i; n++) e[n] = n0(e[n], r, a);
  } else for (; Array.isArray(e); ) e = e[0];
  return e;
}
function i0(e, r, t, n) {
  var i = n || Ie(e);
  if (t) for (var a = 0; a < t; a++) (e = [e]), i.unshift(1);
  for (e = a0(e, r, 0); i.length < r; ) i.push(1);
  return e;
}
function a0(e, r, t) {
  var n, i;
  if (Array.isArray(e)) {
    var a = t + 1;
    for (n = 0, i = e.length; n < i; n++) e[n] = a0(e[n], r, a);
  } else for (var s = t; s < r; s++) e = [e];
  return e;
}
function Re(e) {
  if (!Array.isArray(e)) return e;
  var r = [];
  return (
    e.forEach(function t(n) {
      Array.isArray(n) ? n.forEach(t) : r.push(n);
    }),
    r
  );
}
function Zt(e, r) {
  return Array.prototype.map.call(e, r);
}
function Us(e, r) {
  Array.prototype.forEach.call(e, r);
}
function o0(e, r) {
  if (Ie(e).length !== 1)
    throw new Error("Only one dimensional matrices supported");
  return Array.prototype.filter.call(e, r);
}
function fs(e, r) {
  if (Ie(e).length !== 1)
    throw new Error("Only one dimensional matrices supported");
  return Array.prototype.filter.call(e, (t) => r.test(t));
}
function bp(e, r) {
  return Array.prototype.join.call(e, r);
}
function ki(e) {
  if (!Array.isArray(e)) throw new TypeError("Array input expected");
  if (e.length === 0) return e;
  var r = [],
    t = 0;
  r[0] = { value: e[0], identifier: 0 };
  for (var n = 1; n < e.length; n++)
    e[n] === e[n - 1] ? t++ : (t = 0), r.push({ value: e[n], identifier: t });
  return r;
}
function ps(e) {
  if (!Array.isArray(e)) throw new TypeError("Array input expected");
  if (e.length === 0) return e;
  for (var r = [], t = 0; t < e.length; t++) r.push(e[t].value);
  return r;
}
function Ga(e, r) {
  for (var t, n = 0, i = 0; i < e.length; i++) {
    var a = e[i],
      s = Array.isArray(a);
    if ((i === 0 && s && (n = a.length), s && a.length !== n)) return;
    var f = s ? Ga(a, r) : r(a);
    if (t === void 0) t = f;
    else if (t !== f) return "mixed";
  }
  return t;
}
function Np(e, r) {
  return e.indexOf(r) !== -1;
}
function F(e, r, t, n) {
  function i(a) {
    var s = Rb(a, r.map(s0));
    return uN(e, r, a), t(s);
  }
  return (
    (i.isFactory = !0),
    (i.fn = e),
    (i.dependencies = r.slice().sort()),
    n && (i.meta = n),
    i
  );
}
function Aa(e) {
  return (
    typeof e == "function" &&
    typeof e.fn == "string" &&
    Array.isArray(e.dependencies)
  );
}
function uN(e, r, t) {
  var n = r.filter((a) => !lN(a)).every((a) => t[a] !== void 0);
  if (!n) {
    var i = r.filter((a) => t[a] === void 0);
    throw new Error(
      'Cannot create function "'.concat(e, '", ') +
        "some dependencies are missing: ".concat(
          i.map((a) => '"'.concat(a, '"')).join(", "),
          "."
        )
    );
  }
}
function lN(e) {
  return e && e[0] === "?";
}
function s0(e) {
  return e && e[0] === "?" ? e.slice(1) : e;
}
function mt(e, r) {
  if (u0(e) && kc(e, r)) return e[r];
  throw typeof e[r] == "function" && Uc(e, r)
    ? new Error('Cannot access method "' + r + '" as a property')
    : new Error('No access to property "' + r + '"');
}
function Ui(e, r, t) {
  if (u0(e) && kc(e, r)) return (e[r] = t), t;
  throw new Error('No access to property "' + r + '"');
}
function cN(e, r) {
  return r in e;
}
function kc(e, r) {
  return !e || typeof e != "object"
    ? !1
    : ge(pN, r)
    ? !0
    : !(r in Object.prototype || r in Function.prototype);
}
function fN(e, r) {
  if (!Uc(e, r)) throw new Error('No access to method "' + r + '"');
}
function Uc(e, r) {
  return e == null ||
    typeof e[r] != "function" ||
    (ge(e, r) && Object.getPrototypeOf && r in Object.getPrototypeOf(e))
    ? !1
    : ge(mN, r)
    ? !0
    : !(r in Object.prototype || r in Function.prototype);
}
function u0(e) {
  return typeof e == "object" && e && e.constructor === Object;
}
var pN = { length: !0, name: !0 },
  mN = { toString: !0, valueOf: !0, toLocaleString: !0 };
class qc {
  constructor(r) {
    this.wrappedObject = r;
  }
  keys() {
    return Object.keys(this.wrappedObject);
  }
  get(r) {
    return mt(this.wrappedObject, r);
  }
  set(r, t) {
    return Ui(this.wrappedObject, r, t), this;
  }
  has(r) {
    return cN(this.wrappedObject, r);
  }
}
function Ht() {
  return new Map();
}
function Hc(e) {
  if (!e) return Ht();
  if (qs(e)) return e;
  if (Fs(e)) return new qc(e);
  throw new Error("createMap can create maps from objects or Maps");
}
function vN(e) {
  if (e instanceof qc) return e.wrappedObject;
  var r = {};
  for (var t of e.keys()) {
    var n = e.get(t);
    Ui(r, t, n);
  }
  return r;
}
function qs(e) {
  return e
    ? e instanceof Map ||
        e instanceof qc ||
        (typeof e.set == "function" &&
          typeof e.get == "function" &&
          typeof e.keys == "function" &&
          typeof e.has == "function")
    : !1;
}
function Mp(e) {
  for (
    var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), n = 1;
    n < r;
    n++
  )
    t[n - 1] = arguments[n];
  for (var i of t)
    if (!!i) {
      if (qs(i)) for (var a of i.keys()) e.set(a, i.get(a));
      else if (Fs(i)) for (var s of Object.keys(i)) e.set(s, i[s]);
    }
  return e;
}
var l0 = function () {
    return (l0 = yp.create), yp;
  },
  dN = ["?BigNumber", "?Complex", "?DenseMatrix", "?Fraction"],
  hN = F("typed", dN, function (r) {
    var { BigNumber: t, Complex: n, DenseMatrix: i, Fraction: a } = r,
      s = l0();
    return (
      (s.types = [
        { name: "number", test: $e },
        { name: "Complex", test: Nt },
        { name: "BigNumber", test: Be },
        { name: "Fraction", test: Bn },
        { name: "Unit", test: jn },
        { name: "string", test: $r },
        { name: "Chain", test: Ps },
        { name: "Array", test: He },
        { name: "Matrix", test: Ae },
        { name: "DenseMatrix", test: Ha },
        { name: "SparseMatrix", test: fn },
        { name: "Range", test: Ka },
        { name: "Index", test: Zi },
        { name: "boolean", test: Py },
        { name: "ResultSet", test: Fc },
        { name: "Help", test: Rs },
        { name: "function", test: Ly },
        { name: "Date", test: ky },
        { name: "RegExp", test: Uy },
        { name: "null", test: qy },
        { name: "undefined", test: Hy },
        { name: "AccessorNode", test: Sn },
        { name: "ArrayNode", test: Xr },
        { name: "AssignmentNode", test: Vy },
        { name: "BlockNode", test: Gy },
        { name: "ConditionalNode", test: Wy },
        { name: "ConstantNode", test: Ve },
        { name: "FunctionNode", test: An },
        { name: "FunctionAssignmentNode", test: Qi },
        { name: "IndexNode", test: Kn },
        { name: "Node", test: Le },
        { name: "ObjectNode", test: eo },
        { name: "OperatorNode", test: Ir },
        { name: "ParenthesisNode", test: Yi },
        { name: "RangeNode", test: Zy },
        { name: "SymbolNode", test: gr },
        { name: "Map", test: qs },
        { name: "Object", test: Fs },
      ]),
      (s.conversions = [
        {
          from: "number",
          to: "BigNumber",
          convert: function (l) {
            if ((t || Tu(l), Wb(l) > 15))
              throw new TypeError(
                "Cannot implicitly convert a number with >15 significant digits to BigNumber (value: " +
                  l +
                  "). Use function bignumber(x) to convert to BigNumber."
              );
            return new t(l);
          },
        },
        {
          from: "number",
          to: "Complex",
          convert: function (l) {
            return n || No(l), new n(l, 0);
          },
        },
        {
          from: "number",
          to: "string",
          convert: function (l) {
            return l + "";
          },
        },
        {
          from: "BigNumber",
          to: "Complex",
          convert: function (l) {
            return n || No(l), new n(l.toNumber(), 0);
          },
        },
        {
          from: "Fraction",
          to: "BigNumber",
          convert: function (l) {
            throw new TypeError(
              "Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction."
            );
          },
        },
        {
          from: "Fraction",
          to: "Complex",
          convert: function (l) {
            return n || No(l), new n(l.valueOf(), 0);
          },
        },
        {
          from: "number",
          to: "Fraction",
          convert: function (l) {
            a || Du(l);
            var p = new a(l);
            if (p.valueOf() !== l)
              throw new TypeError(
                "Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: " +
                  l +
                  "). Use function fraction(x) to convert to Fraction."
              );
            return p;
          },
        },
        {
          from: "string",
          to: "number",
          convert: function (l) {
            var p = Number(l);
            if (isNaN(p))
              throw new Error('Cannot convert "' + l + '" to a number');
            return p;
          },
        },
        {
          from: "string",
          to: "BigNumber",
          convert: function (l) {
            t || Tu(l);
            try {
              return new t(l);
            } catch {
              throw new Error('Cannot convert "' + l + '" to BigNumber');
            }
          },
        },
        {
          from: "string",
          to: "Fraction",
          convert: function (l) {
            a || Du(l);
            try {
              return new a(l);
            } catch {
              throw new Error('Cannot convert "' + l + '" to Fraction');
            }
          },
        },
        {
          from: "string",
          to: "Complex",
          convert: function (l) {
            n || No(l);
            try {
              return new n(l);
            } catch {
              throw new Error('Cannot convert "' + l + '" to Complex');
            }
          },
        },
        {
          from: "boolean",
          to: "number",
          convert: function (l) {
            return +l;
          },
        },
        {
          from: "boolean",
          to: "BigNumber",
          convert: function (l) {
            return t || Tu(l), new t(+l);
          },
        },
        {
          from: "boolean",
          to: "Fraction",
          convert: function (l) {
            return a || Du(l), new a(+l);
          },
        },
        {
          from: "boolean",
          to: "string",
          convert: function (l) {
            return String(l);
          },
        },
        {
          from: "Array",
          to: "Matrix",
          convert: function (l) {
            return i || gN(), new i(l);
          },
        },
        {
          from: "Matrix",
          to: "Array",
          convert: function (l) {
            return l.valueOf();
          },
        },
      ]),
      s
    );
  });
function Tu(e) {
  throw new Error(
    "Cannot convert value ".concat(
      e,
      " into a BigNumber: no class 'BigNumber' provided"
    )
  );
}
function No(e) {
  throw new Error(
    "Cannot convert value ".concat(
      e,
      " into a Complex number: no class 'Complex' provided"
    )
  );
}
function gN() {
  throw new Error(
    "Cannot convert array into a Matrix: no class 'DenseMatrix' provided"
  );
}
function Du(e) {
  throw new Error(
    "Cannot convert value ".concat(
      e,
      " into a Fraction, no class 'Fraction' provided."
    )
  );
}
var yN = "ResultSet",
  xN = [],
  wN = F(
    yN,
    xN,
    () => {
      function e(r) {
        if (!(this instanceof e))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        this.entries = r || [];
      }
      return (
        (e.prototype.type = "ResultSet"),
        (e.prototype.isResultSet = !0),
        (e.prototype.valueOf = function () {
          return this.entries;
        }),
        (e.prototype.toString = function () {
          return "[" + this.entries.join(", ") + "]";
        }),
        (e.prototype.toJSON = function () {
          return { mathjs: "ResultSet", entries: this.entries };
        }),
        (e.fromJSON = function (r) {
          return new e(r.entries);
        }),
        e
      );
    },
    { isClass: !0 }
  ),
  Ni = 9e15,
  In = 1e9,
  Tl = "0123456789abcdef",
  ms =
    "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",
  vs =
    "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",
  Dl = {
    precision: 20,
    rounding: 4,
    modulo: 1,
    toExpNeg: -7,
    toExpPos: 21,
    minE: -Ni,
    maxE: Ni,
    crypto: !1,
  },
  c0,
  Vt,
  Ce = !0,
  Hs = "[DecimalError] ",
  En = Hs + "Invalid argument: ",
  f0 = Hs + "Precision limit exceeded",
  p0 = Hs + "crypto unavailable",
  m0 = "[object Decimal]",
  Dr = Math.floor,
  vr = Math.pow,
  bN = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,
  NN = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,
  MN = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,
  v0 = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
  Mt = 1e7,
  Ee = 7,
  SN = 9007199254740991,
  AN = ms.length - 1,
  _l = vs.length - 1,
  se = { toStringTag: m0 };
se.absoluteValue = se.abs = function () {
  var e = new this.constructor(this);
  return e.s < 0 && (e.s = 1), Se(e);
};
se.ceil = function () {
  return Se(new this.constructor(this), this.e + 1, 2);
};
se.clampedTo = se.clamp = function (e, r) {
  var t,
    n = this,
    i = n.constructor;
  if (((e = new i(e)), (r = new i(r)), !e.s || !r.s)) return new i(NaN);
  if (e.gt(r)) throw Error(En + r);
  return (t = n.cmp(e)), t < 0 ? e : n.cmp(r) > 0 ? r : new i(n);
};
se.comparedTo = se.cmp = function (e) {
  var r,
    t,
    n,
    i,
    a = this,
    s = a.d,
    f = (e = new a.constructor(e)).d,
    l = a.s,
    p = e.s;
  if (!s || !f)
    return !l || !p ? NaN : l !== p ? l : s === f ? 0 : !s ^ (l < 0) ? 1 : -1;
  if (!s[0] || !f[0]) return s[0] ? l : f[0] ? -p : 0;
  if (l !== p) return l;
  if (a.e !== e.e) return (a.e > e.e) ^ (l < 0) ? 1 : -1;
  for (n = s.length, i = f.length, r = 0, t = n < i ? n : i; r < t; ++r)
    if (s[r] !== f[r]) return (s[r] > f[r]) ^ (l < 0) ? 1 : -1;
  return n === i ? 0 : (n > i) ^ (l < 0) ? 1 : -1;
};
se.cosine = se.cos = function () {
  var e,
    r,
    t = this,
    n = t.constructor;
  return t.d
    ? t.d[0]
      ? ((e = n.precision),
        (r = n.rounding),
        (n.precision = e + Math.max(t.e, t.sd()) + Ee),
        (n.rounding = 1),
        (t = EN(n, x0(n, t))),
        (n.precision = e),
        (n.rounding = r),
        Se(Vt == 2 || Vt == 3 ? t.neg() : t, e, r, !0))
      : new n(1)
    : new n(NaN);
};
se.cubeRoot = se.cbrt = function () {
  var e,
    r,
    t,
    n,
    i,
    a,
    s,
    f,
    l,
    p,
    u = this,
    o = u.constructor;
  if (!u.isFinite() || u.isZero()) return new o(u);
  for (
    Ce = !1,
      a = u.s * vr(u.s * u, 1 / 3),
      !a || Math.abs(a) == 1 / 0
        ? ((t = br(u.d)),
          (e = u.e),
          (a = (e - t.length + 1) % 3) && (t += a == 1 || a == -2 ? "0" : "00"),
          (a = vr(t, 1 / 3)),
          (e = Dr((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2))),
          a == 1 / 0
            ? (t = "5e" + e)
            : ((t = a.toExponential()),
              (t = t.slice(0, t.indexOf("e") + 1) + e)),
          (n = new o(t)),
          (n.s = u.s))
        : (n = new o(a.toString())),
      s = (e = o.precision) + 3;
    ;

  )
    if (
      ((f = n),
      (l = f.times(f).times(f)),
      (p = l.plus(u)),
      (n = je(p.plus(u).times(f), p.plus(l), s + 2, 1)),
      br(f.d).slice(0, s) === (t = br(n.d)).slice(0, s))
    )
      if (((t = t.slice(s - 3, s + 1)), t == "9999" || (!i && t == "4999"))) {
        if (!i && (Se(f, e + 1, 0), f.times(f).times(f).eq(u))) {
          n = f;
          break;
        }
        (s += 4), (i = 1);
      } else {
        (!+t || (!+t.slice(1) && t.charAt(0) == "5")) &&
          (Se(n, e + 1, 1), (r = !n.times(n).times(n).eq(u)));
        break;
      }
  return (Ce = !0), Se(n, e, o.rounding, r);
};
se.decimalPlaces = se.dp = function () {
  var e,
    r = this.d,
    t = NaN;
  if (r) {
    if (((e = r.length - 1), (t = (e - Dr(this.e / Ee)) * Ee), (e = r[e]), e))
      for (; e % 10 == 0; e /= 10) t--;
    t < 0 && (t = 0);
  }
  return t;
};
se.dividedBy = se.div = function (e) {
  return je(this, new this.constructor(e));
};
se.dividedToIntegerBy = se.divToInt = function (e) {
  var r = this,
    t = r.constructor;
  return Se(je(r, new t(e), 0, 1, 1), t.precision, t.rounding);
};
se.equals = se.eq = function (e) {
  return this.cmp(e) === 0;
};
se.floor = function () {
  return Se(new this.constructor(this), this.e + 1, 3);
};
se.greaterThan = se.gt = function (e) {
  return this.cmp(e) > 0;
};
se.greaterThanOrEqualTo = se.gte = function (e) {
  var r = this.cmp(e);
  return r == 1 || r === 0;
};
se.hyperbolicCosine = se.cosh = function () {
  var e,
    r,
    t,
    n,
    i,
    a = this,
    s = a.constructor,
    f = new s(1);
  if (!a.isFinite()) return new s(a.s ? 1 / 0 : NaN);
  if (a.isZero()) return f;
  (t = s.precision),
    (n = s.rounding),
    (s.precision = t + Math.max(a.e, a.sd()) + 4),
    (s.rounding = 1),
    (i = a.d.length),
    i < 32
      ? ((e = Math.ceil(i / 3)), (r = (1 / Gs(4, e)).toString()))
      : ((e = 16), (r = "2.3283064365386962890625e-10")),
    (a = qi(s, 1, a.times(r), new s(1), !0));
  for (var l, p = e, u = new s(8); p--; )
    (l = a.times(a)), (a = f.minus(l.times(u.minus(l.times(u)))));
  return Se(a, (s.precision = t), (s.rounding = n), !0);
};
se.hyperbolicSine = se.sinh = function () {
  var e,
    r,
    t,
    n,
    i = this,
    a = i.constructor;
  if (!i.isFinite() || i.isZero()) return new a(i);
  if (
    ((r = a.precision),
    (t = a.rounding),
    (a.precision = r + Math.max(i.e, i.sd()) + 4),
    (a.rounding = 1),
    (n = i.d.length),
    n < 3)
  )
    i = qi(a, 2, i, i, !0);
  else {
    (e = 1.4 * Math.sqrt(n)),
      (e = e > 16 ? 16 : e | 0),
      (i = i.times(1 / Gs(5, e))),
      (i = qi(a, 2, i, i, !0));
    for (var s, f = new a(5), l = new a(16), p = new a(20); e--; )
      (s = i.times(i)), (i = i.times(f.plus(s.times(l.times(s).plus(p)))));
  }
  return (a.precision = r), (a.rounding = t), Se(i, r, t, !0);
};
se.hyperbolicTangent = se.tanh = function () {
  var e,
    r,
    t = this,
    n = t.constructor;
  return t.isFinite()
    ? t.isZero()
      ? new n(t)
      : ((e = n.precision),
        (r = n.rounding),
        (n.precision = e + 7),
        (n.rounding = 1),
        je(t.sinh(), t.cosh(), (n.precision = e), (n.rounding = r)))
    : new n(t.s);
};
se.inverseCosine = se.acos = function () {
  var e,
    r = this,
    t = r.constructor,
    n = r.abs().cmp(1),
    i = t.precision,
    a = t.rounding;
  return n !== -1
    ? n === 0
      ? r.isNeg()
        ? xt(t, i, a)
        : new t(0)
      : new t(NaN)
    : r.isZero()
    ? xt(t, i + 4, a).times(0.5)
    : ((t.precision = i + 6),
      (t.rounding = 1),
      (r = r.asin()),
      (e = xt(t, i + 4, a).times(0.5)),
      (t.precision = i),
      (t.rounding = a),
      e.minus(r));
};
se.inverseHyperbolicCosine = se.acosh = function () {
  var e,
    r,
    t = this,
    n = t.constructor;
  return t.lte(1)
    ? new n(t.eq(1) ? 0 : NaN)
    : t.isFinite()
    ? ((e = n.precision),
      (r = n.rounding),
      (n.precision = e + Math.max(Math.abs(t.e), t.sd()) + 4),
      (n.rounding = 1),
      (Ce = !1),
      (t = t.times(t).minus(1).sqrt().plus(t)),
      (Ce = !0),
      (n.precision = e),
      (n.rounding = r),
      t.ln())
    : new n(t);
};
se.inverseHyperbolicSine = se.asinh = function () {
  var e,
    r,
    t = this,
    n = t.constructor;
  return !t.isFinite() || t.isZero()
    ? new n(t)
    : ((e = n.precision),
      (r = n.rounding),
      (n.precision = e + 2 * Math.max(Math.abs(t.e), t.sd()) + 6),
      (n.rounding = 1),
      (Ce = !1),
      (t = t.times(t).plus(1).sqrt().plus(t)),
      (Ce = !0),
      (n.precision = e),
      (n.rounding = r),
      t.ln());
};
se.inverseHyperbolicTangent = se.atanh = function () {
  var e,
    r,
    t,
    n,
    i = this,
    a = i.constructor;
  return i.isFinite()
    ? i.e >= 0
      ? new a(i.abs().eq(1) ? i.s / 0 : i.isZero() ? i : NaN)
      : ((e = a.precision),
        (r = a.rounding),
        (n = i.sd()),
        Math.max(n, e) < 2 * -i.e - 1
          ? Se(new a(i), e, r, !0)
          : ((a.precision = t = n - i.e),
            (i = je(i.plus(1), new a(1).minus(i), t + e, 1)),
            (a.precision = e + 4),
            (a.rounding = 1),
            (i = i.ln()),
            (a.precision = e),
            (a.rounding = r),
            i.times(0.5)))
    : new a(NaN);
};
se.inverseSine = se.asin = function () {
  var e,
    r,
    t,
    n,
    i = this,
    a = i.constructor;
  return i.isZero()
    ? new a(i)
    : ((r = i.abs().cmp(1)),
      (t = a.precision),
      (n = a.rounding),
      r !== -1
        ? r === 0
          ? ((e = xt(a, t + 4, n).times(0.5)), (e.s = i.s), e)
          : new a(NaN)
        : ((a.precision = t + 6),
          (a.rounding = 1),
          (i = i.div(new a(1).minus(i.times(i)).sqrt().plus(1)).atan()),
          (a.precision = t),
          (a.rounding = n),
          i.times(2)));
};
se.inverseTangent = se.atan = function () {
  var e,
    r,
    t,
    n,
    i,
    a,
    s,
    f,
    l,
    p = this,
    u = p.constructor,
    o = u.precision,
    c = u.rounding;
  if (p.isFinite()) {
    if (p.isZero()) return new u(p);
    if (p.abs().eq(1) && o + 4 <= _l)
      return (s = xt(u, o + 4, c).times(0.25)), (s.s = p.s), s;
  } else {
    if (!p.s) return new u(NaN);
    if (o + 4 <= _l) return (s = xt(u, o + 4, c).times(0.5)), (s.s = p.s), s;
  }
  for (
    u.precision = f = o + 10,
      u.rounding = 1,
      t = Math.min(28, (f / Ee + 2) | 0),
      e = t;
    e;
    --e
  )
    p = p.div(p.times(p).plus(1).sqrt().plus(1));
  for (
    Ce = !1, r = Math.ceil(f / Ee), n = 1, l = p.times(p), s = new u(p), i = p;
    e !== -1;

  )
    if (
      ((i = i.times(l)),
      (a = s.minus(i.div((n += 2)))),
      (i = i.times(l)),
      (s = a.plus(i.div((n += 2)))),
      s.d[r] !== void 0)
    )
      for (e = r; s.d[e] === a.d[e] && e--; );
  return (
    t && (s = s.times(2 << (t - 1))),
    (Ce = !0),
    Se(s, (u.precision = o), (u.rounding = c), !0)
  );
};
se.isFinite = function () {
  return !!this.d;
};
se.isInteger = se.isInt = function () {
  return !!this.d && Dr(this.e / Ee) > this.d.length - 2;
};
se.isNaN = function () {
  return !this.s;
};
se.isNegative = se.isNeg = function () {
  return this.s < 0;
};
se.isPositive = se.isPos = function () {
  return this.s > 0;
};
se.isZero = function () {
  return !!this.d && this.d[0] === 0;
};
se.lessThan = se.lt = function (e) {
  return this.cmp(e) < 0;
};
se.lessThanOrEqualTo = se.lte = function (e) {
  return this.cmp(e) < 1;
};
se.logarithm = se.log = function (e) {
  var r,
    t,
    n,
    i,
    a,
    s,
    f,
    l,
    p = this,
    u = p.constructor,
    o = u.precision,
    c = u.rounding,
    m = 5;
  if (e == null) (e = new u(10)), (r = !0);
  else {
    if (((e = new u(e)), (t = e.d), e.s < 0 || !t || !t[0] || e.eq(1)))
      return new u(NaN);
    r = e.eq(10);
  }
  if (((t = p.d), p.s < 0 || !t || !t[0] || p.eq(1)))
    return new u(t && !t[0] ? -1 / 0 : p.s != 1 ? NaN : t ? 0 : 1 / 0);
  if (r)
    if (t.length > 1) a = !0;
    else {
      for (i = t[0]; i % 10 === 0; ) i /= 10;
      a = i !== 1;
    }
  if (
    ((Ce = !1),
    (f = o + m),
    (s = mn(p, f)),
    (n = r ? ds(u, f + 10) : mn(e, f)),
    (l = je(s, n, f, 1)),
    Wa(l.d, (i = o), c))
  )
    do
      if (
        ((f += 10),
        (s = mn(p, f)),
        (n = r ? ds(u, f + 10) : mn(e, f)),
        (l = je(s, n, f, 1)),
        !a)
      ) {
        +br(l.d).slice(i + 1, i + 15) + 1 == 1e14 && (l = Se(l, o + 1, 0));
        break;
      }
    while (Wa(l.d, (i += 10), c));
  return (Ce = !0), Se(l, o, c);
};
se.minus = se.sub = function (e) {
  var r,
    t,
    n,
    i,
    a,
    s,
    f,
    l,
    p,
    u,
    o,
    c,
    m = this,
    v = m.constructor;
  if (((e = new v(e)), !m.d || !e.d))
    return (
      !m.s || !e.s
        ? (e = new v(NaN))
        : m.d
        ? (e.s = -e.s)
        : (e = new v(e.d || m.s !== e.s ? m : NaN)),
      e
    );
  if (m.s != e.s) return (e.s = -e.s), m.plus(e);
  if (
    ((p = m.d), (c = e.d), (f = v.precision), (l = v.rounding), !p[0] || !c[0])
  ) {
    if (c[0]) e.s = -e.s;
    else if (p[0]) e = new v(m);
    else return new v(l === 3 ? -0 : 0);
    return Ce ? Se(e, f, l) : e;
  }
  if (
    ((t = Dr(e.e / Ee)), (u = Dr(m.e / Ee)), (p = p.slice()), (a = u - t), a)
  ) {
    for (
      o = a < 0,
        o
          ? ((r = p), (a = -a), (s = c.length))
          : ((r = c), (t = u), (s = p.length)),
        n = Math.max(Math.ceil(f / Ee), s) + 2,
        a > n && ((a = n), (r.length = 1)),
        r.reverse(),
        n = a;
      n--;

    )
      r.push(0);
    r.reverse();
  } else {
    for (n = p.length, s = c.length, o = n < s, o && (s = n), n = 0; n < s; n++)
      if (p[n] != c[n]) {
        o = p[n] < c[n];
        break;
      }
    a = 0;
  }
  for (
    o && ((r = p), (p = c), (c = r), (e.s = -e.s)),
      s = p.length,
      n = c.length - s;
    n > 0;
    --n
  )
    p[s++] = 0;
  for (n = c.length; n > a; ) {
    if (p[--n] < c[n]) {
      for (i = n; i && p[--i] === 0; ) p[i] = Mt - 1;
      --p[i], (p[n] += Mt);
    }
    p[n] -= c[n];
  }
  for (; p[--s] === 0; ) p.pop();
  for (; p[0] === 0; p.shift()) --t;
  return p[0]
    ? ((e.d = p), (e.e = Vs(p, t)), Ce ? Se(e, f, l) : e)
    : new v(l === 3 ? -0 : 0);
};
se.modulo = se.mod = function (e) {
  var r,
    t = this,
    n = t.constructor;
  return (
    (e = new n(e)),
    !t.d || !e.s || (e.d && !e.d[0])
      ? new n(NaN)
      : !e.d || (t.d && !t.d[0])
      ? Se(new n(t), n.precision, n.rounding)
      : ((Ce = !1),
        n.modulo == 9
          ? ((r = je(t, e.abs(), 0, 3, 1)), (r.s *= e.s))
          : (r = je(t, e, 0, n.modulo, 1)),
        (r = r.times(e)),
        (Ce = !0),
        t.minus(r))
  );
};
se.naturalExponential = se.exp = function () {
  return Bl(this);
};
se.naturalLogarithm = se.ln = function () {
  return mn(this);
};
se.negated = se.neg = function () {
  var e = new this.constructor(this);
  return (e.s = -e.s), Se(e);
};
se.plus = se.add = function (e) {
  var r,
    t,
    n,
    i,
    a,
    s,
    f,
    l,
    p,
    u,
    o = this,
    c = o.constructor;
  if (((e = new c(e)), !o.d || !e.d))
    return (
      !o.s || !e.s
        ? (e = new c(NaN))
        : o.d || (e = new c(e.d || o.s === e.s ? o : NaN)),
      e
    );
  if (o.s != e.s) return (e.s = -e.s), o.minus(e);
  if (
    ((p = o.d), (u = e.d), (f = c.precision), (l = c.rounding), !p[0] || !u[0])
  )
    return u[0] || (e = new c(o)), Ce ? Se(e, f, l) : e;
  if (
    ((a = Dr(o.e / Ee)), (n = Dr(e.e / Ee)), (p = p.slice()), (i = a - n), i)
  ) {
    for (
      i < 0
        ? ((t = p), (i = -i), (s = u.length))
        : ((t = u), (n = a), (s = p.length)),
        a = Math.ceil(f / Ee),
        s = a > s ? a + 1 : s + 1,
        i > s && ((i = s), (t.length = 1)),
        t.reverse();
      i--;

    )
      t.push(0);
    t.reverse();
  }
  for (
    s = p.length,
      i = u.length,
      s - i < 0 && ((i = s), (t = u), (u = p), (p = t)),
      r = 0;
    i;

  )
    (r = ((p[--i] = p[i] + u[i] + r) / Mt) | 0), (p[i] %= Mt);
  for (r && (p.unshift(r), ++n), s = p.length; p[--s] == 0; ) p.pop();
  return (e.d = p), (e.e = Vs(p, n)), Ce ? Se(e, f, l) : e;
};
se.precision = se.sd = function (e) {
  var r,
    t = this;
  if (e !== void 0 && e !== !!e && e !== 1 && e !== 0) throw Error(En + e);
  return (
    t.d ? ((r = d0(t.d)), e && t.e + 1 > r && (r = t.e + 1)) : (r = NaN), r
  );
};
se.round = function () {
  var e = this,
    r = e.constructor;
  return Se(new r(e), e.e + 1, r.rounding);
};
se.sine = se.sin = function () {
  var e,
    r,
    t = this,
    n = t.constructor;
  return t.isFinite()
    ? t.isZero()
      ? new n(t)
      : ((e = n.precision),
        (r = n.rounding),
        (n.precision = e + Math.max(t.e, t.sd()) + Ee),
        (n.rounding = 1),
        (t = ON(n, x0(n, t))),
        (n.precision = e),
        (n.rounding = r),
        Se(Vt > 2 ? t.neg() : t, e, r, !0))
    : new n(NaN);
};
se.squareRoot = se.sqrt = function () {
  var e,
    r,
    t,
    n,
    i,
    a,
    s = this,
    f = s.d,
    l = s.e,
    p = s.s,
    u = s.constructor;
  if (p !== 1 || !f || !f[0])
    return new u(!p || (p < 0 && (!f || f[0])) ? NaN : f ? s : 1 / 0);
  for (
    Ce = !1,
      p = Math.sqrt(+s),
      p == 0 || p == 1 / 0
        ? ((r = br(f)),
          (r.length + l) % 2 == 0 && (r += "0"),
          (p = Math.sqrt(r)),
          (l = Dr((l + 1) / 2) - (l < 0 || l % 2)),
          p == 1 / 0
            ? (r = "5e" + l)
            : ((r = p.toExponential()),
              (r = r.slice(0, r.indexOf("e") + 1) + l)),
          (n = new u(r)))
        : (n = new u(p.toString())),
      t = (l = u.precision) + 3;
    ;

  )
    if (
      ((a = n),
      (n = a.plus(je(s, a, t + 2, 1)).times(0.5)),
      br(a.d).slice(0, t) === (r = br(n.d)).slice(0, t))
    )
      if (((r = r.slice(t - 3, t + 1)), r == "9999" || (!i && r == "4999"))) {
        if (!i && (Se(a, l + 1, 0), a.times(a).eq(s))) {
          n = a;
          break;
        }
        (t += 4), (i = 1);
      } else {
        (!+r || (!+r.slice(1) && r.charAt(0) == "5")) &&
          (Se(n, l + 1, 1), (e = !n.times(n).eq(s)));
        break;
      }
  return (Ce = !0), Se(n, l, u.rounding, e);
};
se.tangent = se.tan = function () {
  var e,
    r,
    t = this,
    n = t.constructor;
  return t.isFinite()
    ? t.isZero()
      ? new n(t)
      : ((e = n.precision),
        (r = n.rounding),
        (n.precision = e + 10),
        (n.rounding = 1),
        (t = t.sin()),
        (t.s = 1),
        (t = je(t, new n(1).minus(t.times(t)).sqrt(), e + 10, 0)),
        (n.precision = e),
        (n.rounding = r),
        Se(Vt == 2 || Vt == 4 ? t.neg() : t, e, r, !0))
    : new n(NaN);
};
se.times = se.mul = function (e) {
  var r,
    t,
    n,
    i,
    a,
    s,
    f,
    l,
    p,
    u = this,
    o = u.constructor,
    c = u.d,
    m = (e = new o(e)).d;
  if (((e.s *= u.s), !c || !c[0] || !m || !m[0]))
    return new o(
      !e.s || (c && !c[0] && !m) || (m && !m[0] && !c)
        ? NaN
        : !c || !m
        ? e.s / 0
        : e.s * 0
    );
  for (
    t = Dr(u.e / Ee) + Dr(e.e / Ee),
      l = c.length,
      p = m.length,
      l < p && ((a = c), (c = m), (m = a), (s = l), (l = p), (p = s)),
      a = [],
      s = l + p,
      n = s;
    n--;

  )
    a.push(0);
  for (n = p; --n >= 0; ) {
    for (r = 0, i = l + n; i > n; )
      (f = a[i] + m[n] * c[i - n - 1] + r),
        (a[i--] = f % Mt | 0),
        (r = (f / Mt) | 0);
    a[i] = (a[i] + r) % Mt | 0;
  }
  for (; !a[--s]; ) a.pop();
  return (
    r ? ++t : a.shift(),
    (e.d = a),
    (e.e = Vs(a, t)),
    Ce ? Se(e, o.precision, o.rounding) : e
  );
};
se.toBinary = function (e, r) {
  return Vc(this, 2, e, r);
};
se.toDecimalPlaces = se.toDP = function (e, r) {
  var t = this,
    n = t.constructor;
  return (
    (t = new n(t)),
    e === void 0
      ? t
      : (Zr(e, 0, In),
        r === void 0 ? (r = n.rounding) : Zr(r, 0, 8),
        Se(t, e + t.e + 1, r))
  );
};
se.toExponential = function (e, r) {
  var t,
    n = this,
    i = n.constructor;
  return (
    e === void 0
      ? (t = $t(n, !0))
      : (Zr(e, 0, In),
        r === void 0 ? (r = i.rounding) : Zr(r, 0, 8),
        (n = Se(new i(n), e + 1, r)),
        (t = $t(n, !0, e + 1))),
    n.isNeg() && !n.isZero() ? "-" + t : t
  );
};
se.toFixed = function (e, r) {
  var t,
    n,
    i = this,
    a = i.constructor;
  return (
    e === void 0
      ? (t = $t(i))
      : (Zr(e, 0, In),
        r === void 0 ? (r = a.rounding) : Zr(r, 0, 8),
        (n = Se(new a(i), e + i.e + 1, r)),
        (t = $t(n, !1, e + n.e + 1))),
    i.isNeg() && !i.isZero() ? "-" + t : t
  );
};
se.toFraction = function (e) {
  var r,
    t,
    n,
    i,
    a,
    s,
    f,
    l,
    p,
    u,
    o,
    c,
    m = this,
    v = m.d,
    d = m.constructor;
  if (!v) return new d(m);
  if (
    ((p = t = new d(1)),
    (n = l = new d(0)),
    (r = new d(n)),
    (a = r.e = d0(v) - m.e - 1),
    (s = a % Ee),
    (r.d[0] = vr(10, s < 0 ? Ee + s : s)),
    e == null)
  )
    e = a > 0 ? r : p;
  else {
    if (((f = new d(e)), !f.isInt() || f.lt(p))) throw Error(En + f);
    e = f.gt(r) ? (a > 0 ? r : p) : f;
  }
  for (
    Ce = !1,
      f = new d(br(v)),
      u = d.precision,
      d.precision = a = v.length * Ee * 2;
    (o = je(f, r, 0, 1, 1)), (i = t.plus(o.times(n))), i.cmp(e) != 1;

  )
    (t = n),
      (n = i),
      (i = p),
      (p = l.plus(o.times(i))),
      (l = i),
      (i = r),
      (r = f.minus(o.times(i))),
      (f = i);
  return (
    (i = je(e.minus(t), n, 0, 1, 1)),
    (l = l.plus(i.times(p))),
    (t = t.plus(i.times(n))),
    (l.s = p.s = m.s),
    (c =
      je(p, n, a, 1).minus(m).abs().cmp(je(l, t, a, 1).minus(m).abs()) < 1
        ? [p, n]
        : [l, t]),
    (d.precision = u),
    (Ce = !0),
    c
  );
};
se.toHexadecimal = se.toHex = function (e, r) {
  return Vc(this, 16, e, r);
};
se.toNearest = function (e, r) {
  var t = this,
    n = t.constructor;
  if (((t = new n(t)), e == null)) {
    if (!t.d) return t;
    (e = new n(1)), (r = n.rounding);
  } else {
    if (((e = new n(e)), r === void 0 ? (r = n.rounding) : Zr(r, 0, 8), !t.d))
      return e.s ? t : e;
    if (!e.d) return e.s && (e.s = t.s), e;
  }
  return (
    e.d[0]
      ? ((Ce = !1), (t = je(t, e, 0, r, 1).times(e)), (Ce = !0), Se(t))
      : ((e.s = t.s), (t = e)),
    t
  );
};
se.toNumber = function () {
  return +this;
};
se.toOctal = function (e, r) {
  return Vc(this, 8, e, r);
};
se.toPower = se.pow = function (e) {
  var r,
    t,
    n,
    i,
    a,
    s,
    f = this,
    l = f.constructor,
    p = +(e = new l(e));
  if (!f.d || !e.d || !f.d[0] || !e.d[0]) return new l(vr(+f, p));
  if (((f = new l(f)), f.eq(1))) return f;
  if (((n = l.precision), (a = l.rounding), e.eq(1))) return Se(f, n, a);
  if (((r = Dr(e.e / Ee)), r >= e.d.length - 1 && (t = p < 0 ? -p : p) <= SN))
    return (i = h0(l, f, t, n)), e.s < 0 ? new l(1).div(i) : Se(i, n, a);
  if (((s = f.s), s < 0)) {
    if (r < e.d.length - 1) return new l(NaN);
    if (
      ((e.d[r] & 1) == 0 && (s = 1), f.e == 0 && f.d[0] == 1 && f.d.length == 1)
    )
      return (f.s = s), f;
  }
  return (
    (t = vr(+f, p)),
    (r =
      t == 0 || !isFinite(t)
        ? Dr(p * (Math.log("0." + br(f.d)) / Math.LN10 + f.e + 1))
        : new l(t + "").e),
    r > l.maxE + 1 || r < l.minE - 1
      ? new l(r > 0 ? s / 0 : 0)
      : ((Ce = !1),
        (l.rounding = f.s = 1),
        (t = Math.min(12, (r + "").length)),
        (i = Bl(e.times(mn(f, n + t)), n)),
        i.d &&
          ((i = Se(i, n + 5, 1)),
          Wa(i.d, n, a) &&
            ((r = n + 10),
            (i = Se(Bl(e.times(mn(f, r + t)), r), r + 5, 1)),
            +br(i.d).slice(n + 1, n + 15) + 1 == 1e14 &&
              (i = Se(i, n + 1, 0)))),
        (i.s = s),
        (Ce = !0),
        (l.rounding = a),
        Se(i, n, a))
  );
};
se.toPrecision = function (e, r) {
  var t,
    n = this,
    i = n.constructor;
  return (
    e === void 0
      ? (t = $t(n, n.e <= i.toExpNeg || n.e >= i.toExpPos))
      : (Zr(e, 1, In),
        r === void 0 ? (r = i.rounding) : Zr(r, 0, 8),
        (n = Se(new i(n), e, r)),
        (t = $t(n, e <= n.e || n.e <= i.toExpNeg, e))),
    n.isNeg() && !n.isZero() ? "-" + t : t
  );
};
se.toSignificantDigits = se.toSD = function (e, r) {
  var t = this,
    n = t.constructor;
  return (
    e === void 0
      ? ((e = n.precision), (r = n.rounding))
      : (Zr(e, 1, In), r === void 0 ? (r = n.rounding) : Zr(r, 0, 8)),
    Se(new n(t), e, r)
  );
};
se.toString = function () {
  var e = this,
    r = e.constructor,
    t = $t(e, e.e <= r.toExpNeg || e.e >= r.toExpPos);
  return e.isNeg() && !e.isZero() ? "-" + t : t;
};
se.truncated = se.trunc = function () {
  return Se(new this.constructor(this), this.e + 1, 1);
};
se.valueOf = se.toJSON = function () {
  var e = this,
    r = e.constructor,
    t = $t(e, e.e <= r.toExpNeg || e.e >= r.toExpPos);
  return e.isNeg() ? "-" + t : t;
};
function br(e) {
  var r,
    t,
    n,
    i = e.length - 1,
    a = "",
    s = e[0];
  if (i > 0) {
    for (a += s, r = 1; r < i; r++)
      (n = e[r] + ""), (t = Ee - n.length), t && (a += an(t)), (a += n);
    (s = e[r]), (n = s + ""), (t = Ee - n.length), t && (a += an(t));
  } else if (s === 0) return "0";
  for (; s % 10 === 0; ) s /= 10;
  return a + s;
}
function Zr(e, r, t) {
  if (e !== ~~e || e < r || e > t) throw Error(En + e);
}
function Wa(e, r, t, n) {
  var i, a, s, f;
  for (a = e[0]; a >= 10; a /= 10) --r;
  return (
    --r < 0 ? ((r += Ee), (i = 0)) : ((i = Math.ceil((r + 1) / Ee)), (r %= Ee)),
    (a = vr(10, Ee - r)),
    (f = e[i] % a | 0),
    n == null
      ? r < 3
        ? (r == 0 ? (f = (f / 100) | 0) : r == 1 && (f = (f / 10) | 0),
          (s =
            (t < 4 && f == 99999) ||
            (t > 3 && f == 49999) ||
            f == 5e4 ||
            f == 0))
        : (s =
            (((t < 4 && f + 1 == a) || (t > 3 && f + 1 == a / 2)) &&
              ((e[i + 1] / a / 100) | 0) == vr(10, r - 2) - 1) ||
            ((f == a / 2 || f == 0) && ((e[i + 1] / a / 100) | 0) == 0))
      : r < 4
      ? (r == 0
          ? (f = (f / 1e3) | 0)
          : r == 1
          ? (f = (f / 100) | 0)
          : r == 2 && (f = (f / 10) | 0),
        (s = ((n || t < 4) && f == 9999) || (!n && t > 3 && f == 4999)))
      : (s =
          (((n || t < 4) && f + 1 == a) || (!n && t > 3 && f + 1 == a / 2)) &&
          ((e[i + 1] / a / 1e3) | 0) == vr(10, r - 3) - 1),
    s
  );
}
function Lo(e, r, t) {
  for (var n, i = [0], a, s = 0, f = e.length; s < f; ) {
    for (a = i.length; a--; ) i[a] *= r;
    for (i[0] += Tl.indexOf(e.charAt(s++)), n = 0; n < i.length; n++)
      i[n] > t - 1 &&
        (i[n + 1] === void 0 && (i[n + 1] = 0),
        (i[n + 1] += (i[n] / t) | 0),
        (i[n] %= t));
  }
  return i.reverse();
}
function EN(e, r) {
  var t, n, i;
  if (r.isZero()) return r;
  (n = r.d.length),
    n < 32
      ? ((t = Math.ceil(n / 3)), (i = (1 / Gs(4, t)).toString()))
      : ((t = 16), (i = "2.3283064365386962890625e-10")),
    (e.precision += t),
    (r = qi(e, 1, r.times(i), new e(1)));
  for (var a = t; a--; ) {
    var s = r.times(r);
    r = s.times(s).minus(s).times(8).plus(1);
  }
  return (e.precision -= t), r;
}
var je = (function () {
  function e(n, i, a) {
    var s,
      f = 0,
      l = n.length;
    for (n = n.slice(); l--; )
      (s = n[l] * i + f), (n[l] = s % a | 0), (f = (s / a) | 0);
    return f && n.unshift(f), n;
  }
  function r(n, i, a, s) {
    var f, l;
    if (a != s) l = a > s ? 1 : -1;
    else
      for (f = l = 0; f < a; f++)
        if (n[f] != i[f]) {
          l = n[f] > i[f] ? 1 : -1;
          break;
        }
    return l;
  }
  function t(n, i, a, s) {
    for (var f = 0; a--; )
      (n[a] -= f), (f = n[a] < i[a] ? 1 : 0), (n[a] = f * s + n[a] - i[a]);
    for (; !n[0] && n.length > 1; ) n.shift();
  }
  return function (n, i, a, s, f, l) {
    var p,
      u,
      o,
      c,
      m,
      v,
      d,
      N,
      g,
      w,
      h,
      x,
      b,
      y,
      A,
      S,
      E,
      M,
      _,
      C,
      I = n.constructor,
      L = n.s == i.s ? 1 : -1,
      $ = n.d,
      D = i.d;
    if (!$ || !$[0] || !D || !D[0])
      return new I(
        !n.s || !i.s || ($ ? D && $[0] == D[0] : !D)
          ? NaN
          : ($ && $[0] == 0) || !D
          ? L * 0
          : L / 0
      );
    for (
      l
        ? ((m = 1), (u = n.e - i.e))
        : ((l = Mt), (m = Ee), (u = Dr(n.e / m) - Dr(i.e / m))),
        _ = D.length,
        E = $.length,
        g = new I(L),
        w = g.d = [],
        o = 0;
      D[o] == ($[o] || 0);
      o++
    );
    if (
      (D[o] > ($[o] || 0) && u--,
      a == null
        ? ((y = a = I.precision), (s = I.rounding))
        : f
        ? (y = a + (n.e - i.e) + 1)
        : (y = a),
      y < 0)
    )
      w.push(1), (v = !0);
    else {
      if (((y = (y / m + 2) | 0), (o = 0), _ == 1)) {
        for (c = 0, D = D[0], y++; (o < E || c) && y--; o++)
          (A = c * l + ($[o] || 0)), (w[o] = (A / D) | 0), (c = A % D | 0);
        v = c || o < E;
      } else {
        for (
          c = (l / (D[0] + 1)) | 0,
            c > 1 &&
              ((D = e(D, c, l)),
              ($ = e($, c, l)),
              (_ = D.length),
              (E = $.length)),
            S = _,
            h = $.slice(0, _),
            x = h.length;
          x < _;

        )
          h[x++] = 0;
        (C = D.slice()), C.unshift(0), (M = D[0]), D[1] >= l / 2 && ++M;
        do
          (c = 0),
            (p = r(D, h, _, x)),
            p < 0
              ? ((b = h[0]),
                _ != x && (b = b * l + (h[1] || 0)),
                (c = (b / M) | 0),
                c > 1
                  ? (c >= l && (c = l - 1),
                    (d = e(D, c, l)),
                    (N = d.length),
                    (x = h.length),
                    (p = r(d, h, N, x)),
                    p == 1 && (c--, t(d, _ < N ? C : D, N, l)))
                  : (c == 0 && (p = c = 1), (d = D.slice())),
                (N = d.length),
                N < x && d.unshift(0),
                t(h, d, x, l),
                p == -1 &&
                  ((x = h.length),
                  (p = r(D, h, _, x)),
                  p < 1 && (c++, t(h, _ < x ? C : D, x, l))),
                (x = h.length))
              : p === 0 && (c++, (h = [0])),
            (w[o++] = c),
            p && h[0] ? (h[x++] = $[S] || 0) : ((h = [$[S]]), (x = 1));
        while ((S++ < E || h[0] !== void 0) && y--);
        v = h[0] !== void 0;
      }
      w[0] || w.shift();
    }
    if (m == 1) (g.e = u), (c0 = v);
    else {
      for (o = 1, c = w[0]; c >= 10; c /= 10) o++;
      (g.e = o + u * m - 1), Se(g, f ? a + g.e + 1 : a, s, v);
    }
    return g;
  };
})();
function Se(e, r, t, n) {
  var i,
    a,
    s,
    f,
    l,
    p,
    u,
    o,
    c,
    m = e.constructor;
  e: if (r != null) {
    if (((o = e.d), !o)) return e;
    for (i = 1, f = o[0]; f >= 10; f /= 10) i++;
    if (((a = r - i), a < 0))
      (a += Ee),
        (s = r),
        (u = o[(c = 0)]),
        (l = (u / vr(10, i - s - 1)) % 10 | 0);
    else if (((c = Math.ceil((a + 1) / Ee)), (f = o.length), c >= f))
      if (n) {
        for (; f++ <= c; ) o.push(0);
        (u = l = 0), (i = 1), (a %= Ee), (s = a - Ee + 1);
      } else break e;
    else {
      for (u = f = o[c], i = 1; f >= 10; f /= 10) i++;
      (a %= Ee),
        (s = a - Ee + i),
        (l = s < 0 ? 0 : (u / vr(10, i - s - 1)) % 10 | 0);
    }
    if (
      ((n =
        n ||
        r < 0 ||
        o[c + 1] !== void 0 ||
        (s < 0 ? u : u % vr(10, i - s - 1))),
      (p =
        t < 4
          ? (l || n) && (t == 0 || t == (e.s < 0 ? 3 : 2))
          : l > 5 ||
            (l == 5 &&
              (t == 4 ||
                n ||
                (t == 6 &&
                  (a > 0 ? (s > 0 ? u / vr(10, i - s) : 0) : o[c - 1]) % 10 &
                    1) ||
                t == (e.s < 0 ? 8 : 7)))),
      r < 1 || !o[0])
    )
      return (
        (o.length = 0),
        p
          ? ((r -= e.e + 1),
            (o[0] = vr(10, (Ee - (r % Ee)) % Ee)),
            (e.e = -r || 0))
          : (o[0] = e.e = 0),
        e
      );
    if (
      (a == 0
        ? ((o.length = c), (f = 1), c--)
        : ((o.length = c + 1),
          (f = vr(10, Ee - a)),
          (o[c] = s > 0 ? ((u / vr(10, i - s)) % vr(10, s) | 0) * f : 0)),
      p)
    )
      for (;;)
        if (c == 0) {
          for (a = 1, s = o[0]; s >= 10; s /= 10) a++;
          for (s = o[0] += f, f = 1; s >= 10; s /= 10) f++;
          a != f && (e.e++, o[0] == Mt && (o[0] = 1));
          break;
        } else {
          if (((o[c] += f), o[c] != Mt)) break;
          (o[c--] = 0), (f = 1);
        }
    for (a = o.length; o[--a] === 0; ) o.pop();
  }
  return (
    Ce &&
      (e.e > m.maxE
        ? ((e.d = null), (e.e = NaN))
        : e.e < m.minE && ((e.e = 0), (e.d = [0]))),
    e
  );
}
function $t(e, r, t) {
  if (!e.isFinite()) return y0(e);
  var n,
    i = e.e,
    a = br(e.d),
    s = a.length;
  return (
    r
      ? (t && (n = t - s) > 0
          ? (a = a.charAt(0) + "." + a.slice(1) + an(n))
          : s > 1 && (a = a.charAt(0) + "." + a.slice(1)),
        (a = a + (e.e < 0 ? "e" : "e+") + e.e))
      : i < 0
      ? ((a = "0." + an(-i - 1) + a), t && (n = t - s) > 0 && (a += an(n)))
      : i >= s
      ? ((a += an(i + 1 - s)),
        t && (n = t - i - 1) > 0 && (a = a + "." + an(n)))
      : ((n = i + 1) < s && (a = a.slice(0, n) + "." + a.slice(n)),
        t && (n = t - s) > 0 && (i + 1 === s && (a += "."), (a += an(n)))),
    a
  );
}
function Vs(e, r) {
  var t = e[0];
  for (r *= Ee; t >= 10; t /= 10) r++;
  return r;
}
function ds(e, r, t) {
  if (r > AN) throw ((Ce = !0), t && (e.precision = t), Error(f0));
  return Se(new e(ms), r, 1, !0);
}
function xt(e, r, t) {
  if (r > _l) throw Error(f0);
  return Se(new e(vs), r, t, !0);
}
function d0(e) {
  var r = e.length - 1,
    t = r * Ee + 1;
  if (((r = e[r]), r)) {
    for (; r % 10 == 0; r /= 10) t--;
    for (r = e[0]; r >= 10; r /= 10) t++;
  }
  return t;
}
function an(e) {
  for (var r = ""; e--; ) r += "0";
  return r;
}
function h0(e, r, t, n) {
  var i,
    a = new e(1),
    s = Math.ceil(n / Ee + 4);
  for (Ce = !1; ; ) {
    if (
      (t % 2 && ((a = a.times(r)), Ap(a.d, s) && (i = !0)),
      (t = Dr(t / 2)),
      t === 0)
    ) {
      (t = a.d.length - 1), i && a.d[t] === 0 && ++a.d[t];
      break;
    }
    (r = r.times(r)), Ap(r.d, s);
  }
  return (Ce = !0), a;
}
function Sp(e) {
  return e.d[e.d.length - 1] & 1;
}
function g0(e, r, t) {
  for (var n, i = new e(r[0]), a = 0; ++a < r.length; )
    if (((n = new e(r[a])), n.s)) i[t](n) && (i = n);
    else {
      i = n;
      break;
    }
  return i;
}
function Bl(e, r) {
  var t,
    n,
    i,
    a,
    s,
    f,
    l,
    p = 0,
    u = 0,
    o = 0,
    c = e.constructor,
    m = c.rounding,
    v = c.precision;
  if (!e.d || !e.d[0] || e.e > 17)
    return new c(
      e.d
        ? e.d[0]
          ? e.s < 0
            ? 0
            : 1 / 0
          : 1
        : e.s
        ? e.s < 0
          ? 0
          : e
        : 0 / 0
    );
  for (
    r == null ? ((Ce = !1), (l = v)) : (l = r), f = new c(0.03125);
    e.e > -2;

  )
    (e = e.times(f)), (o += 5);
  for (
    n = ((Math.log(vr(2, o)) / Math.LN10) * 2 + 5) | 0,
      l += n,
      t = a = s = new c(1),
      c.precision = l;
    ;

  ) {
    if (
      ((a = Se(a.times(e), l, 1)),
      (t = t.times(++u)),
      (f = s.plus(je(a, t, l, 1))),
      br(f.d).slice(0, l) === br(s.d).slice(0, l))
    ) {
      for (i = o; i--; ) s = Se(s.times(s), l, 1);
      if (r == null)
        if (p < 3 && Wa(s.d, l - n, m, p))
          (c.precision = l += 10), (t = a = f = new c(1)), (u = 0), p++;
        else return Se(s, (c.precision = v), m, (Ce = !0));
      else return (c.precision = v), s;
    }
    s = f;
  }
}
function mn(e, r) {
  var t,
    n,
    i,
    a,
    s,
    f,
    l,
    p,
    u,
    o,
    c,
    m = 1,
    v = 10,
    d = e,
    N = d.d,
    g = d.constructor,
    w = g.rounding,
    h = g.precision;
  if (d.s < 0 || !N || !N[0] || (!d.e && N[0] == 1 && N.length == 1))
    return new g(N && !N[0] ? -1 / 0 : d.s != 1 ? NaN : N ? 0 : d);
  if (
    (r == null ? ((Ce = !1), (u = h)) : (u = r),
    (g.precision = u += v),
    (t = br(N)),
    (n = t.charAt(0)),
    Math.abs((a = d.e)) < 15e14)
  ) {
    for (; (n < 7 && n != 1) || (n == 1 && t.charAt(1) > 3); )
      (d = d.times(e)), (t = br(d.d)), (n = t.charAt(0)), m++;
    (a = d.e),
      n > 1 ? ((d = new g("0." + t)), a++) : (d = new g(n + "." + t.slice(1)));
  } else
    return (
      (p = ds(g, u + 2, h).times(a + "")),
      (d = mn(new g(n + "." + t.slice(1)), u - v).plus(p)),
      (g.precision = h),
      r == null ? Se(d, h, w, (Ce = !0)) : d
    );
  for (
    o = d,
      l = s = d = je(d.minus(1), d.plus(1), u, 1),
      c = Se(d.times(d), u, 1),
      i = 3;
    ;

  ) {
    if (
      ((s = Se(s.times(c), u, 1)),
      (p = l.plus(je(s, new g(i), u, 1))),
      br(p.d).slice(0, u) === br(l.d).slice(0, u))
    )
      if (
        ((l = l.times(2)),
        a !== 0 && (l = l.plus(ds(g, u + 2, h).times(a + ""))),
        (l = je(l, new g(m), u, 1)),
        r == null)
      )
        if (Wa(l.d, u - v, w, f))
          (g.precision = u += v),
            (p = s = d = je(o.minus(1), o.plus(1), u, 1)),
            (c = Se(d.times(d), u, 1)),
            (i = f = 1);
        else return Se(l, (g.precision = h), w, (Ce = !0));
      else return (g.precision = h), l;
    (l = p), (i += 2);
  }
}
function y0(e) {
  return String((e.s * e.s) / 0);
}
function Il(e, r) {
  var t, n, i;
  for (
    (t = r.indexOf(".")) > -1 && (r = r.replace(".", "")),
      (n = r.search(/e/i)) > 0
        ? (t < 0 && (t = n), (t += +r.slice(n + 1)), (r = r.substring(0, n)))
        : t < 0 && (t = r.length),
      n = 0;
    r.charCodeAt(n) === 48;
    n++
  );
  for (i = r.length; r.charCodeAt(i - 1) === 48; --i);
  if (((r = r.slice(n, i)), r)) {
    if (
      ((i -= n),
      (e.e = t = t - n - 1),
      (e.d = []),
      (n = (t + 1) % Ee),
      t < 0 && (n += Ee),
      n < i)
    ) {
      for (n && e.d.push(+r.slice(0, n)), i -= Ee; n < i; )
        e.d.push(+r.slice(n, (n += Ee)));
      (r = r.slice(n)), (n = Ee - r.length);
    } else n -= i;
    for (; n--; ) r += "0";
    e.d.push(+r),
      Ce &&
        (e.e > e.constructor.maxE
          ? ((e.d = null), (e.e = NaN))
          : e.e < e.constructor.minE && ((e.e = 0), (e.d = [0])));
  } else (e.e = 0), (e.d = [0]);
  return e;
}
function CN(e, r) {
  var t, n, i, a, s, f, l, p, u;
  if (r.indexOf("_") > -1) {
    if (((r = r.replace(/(\d)_(?=\d)/g, "$1")), v0.test(r))) return Il(e, r);
  } else if (r === "Infinity" || r === "NaN")
    return +r || (e.s = NaN), (e.e = NaN), (e.d = null), e;
  if (NN.test(r)) (t = 16), (r = r.toLowerCase());
  else if (bN.test(r)) t = 2;
  else if (MN.test(r)) t = 8;
  else throw Error(En + r);
  for (
    a = r.search(/p/i),
      a > 0
        ? ((l = +r.slice(a + 1)), (r = r.substring(2, a)))
        : (r = r.slice(2)),
      a = r.indexOf("."),
      s = a >= 0,
      n = e.constructor,
      s &&
        ((r = r.replace(".", "")),
        (f = r.length),
        (a = f - a),
        (i = h0(n, new n(t), a, a * 2))),
      p = Lo(r, t, Mt),
      u = p.length - 1,
      a = u;
    p[a] === 0;
    --a
  )
    p.pop();
  return a < 0
    ? new n(e.s * 0)
    : ((e.e = Vs(p, u)),
      (e.d = p),
      (Ce = !1),
      s && (e = je(e, i, f * 4)),
      l && (e = e.times(Math.abs(l) < 54 ? vr(2, l) : Cn.pow(2, l))),
      (Ce = !0),
      e);
}
function ON(e, r) {
  var t,
    n = r.d.length;
  if (n < 3) return r.isZero() ? r : qi(e, 2, r, r);
  (t = 1.4 * Math.sqrt(n)),
    (t = t > 16 ? 16 : t | 0),
    (r = r.times(1 / Gs(5, t))),
    (r = qi(e, 2, r, r));
  for (var i, a = new e(5), s = new e(16), f = new e(20); t--; )
    (i = r.times(r)), (r = r.times(a.plus(i.times(s.times(i).minus(f)))));
  return r;
}
function qi(e, r, t, n, i) {
  var a,
    s,
    f,
    l,
    p = e.precision,
    u = Math.ceil(p / Ee);
  for (Ce = !1, l = t.times(t), f = new e(n); ; ) {
    if (
      ((s = je(f.times(l), new e(r++ * r++), p, 1)),
      (f = i ? n.plus(s) : n.minus(s)),
      (n = je(s.times(l), new e(r++ * r++), p, 1)),
      (s = f.plus(n)),
      s.d[u] !== void 0)
    ) {
      for (a = u; s.d[a] === f.d[a] && a--; );
      if (a == -1) break;
    }
    (a = f), (f = n), (n = s), (s = a);
  }
  return (Ce = !0), (s.d.length = u + 1), s;
}
function Gs(e, r) {
  for (var t = e; --r; ) t *= e;
  return t;
}
function x0(e, r) {
  var t,
    n = r.s < 0,
    i = xt(e, e.precision, 1),
    a = i.times(0.5);
  if (((r = r.abs()), r.lte(a))) return (Vt = n ? 4 : 1), r;
  if (((t = r.divToInt(i)), t.isZero())) Vt = n ? 3 : 2;
  else {
    if (((r = r.minus(t.times(i))), r.lte(a)))
      return (Vt = Sp(t) ? (n ? 2 : 3) : n ? 4 : 1), r;
    Vt = Sp(t) ? (n ? 1 : 4) : n ? 3 : 2;
  }
  return r.minus(i).abs();
}
function Vc(e, r, t, n) {
  var i,
    a,
    s,
    f,
    l,
    p,
    u,
    o,
    c,
    m = e.constructor,
    v = t !== void 0;
  if (
    (v
      ? (Zr(t, 1, In), n === void 0 ? (n = m.rounding) : Zr(n, 0, 8))
      : ((t = m.precision), (n = m.rounding)),
    !e.isFinite())
  )
    u = y0(e);
  else {
    for (
      u = $t(e),
        s = u.indexOf("."),
        v
          ? ((i = 2), r == 16 ? (t = t * 4 - 3) : r == 8 && (t = t * 3 - 2))
          : (i = r),
        s >= 0 &&
          ((u = u.replace(".", "")),
          (c = new m(1)),
          (c.e = u.length - s),
          (c.d = Lo($t(c), 10, i)),
          (c.e = c.d.length)),
        o = Lo(u, 10, i),
        a = l = o.length;
      o[--l] == 0;

    )
      o.pop();
    if (!o[0]) u = v ? "0p+0" : "0";
    else {
      if (
        (s < 0
          ? a--
          : ((e = new m(e)),
            (e.d = o),
            (e.e = a),
            (e = je(e, c, t, n, 0, i)),
            (o = e.d),
            (a = e.e),
            (p = c0)),
        (s = o[t]),
        (f = i / 2),
        (p = p || o[t + 1] !== void 0),
        (p =
          n < 4
            ? (s !== void 0 || p) && (n === 0 || n === (e.s < 0 ? 3 : 2))
            : s > f ||
              (s === f &&
                (n === 4 ||
                  p ||
                  (n === 6 && o[t - 1] & 1) ||
                  n === (e.s < 0 ? 8 : 7)))),
        (o.length = t),
        p)
      )
        for (; ++o[--t] > i - 1; ) (o[t] = 0), t || (++a, o.unshift(1));
      for (l = o.length; !o[l - 1]; --l);
      for (s = 0, u = ""; s < l; s++) u += Tl.charAt(o[s]);
      if (v) {
        if (l > 1)
          if (r == 16 || r == 8) {
            for (s = r == 16 ? 4 : 3, --l; l % s; l++) u += "0";
            for (o = Lo(u, i, r), l = o.length; !o[l - 1]; --l);
            for (s = 1, u = "1."; s < l; s++) u += Tl.charAt(o[s]);
          } else u = u.charAt(0) + "." + u.slice(1);
        u = u + (a < 0 ? "p" : "p+") + a;
      } else if (a < 0) {
        for (; ++a; ) u = "0" + u;
        u = "0." + u;
      } else if (++a > l) for (a -= l; a--; ) u += "0";
      else a < l && (u = u.slice(0, a) + "." + u.slice(a));
    }
    u = (r == 16 ? "0x" : r == 2 ? "0b" : r == 8 ? "0o" : "") + u;
  }
  return e.s < 0 ? "-" + u : u;
}
function Ap(e, r) {
  if (e.length > r) return (e.length = r), !0;
}
function TN(e) {
  return new this(e).abs();
}
function DN(e) {
  return new this(e).acos();
}
function _N(e) {
  return new this(e).acosh();
}
function BN(e, r) {
  return new this(e).plus(r);
}
function IN(e) {
  return new this(e).asin();
}
function $N(e) {
  return new this(e).asinh();
}
function zN(e) {
  return new this(e).atan();
}
function RN(e) {
  return new this(e).atanh();
}
function FN(e, r) {
  (e = new this(e)), (r = new this(r));
  var t,
    n = this.precision,
    i = this.rounding,
    a = n + 4;
  return (
    !e.s || !r.s
      ? (t = new this(NaN))
      : !e.d && !r.d
      ? ((t = xt(this, a, 1).times(r.s > 0 ? 0.25 : 0.75)), (t.s = e.s))
      : !r.d || e.isZero()
      ? ((t = r.s < 0 ? xt(this, n, i) : new this(0)), (t.s = e.s))
      : !e.d || r.isZero()
      ? ((t = xt(this, a, 1).times(0.5)), (t.s = e.s))
      : r.s < 0
      ? ((this.precision = a),
        (this.rounding = 1),
        (t = this.atan(je(e, r, a, 1))),
        (r = xt(this, a, 1)),
        (this.precision = n),
        (this.rounding = i),
        (t = e.s < 0 ? t.minus(r) : t.plus(r)))
      : (t = this.atan(je(e, r, a, 1))),
    t
  );
}
function PN(e) {
  return new this(e).cbrt();
}
function LN(e) {
  return Se((e = new this(e)), e.e + 1, 2);
}
function kN(e, r, t) {
  return new this(e).clamp(r, t);
}
function UN(e) {
  if (!e || typeof e != "object") throw Error(Hs + "Object expected");
  var r,
    t,
    n,
    i = e.defaults === !0,
    a = [
      "precision",
      1,
      In,
      "rounding",
      0,
      8,
      "toExpNeg",
      -Ni,
      0,
      "toExpPos",
      0,
      Ni,
      "maxE",
      0,
      Ni,
      "minE",
      -Ni,
      0,
      "modulo",
      0,
      9,
    ];
  for (r = 0; r < a.length; r += 3)
    if (((t = a[r]), i && (this[t] = Dl[t]), (n = e[t]) !== void 0))
      if (Dr(n) === n && n >= a[r + 1] && n <= a[r + 2]) this[t] = n;
      else throw Error(En + t + ": " + n);
  if (((t = "crypto"), i && (this[t] = Dl[t]), (n = e[t]) !== void 0))
    if (n === !0 || n === !1 || n === 0 || n === 1)
      if (n)
        if (
          typeof crypto != "undefined" &&
          crypto &&
          (crypto.getRandomValues || crypto.randomBytes)
        )
          this[t] = !0;
        else throw Error(p0);
      else this[t] = !1;
    else throw Error(En + t + ": " + n);
  return this;
}
function qN(e) {
  return new this(e).cos();
}
function HN(e) {
  return new this(e).cosh();
}
function w0(e) {
  var r, t, n;
  function i(a) {
    var s,
      f,
      l,
      p = this;
    if (!(p instanceof i)) return new i(a);
    if (((p.constructor = i), Ep(a))) {
      (p.s = a.s),
        Ce
          ? !a.d || a.e > i.maxE
            ? ((p.e = NaN), (p.d = null))
            : a.e < i.minE
            ? ((p.e = 0), (p.d = [0]))
            : ((p.e = a.e), (p.d = a.d.slice()))
          : ((p.e = a.e), (p.d = a.d ? a.d.slice() : a.d));
      return;
    }
    if (((l = typeof a), l === "number")) {
      if (a === 0) {
        (p.s = 1 / a < 0 ? -1 : 1), (p.e = 0), (p.d = [0]);
        return;
      }
      if ((a < 0 ? ((a = -a), (p.s = -1)) : (p.s = 1), a === ~~a && a < 1e7)) {
        for (s = 0, f = a; f >= 10; f /= 10) s++;
        Ce
          ? s > i.maxE
            ? ((p.e = NaN), (p.d = null))
            : s < i.minE
            ? ((p.e = 0), (p.d = [0]))
            : ((p.e = s), (p.d = [a]))
          : ((p.e = s), (p.d = [a]));
        return;
      } else if (a * 0 !== 0) {
        a || (p.s = NaN), (p.e = NaN), (p.d = null);
        return;
      }
      return Il(p, a.toString());
    } else if (l !== "string") throw Error(En + a);
    return (
      (f = a.charCodeAt(0)) === 45
        ? ((a = a.slice(1)), (p.s = -1))
        : (f === 43 && (a = a.slice(1)), (p.s = 1)),
      v0.test(a) ? Il(p, a) : CN(p, a)
    );
  }
  if (
    ((i.prototype = se),
    (i.ROUND_UP = 0),
    (i.ROUND_DOWN = 1),
    (i.ROUND_CEIL = 2),
    (i.ROUND_FLOOR = 3),
    (i.ROUND_HALF_UP = 4),
    (i.ROUND_HALF_DOWN = 5),
    (i.ROUND_HALF_EVEN = 6),
    (i.ROUND_HALF_CEIL = 7),
    (i.ROUND_HALF_FLOOR = 8),
    (i.EUCLID = 9),
    (i.config = i.set = UN),
    (i.clone = w0),
    (i.isDecimal = Ep),
    (i.abs = TN),
    (i.acos = DN),
    (i.acosh = _N),
    (i.add = BN),
    (i.asin = IN),
    (i.asinh = $N),
    (i.atan = zN),
    (i.atanh = RN),
    (i.atan2 = FN),
    (i.cbrt = PN),
    (i.ceil = LN),
    (i.clamp = kN),
    (i.cos = qN),
    (i.cosh = HN),
    (i.div = VN),
    (i.exp = GN),
    (i.floor = WN),
    (i.hypot = ZN),
    (i.ln = QN),
    (i.log = YN),
    (i.log10 = jN),
    (i.log2 = XN),
    (i.max = JN),
    (i.min = KN),
    (i.mod = eM),
    (i.mul = rM),
    (i.pow = tM),
    (i.random = nM),
    (i.round = iM),
    (i.sign = aM),
    (i.sin = oM),
    (i.sinh = sM),
    (i.sqrt = uM),
    (i.sub = lM),
    (i.sum = cM),
    (i.tan = fM),
    (i.tanh = pM),
    (i.trunc = mM),
    e === void 0 && (e = {}),
    e && e.defaults !== !0)
  )
    for (
      n = [
        "precision",
        "rounding",
        "toExpNeg",
        "toExpPos",
        "maxE",
        "minE",
        "modulo",
        "crypto",
      ],
        r = 0;
      r < n.length;

    )
      e.hasOwnProperty((t = n[r++])) || (e[t] = this[t]);
  return i.config(e), i;
}
function VN(e, r) {
  return new this(e).div(r);
}
function GN(e) {
  return new this(e).exp();
}
function WN(e) {
  return Se((e = new this(e)), e.e + 1, 3);
}
function ZN() {
  var e,
    r,
    t = new this(0);
  for (Ce = !1, e = 0; e < arguments.length; )
    if (((r = new this(arguments[e++])), r.d)) t.d && (t = t.plus(r.times(r)));
    else {
      if (r.s) return (Ce = !0), new this(1 / 0);
      t = r;
    }
  return (Ce = !0), t.sqrt();
}
function Ep(e) {
  return e instanceof Cn || (e && e.toStringTag === m0) || !1;
}
function QN(e) {
  return new this(e).ln();
}
function YN(e, r) {
  return new this(e).log(r);
}
function XN(e) {
  return new this(e).log(2);
}
function jN(e) {
  return new this(e).log(10);
}
function JN() {
  return g0(this, arguments, "lt");
}
function KN() {
  return g0(this, arguments, "gt");
}
function eM(e, r) {
  return new this(e).mod(r);
}
function rM(e, r) {
  return new this(e).mul(r);
}
function tM(e, r) {
  return new this(e).pow(r);
}
function nM(e) {
  var r,
    t,
    n,
    i,
    a = 0,
    s = new this(1),
    f = [];
  if (
    (e === void 0 ? (e = this.precision) : Zr(e, 1, In),
    (n = Math.ceil(e / Ee)),
    this.crypto)
  )
    if (crypto.getRandomValues)
      for (r = crypto.getRandomValues(new Uint32Array(n)); a < n; )
        (i = r[a]),
          i >= 429e7
            ? (r[a] = crypto.getRandomValues(new Uint32Array(1))[0])
            : (f[a++] = i % 1e7);
    else if (crypto.randomBytes) {
      for (r = crypto.randomBytes((n *= 4)); a < n; )
        (i =
          r[a] + (r[a + 1] << 8) + (r[a + 2] << 16) + ((r[a + 3] & 127) << 24)),
          i >= 214e7
            ? crypto.randomBytes(4).copy(r, a)
            : (f.push(i % 1e7), (a += 4));
      a = n / 4;
    } else throw Error(p0);
  else for (; a < n; ) f[a++] = (Math.random() * 1e7) | 0;
  for (
    n = f[--a],
      e %= Ee,
      n && e && ((i = vr(10, Ee - e)), (f[a] = ((n / i) | 0) * i));
    f[a] === 0;
    a--
  )
    f.pop();
  if (a < 0) (t = 0), (f = [0]);
  else {
    for (t = -1; f[0] === 0; t -= Ee) f.shift();
    for (n = 1, i = f[0]; i >= 10; i /= 10) n++;
    n < Ee && (t -= Ee - n);
  }
  return (s.e = t), (s.d = f), s;
}
function iM(e) {
  return Se((e = new this(e)), e.e + 1, this.rounding);
}
function aM(e) {
  return (e = new this(e)), e.d ? (e.d[0] ? e.s : 0 * e.s) : e.s || NaN;
}
function oM(e) {
  return new this(e).sin();
}
function sM(e) {
  return new this(e).sinh();
}
function uM(e) {
  return new this(e).sqrt();
}
function lM(e, r) {
  return new this(e).sub(r);
}
function cM() {
  var e = 0,
    r = arguments,
    t = new this(r[e]);
  for (Ce = !1; t.s && ++e < r.length; ) t = t.plus(r[e]);
  return (Ce = !0), Se(t, this.precision, this.rounding);
}
function fM(e) {
  return new this(e).tan();
}
function pM(e) {
  return new this(e).tanh();
}
function mM(e) {
  return Se((e = new this(e)), e.e + 1, 1);
}
se[Symbol.for("nodejs.util.inspect.custom")] = se.toString;
se[Symbol.toStringTag] = "Decimal";
var Cn = (se.constructor = w0(Dl));
ms = new Cn(ms);
vs = new Cn(vs);
var vM = "BigNumber",
  dM = ["?on", "config"],
  hM = F(
    vM,
    dM,
    (e) => {
      var { on: r, config: t } = e,
        n = Cn.clone({ precision: t.precision, modulo: Cn.EUCLID });
      return (
        (n.prototype = Object.create(n.prototype)),
        (n.prototype.type = "BigNumber"),
        (n.prototype.isBigNumber = !0),
        (n.prototype.toJSON = function () {
          return { mathjs: "BigNumber", value: this.toString() };
        }),
        (n.fromJSON = function (i) {
          return new n(i.value);
        }),
        r &&
          r("config", function (i, a) {
            i.precision !== a.precision && n.config({ precision: i.precision });
          }),
        n
      );
    },
    { isClass: !0 }
  ),
  b0 = { exports: {} };
/**
 * @license Complex.js v2.1.1 12/05/2020
 *
 * Copyright (c) 2020, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/ (function (e, r) {
  (function (t) {
    var n =
        Math.cosh ||
        function (o) {
          return Math.abs(o) < 1e-9
            ? 1 - o
            : (Math.exp(o) + Math.exp(-o)) * 0.5;
        },
      i =
        Math.sinh ||
        function (o) {
          return Math.abs(o) < 1e-9 ? o : (Math.exp(o) - Math.exp(-o)) * 0.5;
        },
      a = function (o) {
        var c = Math.PI / 4;
        if (-c > o || o > c) return Math.cos(o) - 1;
        var m = o * o;
        return (
          m *
          (m *
            (m *
              (m *
                (m *
                  (m *
                    (m * (m / 20922789888e3 - 1 / 87178291200) +
                      1 / 479001600) -
                    1 / 3628800) +
                  1 / 40320) -
                1 / 720) +
              1 / 24) -
            1 / 2)
        );
      },
      s = function (o, c) {
        var m = Math.abs(o),
          v = Math.abs(c);
        return m < 3e3 && v < 3e3
          ? Math.sqrt(m * m + v * v)
          : (m < v ? ((m = v), (v = o / c)) : (v = c / o),
            m * Math.sqrt(1 + v * v));
      },
      f = function () {
        throw SyntaxError("Invalid Param");
      };
    function l(o, c) {
      var m = Math.abs(o),
        v = Math.abs(c);
      return o === 0
        ? Math.log(v)
        : c === 0
        ? Math.log(m)
        : m < 3e3 && v < 3e3
        ? Math.log(o * o + c * c) * 0.5
        : ((o = o / 2), (c = c / 2), 0.5 * Math.log(o * o + c * c) + Math.LN2);
    }
    var p = function (o, c) {
      var m = { re: 0, im: 0 };
      if (o == null) m.re = m.im = 0;
      else if (c !== void 0) (m.re = o), (m.im = c);
      else
        switch (typeof o) {
          case "object":
            if ("im" in o && "re" in o) (m.re = o.re), (m.im = o.im);
            else if ("abs" in o && "arg" in o) {
              if (!Number.isFinite(o.abs) && Number.isFinite(o.arg))
                return u.INFINITY;
              (m.re = o.abs * Math.cos(o.arg)),
                (m.im = o.abs * Math.sin(o.arg));
            } else if ("r" in o && "phi" in o) {
              if (!Number.isFinite(o.r) && Number.isFinite(o.phi))
                return u.INFINITY;
              (m.re = o.r * Math.cos(o.phi)), (m.im = o.r * Math.sin(o.phi));
            } else o.length === 2 ? ((m.re = o[0]), (m.im = o[1])) : f();
            break;
          case "string":
            m.im = m.re = 0;
            var v = o.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),
              d = 1,
              N = 0;
            v === null && f();
            for (var g = 0; g < v.length; g++) {
              var w = v[g];
              w === " " ||
                w === "	" ||
                w ===
                  `
` ||
                (w === "+"
                  ? d++
                  : w === "-"
                  ? N++
                  : w === "i" || w === "I"
                  ? (d + N === 0 && f(),
                    v[g + 1] !== " " && !isNaN(v[g + 1])
                      ? ((m.im += parseFloat((N % 2 ? "-" : "") + v[g + 1])),
                        g++)
                      : (m.im += parseFloat((N % 2 ? "-" : "") + "1")),
                    (d = N = 0))
                  : ((d + N === 0 || isNaN(w)) && f(),
                    v[g + 1] === "i" || v[g + 1] === "I"
                      ? ((m.im += parseFloat((N % 2 ? "-" : "") + w)), g++)
                      : (m.re += parseFloat((N % 2 ? "-" : "") + w)),
                    (d = N = 0)));
            }
            d + N > 0 && f();
            break;
          case "number":
            (m.im = 0), (m.re = o);
            break;
          default:
            f();
        }
      return isNaN(m.re) || isNaN(m.im), m;
    };
    function u(o, c) {
      if (!(this instanceof u)) return new u(o, c);
      var m = p(o, c);
      (this.re = m.re), (this.im = m.im);
    }
    (u.prototype = {
      re: 0,
      im: 0,
      sign: function () {
        var o = this.abs();
        return new u(this.re / o, this.im / o);
      },
      add: function (o, c) {
        var m = new u(o, c);
        return this.isInfinite() && m.isInfinite()
          ? u.NAN
          : this.isInfinite() || m.isInfinite()
          ? u.INFINITY
          : new u(this.re + m.re, this.im + m.im);
      },
      sub: function (o, c) {
        var m = new u(o, c);
        return this.isInfinite() && m.isInfinite()
          ? u.NAN
          : this.isInfinite() || m.isInfinite()
          ? u.INFINITY
          : new u(this.re - m.re, this.im - m.im);
      },
      mul: function (o, c) {
        var m = new u(o, c);
        return (this.isInfinite() && m.isZero()) ||
          (this.isZero() && m.isInfinite())
          ? u.NAN
          : this.isInfinite() || m.isInfinite()
          ? u.INFINITY
          : m.im === 0 && this.im === 0
          ? new u(this.re * m.re, 0)
          : new u(
              this.re * m.re - this.im * m.im,
              this.re * m.im + this.im * m.re
            );
      },
      div: function (o, c) {
        var m = new u(o, c);
        if (
          (this.isZero() && m.isZero()) ||
          (this.isInfinite() && m.isInfinite())
        )
          return u.NAN;
        if (this.isInfinite() || m.isZero()) return u.INFINITY;
        if (this.isZero() || m.isInfinite()) return u.ZERO;
        (o = this.re), (c = this.im);
        var v = m.re,
          d = m.im,
          N,
          g;
        return d === 0
          ? new u(o / v, c / v)
          : Math.abs(v) < Math.abs(d)
          ? ((g = v / d),
            (N = v * g + d),
            new u((o * g + c) / N, (c * g - o) / N))
          : ((g = d / v),
            (N = d * g + v),
            new u((o + c * g) / N, (c - o * g) / N));
      },
      pow: function (o, c) {
        var m = new u(o, c);
        if (((o = this.re), (c = this.im), m.isZero())) return u.ONE;
        if (m.im === 0) {
          if (c === 0 && o > 0) return new u(Math.pow(o, m.re), 0);
          if (o === 0)
            switch (((m.re % 4) + 4) % 4) {
              case 0:
                return new u(Math.pow(c, m.re), 0);
              case 1:
                return new u(0, Math.pow(c, m.re));
              case 2:
                return new u(-Math.pow(c, m.re), 0);
              case 3:
                return new u(0, -Math.pow(c, m.re));
            }
        }
        if (o === 0 && c === 0 && m.re > 0 && m.im >= 0) return u.ZERO;
        var v = Math.atan2(c, o),
          d = l(o, c);
        return (
          (o = Math.exp(m.re * d - m.im * v)),
          (c = m.im * d + m.re * v),
          new u(o * Math.cos(c), o * Math.sin(c))
        );
      },
      sqrt: function () {
        var o = this.re,
          c = this.im,
          m = this.abs(),
          v,
          d;
        if (o >= 0) {
          if (c === 0) return new u(Math.sqrt(o), 0);
          v = 0.5 * Math.sqrt(2 * (m + o));
        } else v = Math.abs(c) / Math.sqrt(2 * (m - o));
        return (
          o <= 0
            ? (d = 0.5 * Math.sqrt(2 * (m - o)))
            : (d = Math.abs(c) / Math.sqrt(2 * (m + o))),
          new u(v, c < 0 ? -d : d)
        );
      },
      exp: function () {
        var o = Math.exp(this.re);
        return this.im, new u(o * Math.cos(this.im), o * Math.sin(this.im));
      },
      expm1: function () {
        var o = this.re,
          c = this.im;
        return new u(
          Math.expm1(o) * Math.cos(c) + a(c),
          Math.exp(o) * Math.sin(c)
        );
      },
      log: function () {
        var o = this.re,
          c = this.im;
        return new u(l(o, c), Math.atan2(c, o));
      },
      abs: function () {
        return s(this.re, this.im);
      },
      arg: function () {
        return Math.atan2(this.im, this.re);
      },
      sin: function () {
        var o = this.re,
          c = this.im;
        return new u(Math.sin(o) * n(c), Math.cos(o) * i(c));
      },
      cos: function () {
        var o = this.re,
          c = this.im;
        return new u(Math.cos(o) * n(c), -Math.sin(o) * i(c));
      },
      tan: function () {
        var o = 2 * this.re,
          c = 2 * this.im,
          m = Math.cos(o) + n(c);
        return new u(Math.sin(o) / m, i(c) / m);
      },
      cot: function () {
        var o = 2 * this.re,
          c = 2 * this.im,
          m = Math.cos(o) - n(c);
        return new u(-Math.sin(o) / m, i(c) / m);
      },
      sec: function () {
        var o = this.re,
          c = this.im,
          m = 0.5 * n(2 * c) + 0.5 * Math.cos(2 * o);
        return new u((Math.cos(o) * n(c)) / m, (Math.sin(o) * i(c)) / m);
      },
      csc: function () {
        var o = this.re,
          c = this.im,
          m = 0.5 * n(2 * c) - 0.5 * Math.cos(2 * o);
        return new u((Math.sin(o) * n(c)) / m, (-Math.cos(o) * i(c)) / m);
      },
      asin: function () {
        var o = this.re,
          c = this.im,
          m = new u(c * c - o * o + 1, -2 * o * c).sqrt(),
          v = new u(m.re - c, m.im + o).log();
        return new u(v.im, -v.re);
      },
      acos: function () {
        var o = this.re,
          c = this.im,
          m = new u(c * c - o * o + 1, -2 * o * c).sqrt(),
          v = new u(m.re - c, m.im + o).log();
        return new u(Math.PI / 2 - v.im, v.re);
      },
      atan: function () {
        var o = this.re,
          c = this.im;
        if (o === 0) {
          if (c === 1) return new u(0, 1 / 0);
          if (c === -1) return new u(0, -1 / 0);
        }
        var m = o * o + (1 - c) * (1 - c),
          v = new u((1 - c * c - o * o) / m, (-2 * o) / m).log();
        return new u(-0.5 * v.im, 0.5 * v.re);
      },
      acot: function () {
        var o = this.re,
          c = this.im;
        if (c === 0) return new u(Math.atan2(1, o), 0);
        var m = o * o + c * c;
        return m !== 0
          ? new u(o / m, -c / m).atan()
          : new u(o !== 0 ? o / 0 : 0, c !== 0 ? -c / 0 : 0).atan();
      },
      asec: function () {
        var o = this.re,
          c = this.im;
        if (o === 0 && c === 0) return new u(0, 1 / 0);
        var m = o * o + c * c;
        return m !== 0
          ? new u(o / m, -c / m).acos()
          : new u(o !== 0 ? o / 0 : 0, c !== 0 ? -c / 0 : 0).acos();
      },
      acsc: function () {
        var o = this.re,
          c = this.im;
        if (o === 0 && c === 0) return new u(Math.PI / 2, 1 / 0);
        var m = o * o + c * c;
        return m !== 0
          ? new u(o / m, -c / m).asin()
          : new u(o !== 0 ? o / 0 : 0, c !== 0 ? -c / 0 : 0).asin();
      },
      sinh: function () {
        var o = this.re,
          c = this.im;
        return new u(i(o) * Math.cos(c), n(o) * Math.sin(c));
      },
      cosh: function () {
        var o = this.re,
          c = this.im;
        return new u(n(o) * Math.cos(c), i(o) * Math.sin(c));
      },
      tanh: function () {
        var o = 2 * this.re,
          c = 2 * this.im,
          m = n(o) + Math.cos(c);
        return new u(i(o) / m, Math.sin(c) / m);
      },
      coth: function () {
        var o = 2 * this.re,
          c = 2 * this.im,
          m = n(o) - Math.cos(c);
        return new u(i(o) / m, -Math.sin(c) / m);
      },
      csch: function () {
        var o = this.re,
          c = this.im,
          m = Math.cos(2 * c) - n(2 * o);
        return new u(
          (-2 * i(o) * Math.cos(c)) / m,
          (2 * n(o) * Math.sin(c)) / m
        );
      },
      sech: function () {
        var o = this.re,
          c = this.im,
          m = Math.cos(2 * c) + n(2 * o);
        return new u(
          (2 * n(o) * Math.cos(c)) / m,
          (-2 * i(o) * Math.sin(c)) / m
        );
      },
      asinh: function () {
        var o = this.im;
        (this.im = -this.re), (this.re = o);
        var c = this.asin();
        return (
          (this.re = -this.im),
          (this.im = o),
          (o = c.re),
          (c.re = -c.im),
          (c.im = o),
          c
        );
      },
      acosh: function () {
        var o = this.acos();
        if (o.im <= 0) {
          var c = o.re;
          (o.re = -o.im), (o.im = c);
        } else {
          var c = o.im;
          (o.im = -o.re), (o.re = c);
        }
        return o;
      },
      atanh: function () {
        var o = this.re,
          c = this.im,
          m = o > 1 && c === 0,
          v = 1 - o,
          d = 1 + o,
          N = v * v + c * c,
          g =
            N !== 0
              ? new u((d * v - c * c) / N, (c * v + d * c) / N)
              : new u(o !== -1 ? o / 0 : 0, c !== 0 ? c / 0 : 0),
          w = g.re;
        return (
          (g.re = l(g.re, g.im) / 2),
          (g.im = Math.atan2(g.im, w) / 2),
          m && (g.im = -g.im),
          g
        );
      },
      acoth: function () {
        var o = this.re,
          c = this.im;
        if (o === 0 && c === 0) return new u(0, Math.PI / 2);
        var m = o * o + c * c;
        return m !== 0
          ? new u(o / m, -c / m).atanh()
          : new u(o !== 0 ? o / 0 : 0, c !== 0 ? -c / 0 : 0).atanh();
      },
      acsch: function () {
        var o = this.re,
          c = this.im;
        if (c === 0)
          return new u(o !== 0 ? Math.log(o + Math.sqrt(o * o + 1)) : 1 / 0, 0);
        var m = o * o + c * c;
        return m !== 0
          ? new u(o / m, -c / m).asinh()
          : new u(o !== 0 ? o / 0 : 0, c !== 0 ? -c / 0 : 0).asinh();
      },
      asech: function () {
        var o = this.re,
          c = this.im;
        if (this.isZero()) return u.INFINITY;
        var m = o * o + c * c;
        return m !== 0
          ? new u(o / m, -c / m).acosh()
          : new u(o !== 0 ? o / 0 : 0, c !== 0 ? -c / 0 : 0).acosh();
      },
      inverse: function () {
        if (this.isZero()) return u.INFINITY;
        if (this.isInfinite()) return u.ZERO;
        var o = this.re,
          c = this.im,
          m = o * o + c * c;
        return new u(o / m, -c / m);
      },
      conjugate: function () {
        return new u(this.re, -this.im);
      },
      neg: function () {
        return new u(-this.re, -this.im);
      },
      ceil: function (o) {
        return (
          (o = Math.pow(10, o || 0)),
          new u(Math.ceil(this.re * o) / o, Math.ceil(this.im * o) / o)
        );
      },
      floor: function (o) {
        return (
          (o = Math.pow(10, o || 0)),
          new u(Math.floor(this.re * o) / o, Math.floor(this.im * o) / o)
        );
      },
      round: function (o) {
        return (
          (o = Math.pow(10, o || 0)),
          new u(Math.round(this.re * o) / o, Math.round(this.im * o) / o)
        );
      },
      equals: function (o, c) {
        var m = new u(o, c);
        return (
          Math.abs(m.re - this.re) <= u.EPSILON &&
          Math.abs(m.im - this.im) <= u.EPSILON
        );
      },
      clone: function () {
        return new u(this.re, this.im);
      },
      toString: function () {
        var o = this.re,
          c = this.im,
          m = "";
        return this.isNaN()
          ? "NaN"
          : this.isInfinite()
          ? "Infinity"
          : (Math.abs(o) < u.EPSILON && (o = 0),
            Math.abs(c) < u.EPSILON && (c = 0),
            c === 0
              ? m + o
              : (o !== 0
                  ? ((m += o),
                    (m += " "),
                    c < 0 ? ((c = -c), (m += "-")) : (m += "+"),
                    (m += " "))
                  : c < 0 && ((c = -c), (m += "-")),
                c !== 1 && (m += c),
                m + "i"));
      },
      toVector: function () {
        return [this.re, this.im];
      },
      valueOf: function () {
        return this.im === 0 ? this.re : null;
      },
      isNaN: function () {
        return isNaN(this.re) || isNaN(this.im);
      },
      isZero: function () {
        return this.im === 0 && this.re === 0;
      },
      isFinite: function () {
        return isFinite(this.re) && isFinite(this.im);
      },
      isInfinite: function () {
        return !(this.isNaN() || this.isFinite());
      },
    }),
      (u.ZERO = new u(0, 0)),
      (u.ONE = new u(1, 0)),
      (u.I = new u(0, 1)),
      (u.PI = new u(Math.PI, 0)),
      (u.E = new u(Math.E, 0)),
      (u.INFINITY = new u(1 / 0, 1 / 0)),
      (u.NAN = new u(NaN, NaN)),
      (u.EPSILON = 1e-15),
      Object.defineProperty(u, "__esModule", { value: !0 }),
      (u.default = u),
      (u.Complex = u),
      (e.exports = u);
  })();
})(b0);
var Ur = Eh(b0.exports),
  gM = "Complex",
  yM = [],
  xM = F(
    gM,
    yM,
    () => (
      (Ur.prototype.type = "Complex"),
      (Ur.prototype.isComplex = !0),
      (Ur.prototype.toJSON = function () {
        return { mathjs: "Complex", re: this.re, im: this.im };
      }),
      (Ur.prototype.toPolar = function () {
        return { r: this.abs(), phi: this.arg() };
      }),
      (Ur.prototype.format = function (e) {
        var r = "",
          t = this.im,
          n = this.re,
          i = Hn(this.re, e),
          a = Hn(this.im, e),
          s = $e(e) ? e : e ? e.precision : null;
        if (s !== null) {
          var f = Math.pow(10, -s);
          Math.abs(n / t) < f && (n = 0), Math.abs(t / n) < f && (t = 0);
        }
        return (
          t === 0
            ? (r = i)
            : n === 0
            ? t === 1
              ? (r = "i")
              : t === -1
              ? (r = "-i")
              : (r = a + "i")
            : t < 0
            ? t === -1
              ? (r = i + " - i")
              : (r = i + " - " + a.substring(1) + "i")
            : t === 1
            ? (r = i + " + i")
            : (r = i + " + " + a + "i"),
          r
        );
      }),
      (Ur.fromPolar = function (e) {
        switch (arguments.length) {
          case 1: {
            var r = arguments[0];
            if (typeof r == "object") return Ur(r);
            throw new TypeError(
              "Input has to be an object with r and phi keys."
            );
          }
          case 2: {
            var t = arguments[0],
              n = arguments[1];
            if ($e(t)) {
              if (
                (jn(n) && n.hasBase("ANGLE") && (n = n.toNumber("rad")), $e(n))
              )
                return new Ur({ r: t, phi: n });
              throw new TypeError("Phi is not a number nor an angle unit.");
            } else throw new TypeError("Radius r is not a number.");
          }
          default:
            throw new SyntaxError(
              "Wrong number of arguments in function fromPolar"
            );
        }
      }),
      (Ur.prototype.valueOf = Ur.prototype.toString),
      (Ur.fromJSON = function (e) {
        return new Ur(e);
      }),
      (Ur.compare = function (e, r) {
        return e.re > r.re
          ? 1
          : e.re < r.re
          ? -1
          : e.im > r.im
          ? 1
          : e.im < r.im
          ? -1
          : 0;
      }),
      Ur
    ),
    { isClass: !0 }
  ),
  N0 = { exports: {} };
/**
 * @license Fraction.js v4.2.0 05/03/2022
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/ (function (e, r) {
  (function (t) {
    var n = 2e3,
      i = { s: 1, n: 0, d: 1 };
    function a(v, d) {
      if (isNaN((v = parseInt(v, 10)))) throw m.InvalidParameter;
      return v * d;
    }
    function s(v, d) {
      if (d === 0) throw m.DivisionByZero;
      var N = Object.create(m.prototype);
      (N.s = v < 0 ? -1 : 1), (v = v < 0 ? -v : v);
      var g = c(v, d);
      return (N.n = v / g), (N.d = d / g), N;
    }
    function f(v) {
      for (var d = {}, N = v, g = 2, w = 4; w <= N; ) {
        for (; N % g === 0; ) (N /= g), (d[g] = (d[g] || 0) + 1);
        w += 1 + 2 * g++;
      }
      return (
        N !== v ? N > 1 && (d[N] = (d[N] || 0) + 1) : (d[v] = (d[v] || 0) + 1),
        d
      );
    }
    var l = function (v, d) {
      var N = 0,
        g = 1,
        w = 1,
        h = 0,
        x = 0,
        b = 0,
        y = 1,
        A = 1,
        S = 0,
        E = 1,
        M = 1,
        _ = 1,
        C = 1e7,
        I;
      if (v != null)
        if (d !== void 0) {
          if (((N = v), (g = d), (w = N * g), N % 1 !== 0 || g % 1 !== 0))
            throw m.NonIntegerParameter;
        } else
          switch (typeof v) {
            case "object": {
              if ("d" in v && "n" in v)
                (N = v.n), (g = v.d), "s" in v && (N *= v.s);
              else if (0 in v) (N = v[0]), 1 in v && (g = v[1]);
              else throw m.InvalidParameter;
              w = N * g;
              break;
            }
            case "number": {
              if ((v < 0 && ((w = v), (v = -v)), v % 1 === 0)) N = v;
              else if (v > 0) {
                for (
                  v >= 1 &&
                  ((A = Math.pow(10, Math.floor(1 + Math.log(v) / Math.LN10))),
                  (v /= A));
                  E <= C && _ <= C;

                )
                  if (((I = (S + M) / (E + _)), v === I)) {
                    E + _ <= C
                      ? ((N = S + M), (g = E + _))
                      : _ > E
                      ? ((N = M), (g = _))
                      : ((N = S), (g = E));
                    break;
                  } else
                    v > I ? ((S += M), (E += _)) : ((M += S), (_ += E)),
                      E > C ? ((N = M), (g = _)) : ((N = S), (g = E));
                N *= A;
              } else (isNaN(v) || isNaN(d)) && (g = N = NaN);
              break;
            }
            case "string": {
              if (((E = v.match(/\d+|./g)), E === null))
                throw m.InvalidParameter;
              if (
                (E[S] === "-" ? ((w = -1), S++) : E[S] === "+" && S++,
                E.length === S + 1
                  ? (x = a(E[S++], w))
                  : E[S + 1] === "." || E[S] === "."
                  ? (E[S] !== "." && (h = a(E[S++], w)),
                    S++,
                    (S + 1 === E.length ||
                      (E[S + 1] === "(" && E[S + 3] === ")") ||
                      (E[S + 1] === "'" && E[S + 3] === "'")) &&
                      ((x = a(E[S], w)), (y = Math.pow(10, E[S].length)), S++),
                    ((E[S] === "(" && E[S + 2] === ")") ||
                      (E[S] === "'" && E[S + 2] === "'")) &&
                      ((b = a(E[S + 1], w)),
                      (A = Math.pow(10, E[S + 1].length) - 1),
                      (S += 3)))
                  : E[S + 1] === "/" || E[S + 1] === ":"
                  ? ((x = a(E[S], w)), (y = a(E[S + 2], 1)), (S += 3))
                  : E[S + 3] === "/" &&
                    E[S + 1] === " " &&
                    ((h = a(E[S], w)),
                    (x = a(E[S + 2], w)),
                    (y = a(E[S + 4], 1)),
                    (S += 5)),
                E.length <= S)
              ) {
                (g = y * A), (w = N = b + g * h + A * x);
                break;
              }
            }
            default:
              throw m.InvalidParameter;
          }
      if (g === 0) throw m.DivisionByZero;
      (i.s = w < 0 ? -1 : 1), (i.n = Math.abs(N)), (i.d = Math.abs(g));
    };
    function p(v, d, N) {
      for (var g = 1; d > 0; v = (v * v) % N, d >>= 1)
        d & 1 && (g = (g * v) % N);
      return g;
    }
    function u(v, d) {
      for (; d % 2 === 0; d /= 2);
      for (; d % 5 === 0; d /= 5);
      if (d === 1) return 0;
      for (var N = 10 % d, g = 1; N !== 1; g++)
        if (((N = (N * 10) % d), g > n)) return 0;
      return g;
    }
    function o(v, d, N) {
      for (var g = 1, w = p(10, N, d), h = 0; h < 300; h++) {
        if (g === w) return h;
        (g = (g * 10) % d), (w = (w * 10) % d);
      }
      return 0;
    }
    function c(v, d) {
      if (!v) return d;
      if (!d) return v;
      for (;;) {
        if (((v %= d), !v)) return d;
        if (((d %= v), !d)) return v;
      }
    }
    function m(v, d) {
      if ((l(v, d), this instanceof m))
        (v = c(i.d, i.n)),
          (this.s = i.s),
          (this.n = i.n / v),
          (this.d = i.d / v);
      else return s(i.s * i.n, i.d);
    }
    (m.DivisionByZero = new Error("Division by Zero")),
      (m.InvalidParameter = new Error("Invalid argument")),
      (m.NonIntegerParameter = new Error("Parameters must be integer")),
      (m.prototype = {
        s: 1,
        n: 0,
        d: 1,
        abs: function () {
          return s(this.n, this.d);
        },
        neg: function () {
          return s(-this.s * this.n, this.d);
        },
        add: function (v, d) {
          return (
            l(v, d), s(this.s * this.n * i.d + i.s * this.d * i.n, this.d * i.d)
          );
        },
        sub: function (v, d) {
          return (
            l(v, d), s(this.s * this.n * i.d - i.s * this.d * i.n, this.d * i.d)
          );
        },
        mul: function (v, d) {
          return l(v, d), s(this.s * i.s * this.n * i.n, this.d * i.d);
        },
        div: function (v, d) {
          return l(v, d), s(this.s * i.s * this.n * i.d, this.d * i.n);
        },
        clone: function () {
          return s(this.s * this.n, this.d);
        },
        mod: function (v, d) {
          if (isNaN(this.n) || isNaN(this.d)) return new m(NaN);
          if (v === void 0) return s((this.s * this.n) % this.d, 1);
          if ((l(v, d), i.n === 0 && this.d === 0)) throw m.DivisionByZero;
          return s((this.s * (i.d * this.n)) % (i.n * this.d), i.d * this.d);
        },
        gcd: function (v, d) {
          return l(v, d), s(c(i.n, this.n) * c(i.d, this.d), i.d * this.d);
        },
        lcm: function (v, d) {
          return (
            l(v, d),
            i.n === 0 && this.n === 0
              ? s(0, 1)
              : s(i.n * this.n, c(i.n, this.n) * c(i.d, this.d))
          );
        },
        ceil: function (v) {
          return (
            (v = Math.pow(10, v || 0)),
            isNaN(this.n) || isNaN(this.d)
              ? new m(NaN)
              : s(Math.ceil((v * this.s * this.n) / this.d), v)
          );
        },
        floor: function (v) {
          return (
            (v = Math.pow(10, v || 0)),
            isNaN(this.n) || isNaN(this.d)
              ? new m(NaN)
              : s(Math.floor((v * this.s * this.n) / this.d), v)
          );
        },
        round: function (v) {
          return (
            (v = Math.pow(10, v || 0)),
            isNaN(this.n) || isNaN(this.d)
              ? new m(NaN)
              : s(Math.round((v * this.s * this.n) / this.d), v)
          );
        },
        inverse: function () {
          return s(this.s * this.d, this.n);
        },
        pow: function (v, d) {
          if ((l(v, d), i.d === 1))
            return i.s < 0
              ? s(Math.pow(this.s * this.d, i.n), Math.pow(this.n, i.n))
              : s(Math.pow(this.s * this.n, i.n), Math.pow(this.d, i.n));
          if (this.s < 0) return null;
          var N = f(this.n),
            g = f(this.d),
            w = 1,
            h = 1;
          for (var x in N)
            if (x !== "1") {
              if (x === "0") {
                w = 0;
                break;
              }
              if (((N[x] *= i.n), N[x] % i.d === 0)) N[x] /= i.d;
              else return null;
              w *= Math.pow(x, N[x]);
            }
          for (var x in g)
            if (x !== "1") {
              if (((g[x] *= i.n), g[x] % i.d === 0)) g[x] /= i.d;
              else return null;
              h *= Math.pow(x, g[x]);
            }
          return i.s < 0 ? s(h, w) : s(w, h);
        },
        equals: function (v, d) {
          return l(v, d), this.s * this.n * i.d === i.s * i.n * this.d;
        },
        compare: function (v, d) {
          l(v, d);
          var N = this.s * this.n * i.d - i.s * i.n * this.d;
          return (0 < N) - (N < 0);
        },
        simplify: function (v) {
          if (isNaN(this.n) || isNaN(this.d)) return this;
          v = v || 0.001;
          for (
            var d = this.abs(), N = d.toContinued(), g = 1;
            g < N.length;
            g++
          ) {
            for (var w = s(N[g - 1], 1), h = g - 2; h >= 0; h--)
              w = w.inverse().add(N[h]);
            if (w.sub(d).abs().valueOf() < v) return w.mul(this.s);
          }
          return this;
        },
        divisible: function (v, d) {
          return l(v, d), !(!(i.n * this.d) || (this.n * i.d) % (i.n * this.d));
        },
        valueOf: function () {
          return (this.s * this.n) / this.d;
        },
        toFraction: function (v) {
          var d,
            N = "",
            g = this.n,
            w = this.d;
          return (
            this.s < 0 && (N += "-"),
            w === 1
              ? (N += g)
              : (v &&
                  (d = Math.floor(g / w)) > 0 &&
                  ((N += d), (N += " "), (g %= w)),
                (N += g),
                (N += "/"),
                (N += w)),
            N
          );
        },
        toLatex: function (v) {
          var d,
            N = "",
            g = this.n,
            w = this.d;
          return (
            this.s < 0 && (N += "-"),
            w === 1
              ? (N += g)
              : (v && (d = Math.floor(g / w)) > 0 && ((N += d), (g %= w)),
                (N += "\\frac{"),
                (N += g),
                (N += "}{"),
                (N += w),
                (N += "}")),
            N
          );
        },
        toContinued: function () {
          var v,
            d = this.n,
            N = this.d,
            g = [];
          if (isNaN(d) || isNaN(N)) return g;
          do g.push(Math.floor(d / N)), (v = d % N), (d = N), (N = v);
          while (d !== 1);
          return g;
        },
        toString: function (v) {
          var d = this.n,
            N = this.d;
          if (isNaN(d) || isNaN(N)) return "NaN";
          v = v || 15;
          var g = u(d, N),
            w = o(d, N, g),
            h = this.s < 0 ? "-" : "";
          if (((h += (d / N) | 0), (d %= N), (d *= 10), d && (h += "."), g)) {
            for (var x = w; x--; ) (h += (d / N) | 0), (d %= N), (d *= 10);
            h += "(";
            for (var x = g; x--; ) (h += (d / N) | 0), (d %= N), (d *= 10);
            h += ")";
          } else
            for (var x = v; d && x--; ) (h += (d / N) | 0), (d %= N), (d *= 10);
          return h;
        },
      }),
      Object.defineProperty(m, "__esModule", { value: !0 }),
      (m.default = m),
      (m.Fraction = m),
      (e.exports = m);
  })();
})(N0);
var oi = Eh(N0.exports),
  wM = "Fraction",
  bM = [],
  NM = F(
    wM,
    bM,
    () => (
      (oi.prototype.type = "Fraction"),
      (oi.prototype.isFraction = !0),
      (oi.prototype.toJSON = function () {
        return { mathjs: "Fraction", n: this.s * this.n, d: this.d };
      }),
      (oi.fromJSON = function (e) {
        return new oi(e);
      }),
      oi
    ),
    { isClass: !0 }
  ),
  MM = "Range",
  SM = [],
  AM = F(
    MM,
    SM,
    () => {
      function e(r, t, n) {
        if (!(this instanceof e))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        var i = r != null,
          a = t != null,
          s = n != null;
        if (i) {
          if (Be(r)) r = r.toNumber();
          else if (typeof r != "number")
            throw new TypeError("Parameter start must be a number");
        }
        if (a) {
          if (Be(t)) t = t.toNumber();
          else if (typeof t != "number")
            throw new TypeError("Parameter end must be a number");
        }
        if (s) {
          if (Be(n)) n = n.toNumber();
          else if (typeof n != "number")
            throw new TypeError("Parameter step must be a number");
        }
        (this.start = i ? parseFloat(r) : 0),
          (this.end = a ? parseFloat(t) : 0),
          (this.step = s ? parseFloat(n) : 1);
      }
      return (
        (e.prototype.type = "Range"),
        (e.prototype.isRange = !0),
        (e.parse = function (r) {
          if (typeof r != "string") return null;
          var t = r.split(":"),
            n = t.map(function (a) {
              return parseFloat(a);
            }),
            i = n.some(function (a) {
              return isNaN(a);
            });
          if (i) return null;
          switch (n.length) {
            case 2:
              return new e(n[0], n[1]);
            case 3:
              return new e(n[0], n[2], n[1]);
            default:
              return null;
          }
        }),
        (e.prototype.clone = function () {
          return new e(this.start, this.end, this.step);
        }),
        (e.prototype.size = function () {
          var r = 0,
            t = this.start,
            n = this.step,
            i = this.end,
            a = i - t;
          return (
            pn(n) === pn(a) ? (r = Math.ceil(a / n)) : a === 0 && (r = 0),
            isNaN(r) && (r = 0),
            [r]
          );
        }),
        (e.prototype.min = function () {
          var r = this.size()[0];
          if (r > 0)
            return this.step > 0
              ? this.start
              : this.start + (r - 1) * this.step;
        }),
        (e.prototype.max = function () {
          var r = this.size()[0];
          if (r > 0)
            return this.step > 0
              ? this.start + (r - 1) * this.step
              : this.start;
        }),
        (e.prototype.forEach = function (r) {
          var t = this.start,
            n = this.step,
            i = this.end,
            a = 0;
          if (n > 0) for (; t < i; ) r(t, [a], this), (t += n), a++;
          else if (n < 0) for (; t > i; ) r(t, [a], this), (t += n), a++;
        }),
        (e.prototype.map = function (r) {
          var t = [];
          return (
            this.forEach(function (n, i, a) {
              t[i[0]] = r(n, i, a);
            }),
            t
          );
        }),
        (e.prototype.toArray = function () {
          var r = [];
          return (
            this.forEach(function (t, n) {
              r[n[0]] = t;
            }),
            r
          );
        }),
        (e.prototype.valueOf = function () {
          return this.toArray();
        }),
        (e.prototype.format = function (r) {
          var t = Hn(this.start, r);
          return (
            this.step !== 1 && (t += ":" + Hn(this.step, r)),
            (t += ":" + Hn(this.end, r)),
            t
          );
        }),
        (e.prototype.toString = function () {
          return this.format();
        }),
        (e.prototype.toJSON = function () {
          return {
            mathjs: "Range",
            start: this.start,
            end: this.end,
            step: this.step,
          };
        }),
        (e.fromJSON = function (r) {
          return new e(r.start, r.end, r.step);
        }),
        e
      );
    },
    { isClass: !0 }
  ),
  EM = "Matrix",
  CM = [],
  OM = F(
    EM,
    CM,
    () => {
      function e() {
        if (!(this instanceof e))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
      }
      return (
        (e.prototype.type = "Matrix"),
        (e.prototype.isMatrix = !0),
        (e.prototype.storage = function () {
          throw new Error("Cannot invoke storage on a Matrix interface");
        }),
        (e.prototype.datatype = function () {
          throw new Error("Cannot invoke datatype on a Matrix interface");
        }),
        (e.prototype.create = function (r, t) {
          throw new Error("Cannot invoke create on a Matrix interface");
        }),
        (e.prototype.subset = function (r, t, n) {
          throw new Error("Cannot invoke subset on a Matrix interface");
        }),
        (e.prototype.get = function (r) {
          throw new Error("Cannot invoke get on a Matrix interface");
        }),
        (e.prototype.set = function (r, t, n) {
          throw new Error("Cannot invoke set on a Matrix interface");
        }),
        (e.prototype.resize = function (r, t) {
          throw new Error("Cannot invoke resize on a Matrix interface");
        }),
        (e.prototype.reshape = function (r, t) {
          throw new Error("Cannot invoke reshape on a Matrix interface");
        }),
        (e.prototype.clone = function () {
          throw new Error("Cannot invoke clone on a Matrix interface");
        }),
        (e.prototype.size = function () {
          throw new Error("Cannot invoke size on a Matrix interface");
        }),
        (e.prototype.map = function (r, t) {
          throw new Error("Cannot invoke map on a Matrix interface");
        }),
        (e.prototype.forEach = function (r) {
          throw new Error("Cannot invoke forEach on a Matrix interface");
        }),
        (e.prototype[Symbol.iterator] = function () {
          throw new Error("Cannot iterate a Matrix interface");
        }),
        (e.prototype.toArray = function () {
          throw new Error("Cannot invoke toArray on a Matrix interface");
        }),
        (e.prototype.valueOf = function () {
          throw new Error("Cannot invoke valueOf on a Matrix interface");
        }),
        (e.prototype.format = function (r) {
          throw new Error("Cannot invoke format on a Matrix interface");
        }),
        (e.prototype.toString = function () {
          throw new Error("Cannot invoke toString on a Matrix interface");
        }),
        e
      );
    },
    { isClass: !0 }
  ),
  TM = "DenseMatrix",
  DM = ["Matrix"],
  _M = F(
    TM,
    DM,
    (e) => {
      var { Matrix: r } = e;
      function t(u, o) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (o && !$r(o)) throw new Error("Invalid datatype: " + o);
        if (Ae(u))
          u.type === "DenseMatrix"
            ? ((this._data = Me(u._data)),
              (this._size = Me(u._size)),
              (this._datatype = o || u._datatype))
            : ((this._data = u.toArray()),
              (this._size = u.size()),
              (this._datatype = o || u._datatype));
        else if (u && He(u.data) && He(u.size))
          (this._data = u.data),
            (this._size = u.size),
            wp(this._data, this._size),
            (this._datatype = o || u.datatype);
        else if (He(u))
          (this._data = p(u)),
            (this._size = Ie(this._data)),
            wp(this._data, this._size),
            (this._datatype = o);
        else {
          if (u)
            throw new TypeError("Unsupported type of data (" + Ye(u) + ")");
          (this._data = []), (this._size = [0]), (this._datatype = o);
        }
      }
      (t.prototype = new r()),
        (t.prototype.createDenseMatrix = function (u, o) {
          return new t(u, o);
        }),
        (t.prototype.type = "DenseMatrix"),
        (t.prototype.isDenseMatrix = !0),
        (t.prototype.getDataType = function () {
          return Ga(this._data, Ye);
        }),
        (t.prototype.storage = function () {
          return "dense";
        }),
        (t.prototype.datatype = function () {
          return this._datatype;
        }),
        (t.prototype.create = function (u, o) {
          return new t(u, o);
        }),
        (t.prototype.subset = function (u, o, c) {
          switch (arguments.length) {
            case 1:
              return n(this, u);
            case 2:
            case 3:
              return a(this, u, o, c);
            default:
              throw new SyntaxError("Wrong number of arguments");
          }
        }),
        (t.prototype.get = function (u) {
          if (!He(u)) throw new TypeError("Array expected");
          if (u.length !== this._size.length)
            throw new De(u.length, this._size.length);
          for (var o = 0; o < u.length; o++) We(u[o], this._size[o]);
          for (var c = this._data, m = 0, v = u.length; m < v; m++) {
            var d = u[m];
            We(d, c.length), (c = c[d]);
          }
          return c;
        }),
        (t.prototype.set = function (u, o, c) {
          if (!He(u)) throw new TypeError("Array expected");
          if (u.length < this._size.length)
            throw new De(u.length, this._size.length, "<");
          var m,
            v,
            d,
            N = u.map(function (w) {
              return w + 1;
            });
          l(this, N, c);
          var g = this._data;
          for (m = 0, v = u.length - 1; m < v; m++)
            (d = u[m]), We(d, g.length), (g = g[d]);
          return (d = u[u.length - 1]), We(d, g.length), (g[d] = o), this;
        });
      function n(u, o) {
        if (!Zi(o)) throw new TypeError("Invalid index");
        var c = o.isScalar();
        if (c) return u.get(o.min());
        var m = o.size();
        if (m.length !== u._size.length) throw new De(m.length, u._size.length);
        for (
          var v = o.min(), d = o.max(), N = 0, g = u._size.length;
          N < g;
          N++
        )
          We(v[N], u._size[N]), We(d[N], u._size[N]);
        return new t(i(u._data, o, m.length, 0), u._datatype);
      }
      function i(u, o, c, m) {
        var v = m === c - 1,
          d = o.dimension(m);
        return v
          ? d
              .map(function (N) {
                return We(N, u.length), u[N];
              })
              .valueOf()
          : d
              .map(function (N) {
                We(N, u.length);
                var g = u[N];
                return i(g, o, c, m + 1);
              })
              .valueOf();
      }
      function a(u, o, c, m) {
        if (!o || o.isIndex !== !0) throw new TypeError("Invalid index");
        var v = o.size(),
          d = o.isScalar(),
          N;
        if ((Ae(c) ? ((N = c.size()), (c = c.valueOf())) : (N = Ie(c)), d)) {
          if (N.length !== 0) throw new TypeError("Scalar expected");
          u.set(o.min(), c, m);
        } else {
          if (v.length < u._size.length)
            throw new De(v.length, u._size.length, "<");
          if (N.length < v.length) {
            for (var g = 0, w = 0; v[g] === 1 && N[g] === 1; ) g++;
            for (; v[g] === 1; ) w++, g++;
            c = i0(c, v.length, w, N);
          }
          if (!Va(v, N)) throw new De(v, N, ">");
          var h = o.max().map(function (y) {
            return y + 1;
          });
          l(u, h, m);
          var x = v.length,
            b = 0;
          s(u._data, o, c, x, b);
        }
        return u;
      }
      function s(u, o, c, m, v) {
        var d = v === m - 1,
          N = o.dimension(v);
        d
          ? N.forEach(function (g, w) {
              We(g), (u[g] = c[w[0]]);
            })
          : N.forEach(function (g, w) {
              We(g), s(u[g], o, c[w[0]], m, v + 1);
            });
      }
      t.prototype.resize = function (u, o, c) {
        if (!Jn(u)) throw new TypeError("Array or Matrix expected");
        var m = u
            .valueOf()
            .map((d) => (Array.isArray(d) && d.length === 1 ? d[0] : d)),
          v = c ? this.clone() : this;
        return f(v, m, o);
      };
      function f(u, o, c) {
        if (o.length === 0) {
          for (var m = u._data; He(m); ) m = m[0];
          return m;
        }
        return (u._size = o.slice(0)), (u._data = Li(u._data, u._size, c)), u;
      }
      t.prototype.reshape = function (u, o) {
        var c = o ? this.clone() : this;
        c._data = r0(c._data, u);
        var m = c._size.reduce((v, d) => v * d);
        return (c._size = Lc(u, m)), c;
      };
      function l(u, o, c) {
        for (var m = u._size.slice(0), v = !1; m.length < o.length; )
          m.push(0), (v = !0);
        for (var d = 0, N = o.length; d < N; d++)
          o[d] > m[d] && ((m[d] = o[d]), (v = !0));
        v && f(u, m, c);
      }
      (t.prototype.clone = function () {
        var u = new t({
          data: Me(this._data),
          size: Me(this._size),
          datatype: this._datatype,
        });
        return u;
      }),
        (t.prototype.size = function () {
          return this._size.slice(0);
        }),
        (t.prototype.map = function (u) {
          var o = this,
            c = function d(N, g) {
              return He(N)
                ? N.map(function (w, h) {
                    return d(w, g.concat(h));
                  })
                : u(N, g, o);
            },
            m = c(this._data, []),
            v = this._datatype !== void 0 ? Ga(m, Ye) : void 0;
          return new t(m, v);
        }),
        (t.prototype.forEach = function (u) {
          var o = this,
            c = function m(v, d) {
              He(v)
                ? v.forEach(function (N, g) {
                    m(N, d.concat(g));
                  })
                : u(v, d, o);
            };
          c(this._data, []);
        }),
        (t.prototype[Symbol.iterator] = function* () {
          var u = function* o(c, m) {
            if (He(c))
              for (var v = 0; v < c.length; v++) yield* o(c[v], m.concat(v));
            else yield { value: c, index: m };
          };
          yield* u(this._data, []);
        }),
        (t.prototype.rows = function () {
          var u = [],
            o = this.size();
          if (o.length !== 2)
            throw new TypeError("Rows can only be returned for a 2D matrix.");
          var c = this._data;
          for (var m of c) u.push(new t([m], this._datatype));
          return u;
        }),
        (t.prototype.columns = function () {
          var u = this,
            o = [],
            c = this.size();
          if (c.length !== 2)
            throw new TypeError("Rows can only be returned for a 2D matrix.");
          for (
            var m = this._data,
              v = function (g) {
                var w = m.map((h) => [h[g]]);
                o.push(new t(w, u._datatype));
              },
              d = 0;
            d < c[1];
            d++
          )
            v(d);
          return o;
        }),
        (t.prototype.toArray = function () {
          return Me(this._data);
        }),
        (t.prototype.valueOf = function () {
          return this._data;
        }),
        (t.prototype.format = function (u) {
          return _e(this._data, u);
        }),
        (t.prototype.toString = function () {
          return _e(this._data);
        }),
        (t.prototype.toJSON = function () {
          return {
            mathjs: "DenseMatrix",
            data: this._data,
            size: this._size,
            datatype: this._datatype,
          };
        }),
        (t.prototype.diagonal = function (u) {
          if (u) {
            if ((Be(u) && (u = u.toNumber()), !$e(u) || !Ne(u)))
              throw new TypeError("The parameter k must be an integer number");
          } else u = 0;
          for (
            var o = u > 0 ? u : 0,
              c = u < 0 ? -u : 0,
              m = this._size[0],
              v = this._size[1],
              d = Math.min(m - c, v - o),
              N = [],
              g = 0;
            g < d;
            g++
          )
            N[g] = this._data[g + c][g + o];
          return new t({ data: N, size: [d], datatype: this._datatype });
        }),
        (t.diagonal = function (u, o, c, m) {
          if (!He(u)) throw new TypeError("Array expected, size parameter");
          if (u.length !== 2)
            throw new Error("Only two dimensions matrix are supported");
          if (
            ((u = u.map(function (A) {
              if ((Be(A) && (A = A.toNumber()), !$e(A) || !Ne(A) || A < 1))
                throw new Error("Size values must be positive integers");
              return A;
            })),
            c)
          ) {
            if ((Be(c) && (c = c.toNumber()), !$e(c) || !Ne(c)))
              throw new TypeError("The parameter k must be an integer number");
          } else c = 0;
          var v = c > 0 ? c : 0,
            d = c < 0 ? -c : 0,
            N = u[0],
            g = u[1],
            w = Math.min(N - d, g - v),
            h;
          if (He(o)) {
            if (o.length !== w) throw new Error("Invalid value array length");
            h = function (S) {
              return o[S];
            };
          } else if (Ae(o)) {
            var x = o.size();
            if (x.length !== 1 || x[0] !== w)
              throw new Error("Invalid matrix length");
            h = function (S) {
              return o.get([S]);
            };
          } else
            h = function () {
              return o;
            };
          m || (m = Be(h(0)) ? h(0).mul(0) : 0);
          var b = [];
          if (u.length > 0) {
            b = Li(b, u, m);
            for (var y = 0; y < w; y++) b[y + d][y + v] = h(y);
          }
          return new t({ data: b, size: [N, g] });
        }),
        (t.fromJSON = function (u) {
          return new t(u);
        }),
        (t.prototype.swapRows = function (u, o) {
          if (!$e(u) || !Ne(u) || !$e(o) || !Ne(o))
            throw new Error("Row index must be positive integers");
          if (this._size.length !== 2)
            throw new Error("Only two dimensional matrix is supported");
          return (
            We(u, this._size[0]),
            We(o, this._size[0]),
            t._swapRows(u, o, this._data),
            this
          );
        }),
        (t._swapRows = function (u, o, c) {
          var m = c[u];
          (c[u] = c[o]), (c[o] = m);
        });
      function p(u) {
        for (var o = 0, c = u.length; o < c; o++) {
          var m = u[o];
          He(m)
            ? (u[o] = p(m))
            : m && m.isMatrix === !0 && (u[o] = p(m.valueOf()));
        }
        return u;
      }
      return t;
    },
    { isClass: !0 }
  ),
  Cp = "clone",
  BM = ["typed"],
  IM = F(Cp, BM, (e) => {
    var { typed: r } = e;
    return r(Cp, { any: Me });
  });
function M0(e) {
  var r = e.length,
    t = e[0].length,
    n,
    i,
    a = [];
  for (i = 0; i < t; i++) {
    var s = [];
    for (n = 0; n < r; n++) s.push(e[n][i]);
    a.push(s);
  }
  return a;
}
function Xi(e) {
  for (var r = 0; r < e.length; r++) if (Jn(e[r])) return !0;
  return !1;
}
function Jt(e, r) {
  Ae(e) && (e = e.valueOf());
  for (var t = 0, n = e.length; t < n; t++) {
    var i = e[t];
    Array.isArray(i) ? Jt(i, r) : r(i);
  }
}
function ye(e, r, t) {
  return e && typeof e.map == "function"
    ? e.map(function (n) {
        return ye(n, r);
      })
    : r(e);
}
function Ws(e, r, t) {
  var n = Array.isArray(e) ? Ie(e) : e.size();
  if (r < 0 || r >= n.length) throw new vt(r, n.length);
  return Ae(e) ? e.create(hs(e.valueOf(), r, t)) : hs(e, r, t);
}
function hs(e, r, t) {
  var n, i, a, s;
  if (r <= 0)
    if (Array.isArray(e[0])) {
      for (s = M0(e), i = [], n = 0; n < s.length; n++)
        i[n] = hs(s[n], r - 1, t);
      return i;
    } else {
      for (a = e[0], n = 1; n < e.length; n++) a = t(a, e[n]);
      return a;
    }
  else {
    for (i = [], n = 0; n < e.length; n++) i[n] = hs(e[n], r - 1, t);
    return i;
  }
}
function Op(e, r, t, n, i, a, s, f, l, p, u) {
  var o = e._values,
    c = e._index,
    m = e._ptr,
    v,
    d,
    N,
    g;
  if (n)
    for (d = m[r], N = m[r + 1], v = d; v < N; v++)
      (g = c[v]),
        t[g] !== a
          ? ((t[g] = a),
            s.push(g),
            p
              ? ((n[g] = l ? f(o[v], u) : f(u, o[v])), (i[g] = a))
              : (n[g] = o[v]))
          : ((n[g] = l ? f(o[v], n[g]) : f(n[g], o[v])), (i[g] = a));
  else
    for (d = m[r], N = m[r + 1], v = d; v < N; v++)
      (g = c[v]), t[g] !== a ? ((t[g] = a), s.push(g)) : (i[g] = a);
}
var Tp = "isInteger",
  $M = ["typed"],
  zM = F(Tp, $M, (e) => {
    var { typed: r } = e;
    return r(Tp, {
      number: Ne,
      BigNumber: function (n) {
        return n.isInt();
      },
      Fraction: function (n) {
        return n.d === 1 && isFinite(n.n);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  At = "number",
  ei = "number, number";
function S0(e) {
  return Math.abs(e);
}
S0.signature = At;
function A0(e, r) {
  return e + r;
}
A0.signature = ei;
function E0(e, r) {
  return e * r;
}
E0.signature = ei;
function C0(e) {
  return -e;
}
C0.signature = At;
function O0(e) {
  return e;
}
O0.signature = At;
function va(e) {
  return qb(e);
}
va.signature = At;
function T0(e) {
  return e * e * e;
}
T0.signature = At;
function D0(e) {
  return Math.exp(e);
}
D0.signature = At;
function _0(e) {
  return Hb(e);
}
_0.signature = At;
function B0(e, r) {
  if (!Ne(e) || !Ne(r))
    throw new Error("Parameters in function gcd must be integer numbers");
  for (var t; r !== 0; ) (t = e % r), (e = r), (r = t);
  return e < 0 ? -e : e;
}
B0.signature = ei;
function I0(e, r) {
  if (!Ne(e) || !Ne(r))
    throw new Error("Parameters in function lcm must be integer numbers");
  if (e === 0 || r === 0) return 0;
  for (var t, n = e * r; r !== 0; ) (t = r), (r = e % t), (e = t);
  return Math.abs(n / e);
}
I0.signature = ei;
function RM(e, r) {
  return r ? Math.log(e) / Math.log(r) : Math.log(e);
}
function $0(e) {
  return kb(e);
}
$0.signature = At;
function z0(e) {
  return Lb(e);
}
z0.signature = At;
function R0(e, r) {
  if (r > 0) return e - r * Math.floor(e / r);
  if (r === 0) return e;
  throw new Error("Cannot calculate mod for a negative divisor");
}
R0.signature = ei;
function Dp(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2,
    t = r < 0;
  if ((t && (r = -r), r === 0)) throw new Error("Root must be non-zero");
  if (e < 0 && Math.abs(r) % 2 !== 1)
    throw new Error("Root must be odd when a is negative.");
  if (e === 0) return t ? 1 / 0 : 0;
  if (!isFinite(e)) return t ? 0 : e;
  var n = Math.pow(Math.abs(e), 1 / r);
  return (n = e < 0 ? -n : n), t ? 1 / n : n;
}
function $l(e) {
  return pn(e);
}
$l.signature = At;
function F0(e) {
  return e * e;
}
F0.signature = At;
function P0(e, r) {
  var t,
    n,
    i,
    a = 0,
    s = 1,
    f = 1,
    l = 0;
  if (!Ne(e) || !Ne(r))
    throw new Error("Parameters in function xgcd must be integer numbers");
  for (; r; )
    (n = Math.floor(e / r)),
      (i = e - n * r),
      (t = a),
      (a = s - n * a),
      (s = t),
      (t = f),
      (f = l - n * f),
      (l = t),
      (e = r),
      (r = i);
  var p;
  return e < 0 ? (p = [-e, -s, -l]) : (p = [e, e ? s : 0, l]), p;
}
P0.signature = ei;
function L0(e, r) {
  return (e * e < 1 && r === 1 / 0) || (e * e > 1 && r === -1 / 0)
    ? 0
    : Math.pow(e, r);
}
L0.signature = ei;
function _p(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  if (!Ne(r) || r < 0 || r > 15)
    throw new Error(
      "Number of decimals in function round must be an integer from 0 to 15 inclusive"
    );
  return parseFloat(jy(e, r));
}
var FM = "number",
  ji = "number, number";
function k0(e, r) {
  if (!Ne(e) || !Ne(r)) throw new Error("Integers expected in function bitAnd");
  return e & r;
}
k0.signature = ji;
function U0(e) {
  if (!Ne(e)) throw new Error("Integer expected in function bitNot");
  return ~e;
}
U0.signature = FM;
function q0(e, r) {
  if (!Ne(e) || !Ne(r)) throw new Error("Integers expected in function bitOr");
  return e | r;
}
q0.signature = ji;
function H0(e, r) {
  if (!Ne(e) || !Ne(r)) throw new Error("Integers expected in function bitXor");
  return e ^ r;
}
H0.signature = ji;
function V0(e, r) {
  if (!Ne(e) || !Ne(r))
    throw new Error("Integers expected in function leftShift");
  return e << r;
}
V0.signature = ji;
function G0(e, r) {
  if (!Ne(e) || !Ne(r))
    throw new Error("Integers expected in function rightArithShift");
  return e >> r;
}
G0.signature = ji;
function W0(e, r) {
  if (!Ne(e) || !Ne(r))
    throw new Error("Integers expected in function rightLogShift");
  return e >>> r;
}
W0.signature = ji;
function Gt(e, r) {
  if (r < e) return 1;
  if (r === e) return r;
  var t = (r + e) >> 1;
  return Gt(e, t) * Gt(t + 1, r);
}
function Z0(e, r) {
  if (!Ne(e) || e < 0)
    throw new TypeError(
      "Positive integer value expected in function combinations"
    );
  if (!Ne(r) || r < 0)
    throw new TypeError(
      "Positive integer value expected in function combinations"
    );
  if (r > e) throw new TypeError("k must be less than or equal to n");
  for (
    var t = e - r,
      n = 1,
      i = r < t ? t + 1 : r + 1,
      a = 2,
      s = r < t ? r : t,
      f = i;
    f <= e;
    ++f
  )
    for (n *= f; a <= s && n % a === 0; ) (n /= a), ++a;
  return a <= s && (n /= Gt(a, s)), n;
}
Z0.signature = "number, number";
var PM = Math.PI,
  LM = 2 * Math.PI,
  kM = Math.E,
  UM = 1.618033988749895,
  qM = "number",
  Gc = "number, number";
function Q0(e) {
  return !e;
}
Q0.signature = qM;
function Y0(e, r) {
  return !!(e || r);
}
Y0.signature = Gc;
function X0(e, r) {
  return !!e != !!r;
}
X0.signature = Gc;
function j0(e, r) {
  return !!(e && r);
}
j0.signature = Gc;
function Wc(e) {
  var r;
  if (Ne(e))
    return e <= 0
      ? isFinite(e)
        ? 1 / 0
        : NaN
      : e > 171
      ? 1 / 0
      : Gt(1, e - 1);
  if (e < 0.5) return Math.PI / (Math.sin(Math.PI * e) * Wc(1 - e));
  if (e >= 171.35) return 1 / 0;
  if (e > 85) {
    var t = e * e,
      n = t * e,
      i = n * e,
      a = i * e;
    return (
      Math.sqrt((2 * Math.PI) / e) *
      Math.pow(e / Math.E, e) *
      (1 +
        1 / (12 * e) +
        1 / (288 * t) -
        139 / (51840 * n) -
        571 / (2488320 * i) +
        163879 / (209018880 * a) +
        5246819 / (75246796800 * a * e))
    );
  }
  --e, (r = Di[0]);
  for (var s = 1; s < Di.length; ++s) r += Di[s] / (e + s);
  var f = e + J0 + 0.5;
  return Math.sqrt(2 * Math.PI) * Math.pow(f, e + 0.5) * Math.exp(-f) * r;
}
Wc.signature = "number";
var J0 = 4.7421875,
  Di = [
    0.9999999999999971, 57.15623566586292, -59.59796035547549,
    14.136097974741746, -0.4919138160976202, 3399464998481189e-20,
    4652362892704858e-20, -9837447530487956e-20, 0.0001580887032249125,
    -0.00021026444172410488, 0.00021743961811521265, -0.0001643181065367639,
    8441822398385275e-20, -26190838401581408e-21, 36899182659531625e-22,
  ],
  K0 = 0.9189385332046728,
  HM = 5,
  VM = 7,
  Bp = [
    1.000000000190015, 76.18009172947146, -86.50532032941678, 24.01409824083091,
    -1.231739572450155, 0.001208650973866179, -5395239384953e-18,
  ];
function gs(e) {
  if (e < 0) return NaN;
  if (e === 0) return 1 / 0;
  if (!isFinite(e)) return e;
  if (e < 0.5) return Math.log(Math.PI / Math.sin(Math.PI * e)) - gs(1 - e);
  e = e - 1;
  for (var r = e + HM + 0.5, t = Bp[0], n = VM - 1; n >= 1; n--)
    t += Bp[n] / (e + n);
  return K0 + (e + 0.5) * Math.log(r) - r + Math.log(t);
}
gs.signature = "number";
var _r = "number";
function e1(e) {
  return Qb(e);
}
e1.signature = _r;
function r1(e) {
  return Math.atan(1 / e);
}
r1.signature = _r;
function t1(e) {
  return isFinite(e) ? (Math.log((e + 1) / e) + Math.log(e / (e - 1))) / 2 : 0;
}
t1.signature = _r;
function n1(e) {
  return Math.asin(1 / e);
}
n1.signature = _r;
function i1(e) {
  var r = 1 / e;
  return Math.log(r + Math.sqrt(r * r + 1));
}
i1.signature = _r;
function a1(e) {
  return Math.acos(1 / e);
}
a1.signature = _r;
function o1(e) {
  var r = 1 / e,
    t = Math.sqrt(r * r - 1);
  return Math.log(t + r);
}
o1.signature = _r;
function s1(e) {
  return Yb(e);
}
s1.signature = _r;
function u1(e) {
  return Xb(e);
}
u1.signature = _r;
function l1(e) {
  return 1 / Math.tan(e);
}
l1.signature = _r;
function c1(e) {
  var r = Math.exp(2 * e);
  return (r + 1) / (r - 1);
}
c1.signature = _r;
function f1(e) {
  return 1 / Math.sin(e);
}
f1.signature = _r;
function p1(e) {
  return e === 0
    ? Number.POSITIVE_INFINITY
    : Math.abs(2 / (Math.exp(e) - Math.exp(-e))) * pn(e);
}
p1.signature = _r;
function m1(e) {
  return 1 / Math.cos(e);
}
m1.signature = _r;
function v1(e) {
  return 2 / (Math.exp(e) + Math.exp(-e));
}
v1.signature = _r;
function d1(e) {
  return Jb(e);
}
d1.signature = _r;
var Zs = "number";
function h1(e) {
  return e < 0;
}
h1.signature = Zs;
function g1(e) {
  return e > 0;
}
g1.signature = Zs;
function y1(e) {
  return e === 0;
}
y1.signature = Zs;
function x1(e) {
  return Number.isNaN(e);
}
x1.signature = Zs;
var Ip = "isNegative",
  GM = ["typed"],
  WM = F(Ip, GM, (e) => {
    var { typed: r } = e;
    return r(Ip, {
      number: h1,
      BigNumber: function (n) {
        return n.isNeg() && !n.isZero() && !n.isNaN();
      },
      Fraction: function (n) {
        return n.s < 0;
      },
      Unit: function (n) {
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  $p = "isNumeric",
  ZM = ["typed"],
  QM = F($p, ZM, (e) => {
    var { typed: r } = e;
    return r($p, {
      "number | BigNumber | Fraction | boolean": function () {
        return !0;
      },
      "Complex | Unit | string | null | undefined | Node": function () {
        return !1;
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  zp = "hasNumericValue",
  YM = ["typed", "isNumeric"],
  XM = F(zp, YM, (e) => {
    var { typed: r, isNumeric: t } = e;
    return r(zp, {
      string: function (i) {
        return i.trim().length > 0 && !isNaN(Number(i));
      },
      any: function (i) {
        return t(i);
      },
    });
  }),
  Rp = "isPositive",
  jM = ["typed"],
  JM = F(Rp, jM, (e) => {
    var { typed: r } = e;
    return r(Rp, {
      number: g1,
      BigNumber: function (n) {
        return !n.isNeg() && !n.isZero() && !n.isNaN();
      },
      Fraction: function (n) {
        return n.s > 0 && n.n > 0;
      },
      Unit: function (n) {
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Fp = "isZero",
  KM = ["typed"],
  e2 = F(Fp, KM, (e) => {
    var { typed: r } = e;
    return r(Fp, {
      number: y1,
      BigNumber: function (n) {
        return n.isZero();
      },
      Complex: function (n) {
        return n.re === 0 && n.im === 0;
      },
      Fraction: function (n) {
        return n.d === 1 && n.n === 0;
      },
      Unit: function (n) {
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Pp = "isNaN",
  r2 = ["typed"],
  t2 = F(Pp, r2, (e) => {
    var { typed: r } = e;
    return r(Pp, {
      number: x1,
      BigNumber: function (n) {
        return n.isNaN();
      },
      Fraction: function (n) {
        return !1;
      },
      Complex: function (n) {
        return n.isNaN();
      },
      Unit: function (n) {
        return Number.isNaN(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, Number.isNaN);
      },
    });
  }),
  Lp = "typeOf",
  n2 = ["typed"],
  i2 = F(Lp, n2, (e) => {
    var { typed: r } = e;
    return r(Lp, { any: Ye });
  });
function zt(e, r, t) {
  if (t == null) return e.eq(r);
  if (e.eq(r)) return !0;
  if (e.isNaN() || r.isNaN()) return !1;
  if (e.isFinite() && r.isFinite()) {
    var n = e.minus(r).abs();
    if (n.isZero()) return !0;
    var i = e.constructor.max(e.abs(), r.abs());
    return n.lte(i.times(t));
  }
  return !1;
}
function a2(e, r, t) {
  return rt(e.re, r.re, t) && rt(e.im, r.im, t);
}
var ys = "equalScalar",
  o2 = ["typed", "config"],
  s2 = F(ys, o2, (e) => {
    var { typed: r, config: t } = e;
    return r(ys, {
      "boolean, boolean": function (i, a) {
        return i === a;
      },
      "number, number": function (i, a) {
        return rt(i, a, t.epsilon);
      },
      "BigNumber, BigNumber": function (i, a) {
        return i.eq(a) || zt(i, a, t.epsilon);
      },
      "Fraction, Fraction": function (i, a) {
        return i.equals(a);
      },
      "Complex, Complex": function (i, a) {
        return a2(i, a, t.epsilon);
      },
      "Unit, Unit": function (i, a) {
        if (!i.equalBase(a))
          throw new Error("Cannot compare units with different base");
        return this(i.value, a.value);
      },
    });
  });
F(ys, ["typed", "config"], (e) => {
  var { typed: r, config: t } = e;
  return r(ys, {
    "number, number": function (i, a) {
      return rt(i, a, t.epsilon);
    },
  });
});
var u2 = "SparseMatrix",
  l2 = ["typed", "equalScalar", "Matrix"],
  c2 = F(
    u2,
    l2,
    (e) => {
      var { typed: r, equalScalar: t, Matrix: n } = e;
      function i(d, N) {
        if (!(this instanceof i))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (N && !$r(N)) throw new Error("Invalid datatype: " + N);
        if (Ae(d)) a(this, d, N);
        else if (d && He(d.index) && He(d.ptr) && He(d.size))
          (this._values = d.values),
            (this._index = d.index),
            (this._ptr = d.ptr),
            (this._size = d.size),
            (this._datatype = N || d.datatype);
        else if (He(d)) s(this, d, N);
        else {
          if (d)
            throw new TypeError("Unsupported type of data (" + Ye(d) + ")");
          (this._values = []),
            (this._index = []),
            (this._ptr = [0]),
            (this._size = [0, 0]),
            (this._datatype = N);
        }
      }
      function a(d, N, g) {
        N.type === "SparseMatrix"
          ? ((d._values = N._values ? Me(N._values) : void 0),
            (d._index = Me(N._index)),
            (d._ptr = Me(N._ptr)),
            (d._size = Me(N._size)),
            (d._datatype = g || N._datatype))
          : s(d, N.valueOf(), g || N._datatype);
      }
      function s(d, N, g) {
        (d._values = []), (d._index = []), (d._ptr = []), (d._datatype = g);
        var w = N.length,
          h = 0,
          x = t,
          b = 0;
        if (
          ($r(g) && ((x = r.find(t, [g, g]) || t), (b = r.convert(0, g))),
          w > 0)
        ) {
          var y = 0;
          do {
            d._ptr.push(d._index.length);
            for (var A = 0; A < w; A++) {
              var S = N[A];
              if (He(S)) {
                if ((y === 0 && h < S.length && (h = S.length), y < S.length)) {
                  var E = S[y];
                  x(E, b) || (d._values.push(E), d._index.push(A));
                }
              } else
                y === 0 && h < 1 && (h = 1),
                  x(S, b) || (d._values.push(S), d._index.push(A));
            }
            y++;
          } while (y < h);
        }
        d._ptr.push(d._index.length), (d._size = [w, h]);
      }
      (i.prototype = new n()),
        (i.prototype.createSparseMatrix = function (d, N) {
          return new i(d, N);
        }),
        (i.prototype.type = "SparseMatrix"),
        (i.prototype.isSparseMatrix = !0),
        (i.prototype.getDataType = function () {
          return Ga(this._values, Ye);
        }),
        (i.prototype.storage = function () {
          return "sparse";
        }),
        (i.prototype.datatype = function () {
          return this._datatype;
        }),
        (i.prototype.create = function (d, N) {
          return new i(d, N);
        }),
        (i.prototype.density = function () {
          var d = this._size[0],
            N = this._size[1];
          return d !== 0 && N !== 0 ? this._index.length / (d * N) : 0;
        }),
        (i.prototype.subset = function (d, N, g) {
          if (!this._values)
            throw new Error("Cannot invoke subset on a Pattern only matrix");
          switch (arguments.length) {
            case 1:
              return f(this, d);
            case 2:
            case 3:
              return l(this, d, N, g);
            default:
              throw new SyntaxError("Wrong number of arguments");
          }
        });
      function f(d, N) {
        if (!Zi(N)) throw new TypeError("Invalid index");
        var g = N.isScalar();
        if (g) return d.get(N.min());
        var w = N.size();
        if (w.length !== d._size.length) throw new De(w.length, d._size.length);
        var h,
          x,
          b,
          y,
          A = N.min(),
          S = N.max();
        for (h = 0, x = d._size.length; h < x; h++)
          We(A[h], d._size[h]), We(S[h], d._size[h]);
        var E = d._values,
          M = d._index,
          _ = d._ptr,
          C = N.dimension(0),
          I = N.dimension(1),
          L = [],
          $ = [];
        C.forEach(function (T, P) {
          ($[T] = P[0]), (L[T] = !0);
        });
        var D = E ? [] : void 0,
          B = [],
          R = [];
        return (
          I.forEach(function (T) {
            for (R.push(B.length), b = _[T], y = _[T + 1]; b < y; b++)
              (h = M[b]), L[h] === !0 && (B.push($[h]), D && D.push(E[b]));
          }),
          R.push(B.length),
          new i({ values: D, index: B, ptr: R, size: w, datatype: d._datatype })
        );
      }
      function l(d, N, g, w) {
        if (!N || N.isIndex !== !0) throw new TypeError("Invalid index");
        var h = N.size(),
          x = N.isScalar(),
          b;
        if ((Ae(g) ? ((b = g.size()), (g = g.toArray())) : (b = Ie(g)), x)) {
          if (b.length !== 0) throw new TypeError("Scalar expected");
          d.set(N.min(), g, w);
        } else {
          if (h.length !== 1 && h.length !== 2)
            throw new De(h.length, d._size.length, "<");
          if (b.length < h.length) {
            for (var y = 0, A = 0; h[y] === 1 && b[y] === 1; ) y++;
            for (; h[y] === 1; ) A++, y++;
            g = i0(g, h.length, A, b);
          }
          if (!Va(h, b)) throw new De(h, b, ">");
          if (h.length === 1) {
            var S = N.dimension(0);
            S.forEach(function (_, C) {
              We(_), d.set([_, 0], g[C[0]], w);
            });
          } else {
            var E = N.dimension(0),
              M = N.dimension(1);
            E.forEach(function (_, C) {
              We(_),
                M.forEach(function (I, L) {
                  We(I), d.set([_, I], g[C[0]][L[0]], w);
                });
            });
          }
        }
        return d;
      }
      (i.prototype.get = function (d) {
        if (!He(d)) throw new TypeError("Array expected");
        if (d.length !== this._size.length)
          throw new De(d.length, this._size.length);
        if (!this._values)
          throw new Error("Cannot invoke get on a Pattern only matrix");
        var N = d[0],
          g = d[1];
        We(N, this._size[0]), We(g, this._size[1]);
        var w = p(N, this._ptr[g], this._ptr[g + 1], this._index);
        return w < this._ptr[g + 1] && this._index[w] === N
          ? this._values[w]
          : 0;
      }),
        (i.prototype.set = function (d, N, g) {
          if (!He(d)) throw new TypeError("Array expected");
          if (d.length !== this._size.length)
            throw new De(d.length, this._size.length);
          if (!this._values)
            throw new Error("Cannot invoke set on a Pattern only matrix");
          var w = d[0],
            h = d[1],
            x = this._size[0],
            b = this._size[1],
            y = t,
            A = 0;
          $r(this._datatype) &&
            ((y = r.find(t, [this._datatype, this._datatype]) || t),
            (A = r.convert(0, this._datatype))),
            (w > x - 1 || h > b - 1) &&
              (c(this, Math.max(w + 1, x), Math.max(h + 1, b), g),
              (x = this._size[0]),
              (b = this._size[1])),
            We(w, x),
            We(h, b);
          var S = p(w, this._ptr[h], this._ptr[h + 1], this._index);
          return (
            S < this._ptr[h + 1] && this._index[S] === w
              ? y(N, A)
                ? u(S, h, this._values, this._index, this._ptr)
                : (this._values[S] = N)
              : o(S, w, h, N, this._values, this._index, this._ptr),
            this
          );
        });
      function p(d, N, g, w) {
        if (g - N === 0) return g;
        for (var h = N; h < g; h++) if (w[h] === d) return h;
        return N;
      }
      function u(d, N, g, w, h) {
        g.splice(d, 1), w.splice(d, 1);
        for (var x = N + 1; x < h.length; x++) h[x]--;
      }
      function o(d, N, g, w, h, x, b) {
        h.splice(d, 0, w), x.splice(d, 0, N);
        for (var y = g + 1; y < b.length; y++) b[y]++;
      }
      i.prototype.resize = function (d, N, g) {
        if (!Jn(d)) throw new TypeError("Array or Matrix expected");
        var w = d
          .valueOf()
          .map((x) => (Array.isArray(x) && x.length === 1 ? x[0] : x));
        if (w.length !== 2)
          throw new Error("Only two dimensions matrix are supported");
        w.forEach(function (x) {
          if (!$e(x) || !Ne(x) || x < 0)
            throw new TypeError(
              "Invalid size, must contain positive integers (size: " +
                _e(w) +
                ")"
            );
        });
        var h = g ? this.clone() : this;
        return c(h, w[0], w[1], N);
      };
      function c(d, N, g, w) {
        var h = w || 0,
          x = t,
          b = 0;
        $r(d._datatype) &&
          ((x = r.find(t, [d._datatype, d._datatype]) || t),
          (b = r.convert(0, d._datatype)),
          (h = r.convert(h, d._datatype)));
        var y = !x(h, b),
          A = d._size[0],
          S = d._size[1],
          E,
          M,
          _;
        if (g > S) {
          for (M = S; M < g; M++)
            if (((d._ptr[M] = d._values.length), y))
              for (E = 0; E < A; E++) d._values.push(h), d._index.push(E);
          d._ptr[g] = d._values.length;
        } else
          g < S &&
            (d._ptr.splice(g + 1, S - g),
            d._values.splice(d._ptr[g], d._values.length),
            d._index.splice(d._ptr[g], d._index.length));
        if (((S = g), N > A)) {
          if (y) {
            var C = 0;
            for (M = 0; M < S; M++) {
              (d._ptr[M] = d._ptr[M] + C), (_ = d._ptr[M + 1] + C);
              var I = 0;
              for (E = A; E < N; E++, I++)
                d._values.splice(_ + I, 0, h),
                  d._index.splice(_ + I, 0, E),
                  C++;
            }
            d._ptr[S] = d._values.length;
          }
        } else if (N < A) {
          var L = 0;
          for (M = 0; M < S; M++) {
            d._ptr[M] = d._ptr[M] - L;
            var $ = d._ptr[M],
              D = d._ptr[M + 1] - L;
            for (_ = $; _ < D; _++)
              (E = d._index[_]),
                E > N - 1 &&
                  (d._values.splice(_, 1), d._index.splice(_, 1), L++);
          }
          d._ptr[M] = d._values.length;
        }
        return (d._size[0] = N), (d._size[1] = g), d;
      }
      (i.prototype.reshape = function (d, N) {
        if (!He(d)) throw new TypeError("Array expected");
        if (d.length !== 2)
          throw new Error(
            "Sparse matrices can only be reshaped in two dimensions"
          );
        d.forEach(function (T) {
          if (!$e(T) || !Ne(T) || T <= -2 || T === 0)
            throw new TypeError(
              "Invalid size, must contain positive integers or -1 (size: " +
                _e(d) +
                ")"
            );
        });
        var g = this._size[0] * this._size[1];
        d = Lc(d, g);
        var w = d[0] * d[1];
        if (g !== w)
          throw new Error(
            "Reshaping sparse matrix will result in the wrong number of elements"
          );
        var h = N ? this.clone() : this;
        if (this._size[0] === d[0] && this._size[1] === d[1]) return h;
        for (var x = [], b = 0; b < h._ptr.length; b++)
          for (var y = 0; y < h._ptr[b + 1] - h._ptr[b]; y++) x.push(b);
        for (
          var A = h._values.slice(), S = h._index.slice(), E = 0;
          E < h._index.length;
          E++
        ) {
          var M = S[E],
            _ = x[E],
            C = M * h._size[1] + _;
          (x[E] = C % d[1]), (S[E] = Math.floor(C / d[1]));
        }
        (h._values.length = 0),
          (h._index.length = 0),
          (h._ptr.length = d[1] + 1),
          (h._size = d.slice());
        for (var I = 0; I < h._ptr.length; I++) h._ptr[I] = 0;
        for (var L = 0; L < A.length; L++) {
          var $ = S[L],
            D = x[L],
            B = A[L],
            R = p($, h._ptr[D], h._ptr[D + 1], h._index);
          o(R, $, D, B, h._values, h._index, h._ptr);
        }
        return h;
      }),
        (i.prototype.clone = function () {
          var d = new i({
            values: this._values ? Me(this._values) : void 0,
            index: Me(this._index),
            ptr: Me(this._ptr),
            size: Me(this._size),
            datatype: this._datatype,
          });
          return d;
        }),
        (i.prototype.size = function () {
          return this._size.slice(0);
        }),
        (i.prototype.map = function (d, N) {
          if (!this._values)
            throw new Error("Cannot invoke map on a Pattern only matrix");
          var g = this,
            w = this._size[0],
            h = this._size[1],
            x = function (y, A, S) {
              return d(y, [A, S], g);
            };
          return m(this, 0, w - 1, 0, h - 1, x, N);
        });
      function m(d, N, g, w, h, x, b) {
        var y = [],
          A = [],
          S = [],
          E = t,
          M = 0;
        $r(d._datatype) &&
          ((E = r.find(t, [d._datatype, d._datatype]) || t),
          (M = r.convert(0, d._datatype)));
        for (
          var _ = function (G, Y, re) {
              (G = x(G, Y, re)), E(G, M) || (y.push(G), A.push(Y));
            },
            C = w;
          C <= h;
          C++
        ) {
          S.push(y.length);
          var I = d._ptr[C],
            L = d._ptr[C + 1];
          if (b)
            for (var $ = I; $ < L; $++) {
              var D = d._index[$];
              D >= N && D <= g && _(d._values[$], D - N, C - w);
            }
          else {
            for (var B = {}, R = I; R < L; R++) {
              var T = d._index[R];
              B[T] = d._values[R];
            }
            for (var P = N; P <= g; P++) {
              var W = P in B ? B[P] : 0;
              _(W, P - N, C - w);
            }
          }
        }
        return (
          S.push(y.length),
          new i({ values: y, index: A, ptr: S, size: [g - N + 1, h - w + 1] })
        );
      }
      (i.prototype.forEach = function (d, N) {
        if (!this._values)
          throw new Error("Cannot invoke forEach on a Pattern only matrix");
        for (
          var g = this, w = this._size[0], h = this._size[1], x = 0;
          x < h;
          x++
        ) {
          var b = this._ptr[x],
            y = this._ptr[x + 1];
          if (N)
            for (var A = b; A < y; A++) {
              var S = this._index[A];
              d(this._values[A], [S, x], g);
            }
          else {
            for (var E = {}, M = b; M < y; M++) {
              var _ = this._index[M];
              E[_] = this._values[M];
            }
            for (var C = 0; C < w; C++) {
              var I = C in E ? E[C] : 0;
              d(I, [C, x], g);
            }
          }
        }
      }),
        (i.prototype[Symbol.iterator] = function* () {
          if (!this._values)
            throw new Error("Cannot iterate a Pattern only matrix");
          for (var d = this._size[1], N = 0; N < d; N++)
            for (
              var g = this._ptr[N], w = this._ptr[N + 1], h = g;
              h < w;
              h++
            ) {
              var x = this._index[h];
              yield { value: this._values[h], index: [x, N] };
            }
        }),
        (i.prototype.toArray = function () {
          return v(this._values, this._index, this._ptr, this._size, !0);
        }),
        (i.prototype.valueOf = function () {
          return v(this._values, this._index, this._ptr, this._size, !1);
        });
      function v(d, N, g, w, h) {
        var x = w[0],
          b = w[1],
          y = [],
          A,
          S;
        for (A = 0; A < x; A++) for (y[A] = [], S = 0; S < b; S++) y[A][S] = 0;
        for (S = 0; S < b; S++)
          for (var E = g[S], M = g[S + 1], _ = E; _ < M; _++)
            (A = N[_]), (y[A][S] = d ? (h ? Me(d[_]) : d[_]) : 1);
        return y;
      }
      return (
        (i.prototype.format = function (d) {
          for (
            var N = this._size[0],
              g = this._size[1],
              w = this.density(),
              h =
                "Sparse Matrix [" +
                _e(N, d) +
                " x " +
                _e(g, d) +
                "] density: " +
                _e(w, d) +
                `
`,
              x = 0;
            x < g;
            x++
          )
            for (
              var b = this._ptr[x], y = this._ptr[x + 1], A = b;
              A < y;
              A++
            ) {
              var S = this._index[A];
              h +=
                `
    (` +
                _e(S, d) +
                ", " +
                _e(x, d) +
                ") ==> " +
                (this._values ? _e(this._values[A], d) : "X");
            }
          return h;
        }),
        (i.prototype.toString = function () {
          return _e(this.toArray());
        }),
        (i.prototype.toJSON = function () {
          return {
            mathjs: "SparseMatrix",
            values: this._values,
            index: this._index,
            ptr: this._ptr,
            size: this._size,
            datatype: this._datatype,
          };
        }),
        (i.prototype.diagonal = function (d) {
          if (d) {
            if ((Be(d) && (d = d.toNumber()), !$e(d) || !Ne(d)))
              throw new TypeError("The parameter k must be an integer number");
          } else d = 0;
          var N = d > 0 ? d : 0,
            g = d < 0 ? -d : 0,
            w = this._size[0],
            h = this._size[1],
            x = Math.min(w - g, h - N),
            b = [],
            y = [],
            A = [];
          A[0] = 0;
          for (var S = N; S < h && b.length < x; S++)
            for (
              var E = this._ptr[S], M = this._ptr[S + 1], _ = E;
              _ < M;
              _++
            ) {
              var C = this._index[_];
              if (C === S - N + g) {
                b.push(this._values[_]), (y[b.length - 1] = C - g);
                break;
              }
            }
          return (
            A.push(b.length),
            new i({ values: b, index: y, ptr: A, size: [x, 1] })
          );
        }),
        (i.fromJSON = function (d) {
          return new i(d);
        }),
        (i.diagonal = function (d, N, g, w, h) {
          if (!He(d)) throw new TypeError("Array expected, size parameter");
          if (d.length !== 2)
            throw new Error("Only two dimensions matrix are supported");
          if (
            ((d = d.map(function (T) {
              if ((Be(T) && (T = T.toNumber()), !$e(T) || !Ne(T) || T < 1))
                throw new Error("Size values must be positive integers");
              return T;
            })),
            g)
          ) {
            if ((Be(g) && (g = g.toNumber()), !$e(g) || !Ne(g)))
              throw new TypeError("The parameter k must be an integer number");
          } else g = 0;
          var x = t,
            b = 0;
          $r(h) && ((x = r.find(t, [h, h]) || t), (b = r.convert(0, h)));
          var y = g > 0 ? g : 0,
            A = g < 0 ? -g : 0,
            S = d[0],
            E = d[1],
            M = Math.min(S - A, E - y),
            _;
          if (He(N)) {
            if (N.length !== M) throw new Error("Invalid value array length");
            _ = function (P) {
              return N[P];
            };
          } else if (Ae(N)) {
            var C = N.size();
            if (C.length !== 1 || C[0] !== M)
              throw new Error("Invalid matrix length");
            _ = function (P) {
              return N.get([P]);
            };
          } else
            _ = function () {
              return N;
            };
          for (var I = [], L = [], $ = [], D = 0; D < E; D++) {
            $.push(I.length);
            var B = D - y;
            if (B >= 0 && B < M) {
              var R = _(B);
              x(R, b) || (L.push(B + A), I.push(R));
            }
          }
          return (
            $.push(I.length),
            new i({ values: I, index: L, ptr: $, size: [S, E] })
          );
        }),
        (i.prototype.swapRows = function (d, N) {
          if (!$e(d) || !Ne(d) || !$e(N) || !Ne(N))
            throw new Error("Row index must be positive integers");
          if (this._size.length !== 2)
            throw new Error("Only two dimensional matrix is supported");
          return (
            We(d, this._size[0]),
            We(N, this._size[0]),
            i._swapRows(
              d,
              N,
              this._size[1],
              this._values,
              this._index,
              this._ptr
            ),
            this
          );
        }),
        (i._forEachRow = function (d, N, g, w, h) {
          for (var x = w[d], b = w[d + 1], y = x; y < b; y++) h(g[y], N[y]);
        }),
        (i._swapRows = function (d, N, g, w, h, x) {
          for (var b = 0; b < g; b++) {
            var y = x[b],
              A = x[b + 1],
              S = p(d, y, A, h),
              E = p(N, y, A, h);
            if (S < A && E < A && h[S] === d && h[E] === N) {
              if (w) {
                var M = w[S];
                (w[S] = w[E]), (w[E] = M);
              }
              continue;
            }
            if (S < A && h[S] === d && (E >= A || h[E] !== N)) {
              var _ = w ? w[S] : void 0;
              h.splice(E, 0, N),
                w && w.splice(E, 0, _),
                h.splice(E <= S ? S + 1 : S, 1),
                w && w.splice(E <= S ? S + 1 : S, 1);
              continue;
            }
            if (E < A && h[E] === N && (S >= A || h[S] !== d)) {
              var C = w ? w[E] : void 0;
              h.splice(S, 0, d),
                w && w.splice(S, 0, C),
                h.splice(S <= E ? E + 1 : E, 1),
                w && w.splice(S <= E ? E + 1 : E, 1);
            }
          }
        }),
        i
      );
    },
    { isClass: !0 }
  ),
  f2 = "number",
  p2 = ["typed"];
function m2(e) {
  var r = e.match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/);
  if (r) {
    var t = { "0b": 2, "0o": 8, "0x": 16 }[r[1]],
      n = r[2],
      i = r[3];
    return { input: e, radix: t, integerPart: n, fractionalPart: i };
  } else return null;
}
function v2(e) {
  for (
    var r = parseInt(e.integerPart, e.radix), t = 0, n = 0;
    n < e.fractionalPart.length;
    n++
  ) {
    var i = parseInt(e.fractionalPart[n], e.radix);
    t += i / Math.pow(e.radix, n + 1);
  }
  var a = r + t;
  if (isNaN(a))
    throw new SyntaxError('String "' + e.input + '" is no valid number');
  return a;
}
var d2 = F(f2, p2, (e) => {
    var { typed: r } = e,
      t = r("number", {
        "": function () {
          return 0;
        },
        number: function (i) {
          return i;
        },
        string: function (i) {
          if (i === "NaN") return NaN;
          var a = m2(i);
          if (a) return v2(a);
          var s = 0,
            f = i.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);
          f && ((s = Number(f[2])), (i = f[1]));
          var l = Number(i);
          if (isNaN(l))
            throw new SyntaxError('String "' + i + '" is no valid number');
          if (f) {
            if (l > 2 ** s - 1)
              throw new SyntaxError('String "'.concat(i, '" is out of range'));
            l >= 2 ** (s - 1) && (l = l - 2 ** s);
          }
          return l;
        },
        BigNumber: function (i) {
          return i.toNumber();
        },
        Fraction: function (i) {
          return i.valueOf();
        },
        Unit: function (i) {
          throw new Error("Second argument with valueless unit expected");
        },
        null: function (i) {
          return 0;
        },
        "Unit, string | Unit": function (i, a) {
          return i.toNumber(a);
        },
        "Array | Matrix": function (i) {
          return ye(i, this);
        },
      });
    return (
      (t.fromJSON = function (n) {
        return parseFloat(n.value);
      }),
      t
    );
  }),
  kp = "string",
  h2 = ["typed"],
  g2 = F(kp, h2, (e) => {
    var { typed: r } = e;
    return r(kp, {
      "": function () {
        return "";
      },
      number: Hn,
      null: function (n) {
        return "null";
      },
      boolean: function (n) {
        return n + "";
      },
      string: function (n) {
        return n;
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
      any: function (n) {
        return String(n);
      },
    });
  }),
  Up = "boolean",
  y2 = ["typed"],
  x2 = F(Up, y2, (e) => {
    var { typed: r } = e;
    return r(Up, {
      "": function () {
        return !1;
      },
      boolean: function (n) {
        return n;
      },
      number: function (n) {
        return !!n;
      },
      null: function (n) {
        return !1;
      },
      BigNumber: function (n) {
        return !n.isZero();
      },
      string: function (n) {
        var i = n.toLowerCase();
        if (i === "true") return !0;
        if (i === "false") return !1;
        var a = Number(n);
        if (n !== "" && !isNaN(a)) return !!a;
        throw new Error('Cannot convert "' + n + '" to a boolean');
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  w2 = "bignumber",
  b2 = ["typed", "BigNumber"],
  N2 = F(w2, b2, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r("bignumber", {
      "": function () {
        return new t(0);
      },
      number: function (i) {
        return new t(i + "");
      },
      string: function (i) {
        var a = i.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);
        if (a) {
          var s = a[2],
            f = t(a[1]),
            l = new t(2).pow(Number(s));
          if (f.gt(l.sub(1)))
            throw new SyntaxError('String "'.concat(i, '" is out of range'));
          var p = new t(2).pow(Number(s) - 1);
          return f.gte(p) ? f.sub(l) : f;
        }
        return new t(i);
      },
      BigNumber: function (i) {
        return i;
      },
      Fraction: function (i) {
        return new t(i.n).div(i.d).times(i.s);
      },
      null: function (i) {
        return new t(0);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  M2 = "complex",
  S2 = ["typed", "Complex"],
  A2 = F(M2, S2, (e) => {
    var { typed: r, Complex: t } = e;
    return r("complex", {
      "": function () {
        return t.ZERO;
      },
      number: function (i) {
        return new t(i, 0);
      },
      "number, number": function (i, a) {
        return new t(i, a);
      },
      "BigNumber, BigNumber": function (i, a) {
        return new t(i.toNumber(), a.toNumber());
      },
      Fraction: function (i) {
        return new t(i.valueOf(), 0);
      },
      Complex: function (i) {
        return i.clone();
      },
      string: function (i) {
        return t(i);
      },
      null: function (i) {
        return t(0);
      },
      Object: function (i) {
        if ("re" in i && "im" in i) return new t(i.re, i.im);
        if (("r" in i && "phi" in i) || ("abs" in i && "arg" in i))
          return new t(i);
        throw new Error(
          "Expected object with properties (re and im) or (r and phi) or (abs and arg)"
        );
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  E2 = "fraction",
  C2 = ["typed", "Fraction"],
  O2 = F(E2, C2, (e) => {
    var { typed: r, Fraction: t } = e;
    return r("fraction", {
      number: function (i) {
        if (!isFinite(i) || isNaN(i))
          throw new Error(i + " cannot be represented as a fraction");
        return new t(i);
      },
      string: function (i) {
        return new t(i);
      },
      "number, number": function (i, a) {
        return new t(i, a);
      },
      null: function (i) {
        return new t(0);
      },
      BigNumber: function (i) {
        return new t(i.toString());
      },
      Fraction: function (i) {
        return i;
      },
      Object: function (i) {
        return new t(i);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  qp = "matrix",
  T2 = ["typed", "Matrix", "DenseMatrix", "SparseMatrix"],
  D2 = F(qp, T2, (e) => {
    var { typed: r, Matrix: t, DenseMatrix: n, SparseMatrix: i } = e;
    return r(qp, {
      "": function () {
        return a([]);
      },
      string: function (f) {
        return a([], f);
      },
      "string, string": function (f, l) {
        return a([], f, l);
      },
      Array: function (f) {
        return a(f);
      },
      Matrix: function (f) {
        return a(f, f.storage());
      },
      "Array | Matrix, string": a,
      "Array | Matrix, string, string": a,
    });
    function a(s, f, l) {
      if (f === "dense" || f === "default" || f === void 0) return new n(s, l);
      if (f === "sparse") return new i(s, l);
      throw new TypeError("Unknown matrix type " + JSON.stringify(f) + ".");
    }
  }),
  Hp = "matrixFromFunction",
  _2 = ["typed", "matrix", "isZero"],
  B2 = F(Hp, _2, (e) => {
    var { typed: r, matrix: t, isZero: n } = e;
    return r(Hp, {
      "Array | Matrix, function, string, string": function (s, f, l, p) {
        return i(s, f, l, p);
      },
      "Array | Matrix, function, string": function (s, f, l) {
        return i(s, f, l);
      },
      "Matrix, function": function (s, f) {
        return i(s, f, "dense");
      },
      "Array, function": function (s, f) {
        return i(s, f, "dense").toArray();
      },
      "Array | Matrix, string, function": function (s, f, l) {
        return i(s, l, f);
      },
      "Array | Matrix, string, string, function": function (s, f, l, p) {
        return i(s, p, f, l);
      },
    });
    function i(a, s, f, l) {
      var p;
      return (
        l !== void 0 ? (p = t(f, l)) : (p = t(f)),
        p.resize(a),
        p.forEach(function (u, o) {
          var c = s(o);
          n(c) || p.set(o, c);
        }),
        p
      );
    }
  }),
  Vp = "matrixFromRows",
  I2 = ["typed", "matrix", "flatten", "size"],
  $2 = F(Vp, I2, (e) => {
    var { typed: r, matrix: t, flatten: n, size: i } = e;
    return r(Vp, {
      "...Array": function (l) {
        return a(l);
      },
      "...Matrix": function (l) {
        return t(a(l.map((p) => p.toArray())));
      },
    });
    function a(f) {
      if (f.length === 0)
        throw new TypeError(
          "At least one row is needed to construct a matrix."
        );
      var l = s(f[0]),
        p = [];
      for (var u of f) {
        var o = s(u);
        if (o !== l)
          throw new TypeError(
            "The vectors had different length: " +
              (l | 0) +
              " \u2260 " +
              (o | 0)
          );
        p.push(n(u));
      }
      return p;
    }
    function s(f) {
      var l = i(f);
      if (l.length === 1) return l[0];
      if (l.length === 2) {
        if (l[0] === 1) return l[1];
        if (l[1] === 1) return l[0];
        throw new TypeError("At least one of the arguments is not a vector.");
      } else
        throw new TypeError(
          "Only one- or two-dimensional vectors are supported."
        );
    }
  }),
  Gp = "matrixFromColumns",
  z2 = ["typed", "matrix", "flatten", "size"],
  R2 = F(Gp, z2, (e) => {
    var { typed: r, matrix: t, flatten: n, size: i } = e;
    return r(Gp, {
      "...Array": function (l) {
        return a(l);
      },
      "...Matrix": function (l) {
        return t(a(l.map((p) => p.toArray())));
      },
    });
    function a(f) {
      if (f.length === 0)
        throw new TypeError(
          "At least one column is needed to construct a matrix."
        );
      for (var l = s(f[0]), p = [], u = 0; u < l; u++) p[u] = [];
      for (var o of f) {
        var c = s(o);
        if (c !== l)
          throw new TypeError(
            "The vectors had different length: " +
              (l | 0) +
              " \u2260 " +
              (c | 0)
          );
        for (var m = n(o), v = 0; v < l; v++) p[v].push(m[v]);
      }
      return p;
    }
    function s(f) {
      var l = i(f);
      if (l.length === 1) return l[0];
      if (l.length === 2) {
        if (l[0] === 1) return l[1];
        if (l[1] === 1) return l[0];
        throw new TypeError("At least one of the arguments is not a vector.");
      } else
        throw new TypeError(
          "Only one- or two-dimensional vectors are supported."
        );
    }
  }),
  Wp = "splitUnit",
  F2 = ["typed"],
  P2 = F(Wp, F2, (e) => {
    var { typed: r } = e;
    return r(Wp, {
      "Unit, Array": function (n, i) {
        return n.splitUnit(i);
      },
    });
  }),
  Zp = "unaryMinus",
  L2 = ["typed"],
  k2 = F(Zp, L2, (e) => {
    var { typed: r } = e;
    return r(Zp, {
      number: C0,
      Complex: function (n) {
        return n.neg();
      },
      BigNumber: function (n) {
        return n.neg();
      },
      Fraction: function (n) {
        return n.neg();
      },
      Unit: function (n) {
        var i = n.clone();
        return (i.value = this(n.value)), i;
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Qp = "unaryPlus",
  U2 = ["typed", "config", "BigNumber"],
  q2 = F(Qp, U2, (e) => {
    var { typed: r, config: t, BigNumber: n } = e;
    return r(Qp, {
      number: O0,
      Complex: function (a) {
        return a;
      },
      BigNumber: function (a) {
        return a;
      },
      Fraction: function (a) {
        return a;
      },
      Unit: function (a) {
        return a.clone();
      },
      "Array | Matrix": function (a) {
        return ye(a, this);
      },
      "boolean | string": function (a) {
        return t.number === "BigNumber" ? new n(+a) : +a;
      },
    });
  }),
  Yp = "abs",
  H2 = ["typed"],
  V2 = F(Yp, H2, (e) => {
    var { typed: r } = e;
    return r(Yp, {
      number: S0,
      Complex: function (n) {
        return n.abs();
      },
      BigNumber: function (n) {
        return n.abs();
      },
      Fraction: function (n) {
        return n.abs();
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
      Unit: function (n) {
        return n.abs();
      },
    });
  }),
  Xp = "apply",
  G2 = ["typed", "isInteger"],
  w1 = F(Xp, G2, (e) => {
    var { typed: r, isInteger: t } = e;
    return r(Xp, {
      "Array | Matrix, number | BigNumber, function": function (i, a, s) {
        if (!t(a)) throw new TypeError("Integer number expected for dimension");
        var f = Array.isArray(i) ? Ie(i) : i.size();
        if (a < 0 || a >= f.length) throw new vt(a, f.length);
        return Ae(i) ? i.create(xs(i.valueOf(), a, s)) : xs(i, a, s);
      },
    });
  });
function xs(e, r, t) {
  var n, i, a;
  if (r <= 0)
    if (Array.isArray(e[0])) {
      for (a = W2(e), i = [], n = 0; n < a.length; n++)
        i[n] = xs(a[n], r - 1, t);
      return i;
    } else return t(e);
  else {
    for (i = [], n = 0; n < e.length; n++) i[n] = xs(e[n], r - 1, t);
    return i;
  }
}
function W2(e) {
  var r = e.length,
    t = e[0].length,
    n,
    i,
    a = [];
  for (i = 0; i < t; i++) {
    var s = [];
    for (n = 0; n < r; n++) s.push(e[n][i]);
    a.push(s);
  }
  return a;
}
var jp = "addScalar",
  Z2 = ["typed"],
  Q2 = F(jp, Z2, (e) => {
    var { typed: r } = e;
    return r(jp, {
      "number, number": A0,
      "Complex, Complex": function (n, i) {
        return n.add(i);
      },
      "BigNumber, BigNumber": function (n, i) {
        return n.plus(i);
      },
      "Fraction, Fraction": function (n, i) {
        return n.add(i);
      },
      "Unit, Unit": function (n, i) {
        if (n.value === null || n.value === void 0)
          throw new Error("Parameter x contains a unit with undefined value");
        if (i.value === null || i.value === void 0)
          throw new Error("Parameter y contains a unit with undefined value");
        if (!n.equalBase(i)) throw new Error("Units do not match");
        var a = n.clone();
        return (a.value = this(a.value, i.value)), (a.fixPrefix = !1), a;
      },
    });
  }),
  Jp = "cbrt",
  Y2 = [
    "config",
    "typed",
    "isNegative",
    "unaryMinus",
    "matrix",
    "Complex",
    "BigNumber",
    "Fraction",
  ],
  X2 = F(Jp, Y2, (e) => {
    var {
      config: r,
      typed: t,
      isNegative: n,
      unaryMinus: i,
      matrix: a,
      Complex: s,
      BigNumber: f,
      Fraction: l,
    } = e;
    return t(Jp, {
      number: va,
      Complex: p,
      "Complex, boolean": p,
      BigNumber: function (c) {
        return c.cbrt();
      },
      Unit: u,
      "Array | Matrix": function (c) {
        return ye(c, this);
      },
    });
    function p(o, c) {
      var m = o.arg() / 3,
        v = o.abs(),
        d = new s(va(v), 0).mul(new s(0, m).exp());
      if (c) {
        var N = [
          d,
          new s(va(v), 0).mul(new s(0, m + (Math.PI * 2) / 3).exp()),
          new s(va(v), 0).mul(new s(0, m - (Math.PI * 2) / 3).exp()),
        ];
        return r.matrix === "Array" ? N : a(N);
      } else return d;
    }
    function u(o) {
      if (o.value && Nt(o.value)) {
        var c = o.clone();
        return (c.value = 1), (c = c.pow(1 / 3)), (c.value = p(o.value)), c;
      } else {
        var m = n(o.value);
        m && (o.value = i(o.value));
        var v;
        Be(o.value)
          ? (v = new f(1).div(3))
          : Bn(o.value)
          ? (v = new l(1, 3))
          : (v = 1 / 3);
        var d = o.pow(v);
        return m && (d.value = i(d.value)), d;
      }
    }
  }),
  j2 = "algorithm11",
  J2 = ["typed", "equalScalar"],
  Sr = F(j2, J2, (e) => {
    var { typed: r, equalScalar: t } = e;
    return function (i, a, s, f) {
      var l = i._values,
        p = i._index,
        u = i._ptr,
        o = i._size,
        c = i._datatype;
      if (!l)
        throw new Error(
          "Cannot perform operation on Pattern Sparse Matrix and Scalar value"
        );
      var m = o[0],
        v = o[1],
        d,
        N = t,
        g = 0,
        w = s;
      typeof c == "string" &&
        ((d = c),
        (N = r.find(t, [d, d])),
        (g = r.convert(0, d)),
        (a = r.convert(a, d)),
        (w = r.find(s, [d, d])));
      for (var h = [], x = [], b = [], y = 0; y < v; y++) {
        b[y] = x.length;
        for (var A = u[y], S = u[y + 1], E = A; E < S; E++) {
          var M = p[E],
            _ = f ? w(a, l[E]) : w(l[E], a);
          N(_, g) || (x.push(M), h.push(_));
        }
      }
      return (
        (b[v] = x.length),
        i.createSparseMatrix({
          values: h,
          index: x,
          ptr: b,
          size: [m, v],
          datatype: d,
        })
      );
    };
  }),
  K2 = "algorithm12",
  eS = ["typed", "DenseMatrix"],
  xr = F(K2, eS, (e) => {
    var { typed: r, DenseMatrix: t } = e;
    return function (i, a, s, f) {
      var l = i._values,
        p = i._index,
        u = i._ptr,
        o = i._size,
        c = i._datatype;
      if (!l)
        throw new Error(
          "Cannot perform operation on Pattern Sparse Matrix and Scalar value"
        );
      var m = o[0],
        v = o[1],
        d,
        N = s;
      typeof c == "string" &&
        ((d = c), (a = r.convert(a, d)), (N = r.find(s, [d, d])));
      for (var g = [], w = [], h = [], x = 0; x < v; x++) {
        for (var b = x + 1, y = u[x], A = u[x + 1], S = y; S < A; S++) {
          var E = p[S];
          (w[E] = l[S]), (h[E] = b);
        }
        for (var M = 0; M < m; M++)
          x === 0 && (g[M] = []),
            h[M] === b
              ? (g[M][x] = f ? N(a, w[M]) : N(w[M], a))
              : (g[M][x] = f ? N(a, 0) : N(0, a));
      }
      return new t({ data: g, size: [m, v], datatype: d });
    };
  }),
  rS = "algorithm14",
  tS = ["typed"],
  ke = F(rS, tS, (e) => {
    var { typed: r } = e;
    return function (i, a, s, f) {
      var l = i._data,
        p = i._size,
        u = i._datatype,
        o,
        c = s;
      typeof u == "string" &&
        ((o = u), (a = r.convert(a, o)), (c = r.find(s, [o, o])));
      var m = p.length > 0 ? t(c, 0, p, p[0], l, a, f) : [];
      return i.createDenseMatrix({ data: m, size: Me(p), datatype: o });
    };
    function t(n, i, a, s, f, l, p) {
      var u = [];
      if (i === a.length - 1)
        for (var o = 0; o < s; o++) u[o] = p ? n(l, f[o]) : n(f[o], l);
      else
        for (var c = 0; c < s; c++) u[c] = t(n, i + 1, a, a[i + 1], f[c], l, p);
      return u;
    }
  }),
  zl = "ceil",
  nS = [
    "typed",
    "config",
    "round",
    "matrix",
    "equalScalar",
    "zeros",
    "DenseMatrix",
  ],
  iS = F(zl, ["typed", "config", "round"], (e) => {
    var { typed: r, config: t, round: n } = e;
    return r(zl, {
      number: function (a) {
        return rt(a, n(a), t.epsilon) ? n(a) : Math.ceil(a);
      },
      "number, number": function (a, s) {
        if (rt(a, n(a, s), t.epsilon)) return n(a, s);
        var [f, l] = "".concat(a, "e").split("e"),
          p = Math.ceil(Number("".concat(f, "e").concat(Number(l) + s)));
        return (
          ([f, l] = "".concat(p, "e").split("e")),
          Number("".concat(f, "e").concat(Number(l) - s))
        );
      },
    });
  }),
  aS = F(zl, nS, (e) => {
    var {
        typed: r,
        config: t,
        round: n,
        matrix: i,
        equalScalar: a,
        zeros: s,
        DenseMatrix: f,
      } = e,
      l = Sr({ typed: r, equalScalar: a }),
      p = xr({ typed: r, DenseMatrix: f }),
      u = ke({ typed: r }),
      o = iS({ typed: r, config: t, round: n });
    return r("ceil", {
      number: o.signatures.number,
      "number,number": o.signatures["number,number"],
      Complex: function (m) {
        return m.ceil();
      },
      "Complex, number": function (m, v) {
        return m.ceil(v);
      },
      "Complex, BigNumber": function (m, v) {
        return m.ceil(v.toNumber());
      },
      BigNumber: function (m) {
        return zt(m, n(m), t.epsilon) ? n(m) : m.ceil();
      },
      "BigNumber, BigNumber": function (m, v) {
        return zt(m, n(m, v), t.epsilon)
          ? n(m, v)
          : m.toDecimalPlaces(v.toNumber(), Cn.ROUND_CEIL);
      },
      Fraction: function (m) {
        return m.ceil();
      },
      "Fraction, number": function (m, v) {
        return m.ceil(v);
      },
      "Fraction, BigNumber": function (m, v) {
        return m.ceil(v.toNumber());
      },
      "Array | Matrix": function (m) {
        return ye(m, this);
      },
      "Array, number | BigNumber": function (m, v) {
        return ye(m, (d) => this(d, v));
      },
      "SparseMatrix, number | BigNumber": function (m, v) {
        return l(m, v, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (m, v) {
        return u(m, v, this, !1);
      },
      "number | Complex | Fraction | BigNumber, Array": function (m, v) {
        return u(i(v), m, this, !0).valueOf();
      },
      "number | Complex | Fraction | BigNumber, Matrix": function (m, v) {
        return a(m, 0)
          ? s(v.size(), v.storage())
          : v.storage() === "dense"
          ? u(v, m, this, !0)
          : p(v, m, this, !0);
      },
    });
  }),
  Kp = "cube",
  oS = ["typed"],
  sS = F(Kp, oS, (e) => {
    var { typed: r } = e;
    return r(Kp, {
      number: T0,
      Complex: function (n) {
        return n.mul(n).mul(n);
      },
      BigNumber: function (n) {
        return n.times(n).times(n);
      },
      Fraction: function (n) {
        return n.pow(3);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
      Unit: function (n) {
        return n.pow(3);
      },
    });
  }),
  em = "exp",
  uS = ["typed"],
  lS = F(em, uS, (e) => {
    var { typed: r } = e;
    return r(em, {
      number: D0,
      Complex: function (n) {
        return n.exp();
      },
      BigNumber: function (n) {
        return n.exp();
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  rm = "expm1",
  cS = ["typed", "Complex"],
  fS = F(rm, cS, (e) => {
    var { typed: r, Complex: t } = e;
    return r(rm, {
      number: _0,
      Complex: function (i) {
        var a = Math.exp(i.re);
        return new t(a * Math.cos(i.im) - 1, a * Math.sin(i.im));
      },
      BigNumber: function (i) {
        return i.exp().minus(1);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  Rl = "fix",
  pS = [
    "typed",
    "Complex",
    "matrix",
    "ceil",
    "floor",
    "equalScalar",
    "zeros",
    "DenseMatrix",
  ],
  mS = F(Rl, ["typed", "ceil", "floor"], (e) => {
    var { typed: r, ceil: t, floor: n } = e;
    return r(Rl, {
      number: function (a) {
        return a > 0 ? n(a) : t(a);
      },
      "number, number": function (a, s) {
        return a > 0 ? n(a, s) : t(a, s);
      },
    });
  }),
  vS = F(Rl, pS, (e) => {
    var {
        typed: r,
        Complex: t,
        matrix: n,
        ceil: i,
        floor: a,
        equalScalar: s,
        zeros: f,
        DenseMatrix: l,
      } = e,
      p = xr({ typed: r, DenseMatrix: l }),
      u = ke({ typed: r }),
      o = mS({ typed: r, ceil: i, floor: a });
    return r("fix", {
      number: o.signatures.number,
      "number, number | BigNumber": o.signatures["number,number"],
      Complex: function (m) {
        return new t(
          m.re > 0 ? Math.floor(m.re) : Math.ceil(m.re),
          m.im > 0 ? Math.floor(m.im) : Math.ceil(m.im)
        );
      },
      "Complex, number": function (m, v) {
        return new t(
          m.re > 0 ? a(m.re, v) : i(m.re, v),
          m.im > 0 ? a(m.im, v) : i(m.im, v)
        );
      },
      "Complex, BigNumber": function (m, v) {
        var d = v.toNumber();
        return new t(
          m.re > 0 ? a(m.re, d) : i(m.re, d),
          m.im > 0 ? a(m.im, d) : i(m.im, d)
        );
      },
      BigNumber: function (m) {
        return m.isNegative() ? i(m) : a(m);
      },
      "BigNumber, number | BigNumber": function (m, v) {
        return m.isNegative() ? i(m, v) : a(m, v);
      },
      Fraction: function (m) {
        return m.s < 0 ? m.ceil() : m.floor();
      },
      "Fraction, number | BigNumber": function (m, v) {
        return m.s < 0 ? i(m, v) : a(m, v);
      },
      "Array | Matrix": function (m) {
        return ye(m, this);
      },
      "Array | Matrix, number | BigNumber": function (m, v) {
        return ye(m, (d) => this(d, v));
      },
      "number | Complex | Fraction | BigNumber, Array": function (m, v) {
        return u(n(v), m, this, !0).valueOf();
      },
      "number | Complex | Fraction | BigNumber, Matrix": function (m, v) {
        return s(m, 0)
          ? f(v.size(), v.storage())
          : v.storage() === "dense"
          ? u(v, m, this, !0)
          : p(v, m, this, !0);
      },
    });
  }),
  Fl = "floor",
  dS = [
    "typed",
    "config",
    "round",
    "matrix",
    "equalScalar",
    "zeros",
    "DenseMatrix",
  ],
  hS = F(Fl, ["typed", "config", "round"], (e) => {
    var { typed: r, config: t, round: n } = e;
    return r(Fl, {
      number: function (a) {
        return rt(a, n(a), t.epsilon) ? n(a) : Math.floor(a);
      },
      "number, number": function (a, s) {
        if (rt(a, n(a, s), t.epsilon)) return n(a, s);
        var [f, l] = "".concat(a, "e").split("e"),
          p = Math.floor(Number("".concat(f, "e").concat(Number(l) + s)));
        return (
          ([f, l] = "".concat(p, "e").split("e")),
          Number("".concat(f, "e").concat(Number(l) - s))
        );
      },
    });
  }),
  gS = F(Fl, dS, (e) => {
    var {
        typed: r,
        config: t,
        round: n,
        matrix: i,
        equalScalar: a,
        zeros: s,
        DenseMatrix: f,
      } = e,
      l = Sr({ typed: r, equalScalar: a }),
      p = xr({ typed: r, DenseMatrix: f }),
      u = ke({ typed: r }),
      o = hS({ typed: r, config: t, round: n });
    return r("floor", {
      number: o.signatures.number,
      "number,number": o.signatures["number,number"],
      Complex: function (m) {
        return m.floor();
      },
      "Complex, number": function (m, v) {
        return m.floor(v);
      },
      "Complex, BigNumber": function (m, v) {
        return m.floor(v.toNumber());
      },
      BigNumber: function (m) {
        return zt(m, n(m), t.epsilon) ? n(m) : m.floor();
      },
      "BigNumber, BigNumber": function (m, v) {
        return zt(m, n(m, v), t.epsilon)
          ? n(m, v)
          : m.toDecimalPlaces(v.toNumber(), Cn.ROUND_FLOOR);
      },
      Fraction: function (m) {
        return m.floor();
      },
      "Fraction, number": function (m, v) {
        return m.floor(v);
      },
      "Fraction, BigNumber": function (m, v) {
        return m.floor(v.toNumber());
      },
      "Array | Matrix": function (m) {
        return ye(m, this);
      },
      "Array, number | BigNumber": function (m, v) {
        return ye(m, (d) => this(d, v));
      },
      "SparseMatrix, number | BigNumber": function (m, v) {
        return l(m, v, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (m, v) {
        return u(m, v, this, !1);
      },
      "number | Complex | Fraction | BigNumber, Array": function (m, v) {
        return u(i(v), m, this, !0).valueOf();
      },
      "number | Complex | Fraction | BigNumber, Matrix": function (m, v) {
        return a(m, 0)
          ? s(v.size(), v.storage())
          : v.storage() === "dense"
          ? u(v, m, this, !0)
          : p(v, m, this, !0);
      },
    });
  }),
  yS = "algorithm01",
  xS = ["typed"],
  $n = F(yS, xS, (e) => {
    var { typed: r } = e;
    return function (n, i, a, s) {
      var f = n._data,
        l = n._size,
        p = n._datatype,
        u = i._values,
        o = i._index,
        c = i._ptr,
        m = i._size,
        v = i._datatype;
      if (l.length !== m.length) throw new De(l.length, m.length);
      if (l[0] !== m[0] || l[1] !== m[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            l +
            ") must match Matrix B (" +
            m +
            ")"
        );
      if (!u)
        throw new Error(
          "Cannot perform operation on Dense Matrix and Pattern Sparse Matrix"
        );
      var d = l[0],
        N = l[1],
        g = typeof p == "string" && p === v ? p : void 0,
        w = g ? r.find(a, [g, g]) : a,
        h,
        x,
        b = [];
      for (h = 0; h < d; h++) b[h] = [];
      var y = [],
        A = [];
      for (x = 0; x < N; x++) {
        for (var S = x + 1, E = c[x], M = c[x + 1], _ = E; _ < M; _++)
          (h = o[_]),
            (y[h] = s ? w(u[_], f[h][x]) : w(f[h][x], u[_])),
            (A[h] = S);
        for (h = 0; h < d; h++)
          A[h] === S ? (b[h][x] = y[h]) : (b[h][x] = f[h][x]);
      }
      return n.createDenseMatrix({ data: b, size: [d, N], datatype: g });
    };
  }),
  wS = "algorithm04",
  bS = ["typed", "equalScalar"],
  Zc = F(wS, bS, (e) => {
    var { typed: r, equalScalar: t } = e;
    return function (i, a, s) {
      var f = i._values,
        l = i._index,
        p = i._ptr,
        u = i._size,
        o = i._datatype,
        c = a._values,
        m = a._index,
        v = a._ptr,
        d = a._size,
        N = a._datatype;
      if (u.length !== d.length) throw new De(u.length, d.length);
      if (u[0] !== d[0] || u[1] !== d[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            u +
            ") must match Matrix B (" +
            d +
            ")"
        );
      var g = u[0],
        w = u[1],
        h,
        x = t,
        b = 0,
        y = s;
      typeof o == "string" &&
        o === N &&
        ((h = o),
        (x = r.find(t, [h, h])),
        (b = r.convert(0, h)),
        (y = r.find(s, [h, h])));
      var A = f && c ? [] : void 0,
        S = [],
        E = [],
        M = f && c ? [] : void 0,
        _ = f && c ? [] : void 0,
        C = [],
        I = [],
        L,
        $,
        D,
        B,
        R;
      for ($ = 0; $ < w; $++) {
        E[$] = S.length;
        var T = $ + 1;
        for (B = p[$], R = p[$ + 1], D = B; D < R; D++)
          (L = l[D]), S.push(L), (C[L] = T), M && (M[L] = f[D]);
        for (B = v[$], R = v[$ + 1], D = B; D < R; D++)
          if (((L = m[D]), C[L] === T)) {
            if (M) {
              var P = y(M[L], c[D]);
              x(P, b) ? (C[L] = null) : (M[L] = P);
            }
          } else S.push(L), (I[L] = T), _ && (_[L] = c[D]);
        if (M && _)
          for (D = E[$]; D < S.length; )
            (L = S[D]),
              C[L] === T
                ? ((A[D] = M[L]), D++)
                : I[L] === T
                ? ((A[D] = _[L]), D++)
                : S.splice(D, 1);
      }
      return (
        (E[w] = S.length),
        i.createSparseMatrix({
          values: A,
          index: S,
          ptr: E,
          size: [g, w],
          datatype: h,
        })
      );
    };
  }),
  NS = "algorithm10",
  MS = ["typed", "DenseMatrix"],
  ri = F(NS, MS, (e) => {
    var { typed: r, DenseMatrix: t } = e;
    return function (i, a, s, f) {
      var l = i._values,
        p = i._index,
        u = i._ptr,
        o = i._size,
        c = i._datatype;
      if (!l)
        throw new Error(
          "Cannot perform operation on Pattern Sparse Matrix and Scalar value"
        );
      var m = o[0],
        v = o[1],
        d,
        N = s;
      typeof c == "string" &&
        ((d = c), (a = r.convert(a, d)), (N = r.find(s, [d, d])));
      for (var g = [], w = [], h = [], x = 0; x < v; x++) {
        for (var b = x + 1, y = u[x], A = u[x + 1], S = y; S < A; S++) {
          var E = p[S];
          (w[E] = l[S]), (h[E] = b);
        }
        for (var M = 0; M < m; M++)
          x === 0 && (g[M] = []),
            h[M] === b
              ? (g[M][x] = f ? N(a, w[M]) : N(w[M], a))
              : (g[M][x] = a);
      }
      return new t({ data: g, size: [m, v], datatype: d });
    };
  }),
  SS = "algorithm13",
  AS = ["typed"],
  Xe = F(SS, AS, (e) => {
    var { typed: r } = e;
    return function (i, a, s) {
      var f = i._data,
        l = i._size,
        p = i._datatype,
        u = a._data,
        o = a._size,
        c = a._datatype,
        m = [];
      if (l.length !== o.length) throw new De(l.length, o.length);
      for (var v = 0; v < l.length; v++) {
        if (l[v] !== o[v])
          throw new RangeError(
            "Dimension mismatch. Matrix A (" +
              l +
              ") must match Matrix B (" +
              o +
              ")"
          );
        m[v] = l[v];
      }
      var d,
        N = s;
      typeof p == "string" && p === c && ((d = p), (N = r.find(s, [d, d])));
      var g = m.length > 0 ? t(N, 0, m, m[0], f, u) : [];
      return i.createDenseMatrix({ data: g, size: m, datatype: d });
    };
    function t(n, i, a, s, f, l) {
      var p = [];
      if (i === a.length - 1) for (var u = 0; u < s; u++) p[u] = n(f[u], l[u]);
      else
        for (var o = 0; o < s; o++) p[o] = t(n, i + 1, a, a[i + 1], f[o], l[o]);
      return p;
    }
  }),
  tm = "gcd",
  ES = ["typed", "matrix", "equalScalar", "BigNumber", "DenseMatrix"],
  CS = F(tm, ES, (e) => {
    var {
        typed: r,
        matrix: t,
        equalScalar: n,
        BigNumber: i,
        DenseMatrix: a,
      } = e,
      s = $n({ typed: r }),
      f = Zc({ typed: r, equalScalar: n }),
      l = ri({ typed: r, DenseMatrix: a }),
      p = Xe({ typed: r }),
      u = ke({ typed: r });
    return r(tm, {
      "number, number": B0,
      "BigNumber, BigNumber": o,
      "Fraction, Fraction": function (m, v) {
        return m.gcd(v);
      },
      "SparseMatrix, SparseMatrix": function (m, v) {
        return f(m, v, this);
      },
      "SparseMatrix, DenseMatrix": function (m, v) {
        return s(v, m, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (m, v) {
        return s(m, v, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (m, v) {
        return p(m, v, this);
      },
      "Array, Array": function (m, v) {
        return this(t(m), t(v)).valueOf();
      },
      "Array, Matrix": function (m, v) {
        return this(t(m), v);
      },
      "Matrix, Array": function (m, v) {
        return this(m, t(v));
      },
      "SparseMatrix, number | BigNumber": function (m, v) {
        return l(m, v, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (m, v) {
        return u(m, v, this, !1);
      },
      "number | BigNumber, SparseMatrix": function (m, v) {
        return l(v, m, this, !0);
      },
      "number | BigNumber, DenseMatrix": function (m, v) {
        return u(v, m, this, !0);
      },
      "Array, number | BigNumber": function (m, v) {
        return u(t(m), v, this, !1).valueOf();
      },
      "number | BigNumber, Array": function (m, v) {
        return u(t(v), m, this, !0).valueOf();
      },
      "Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":
        function (m, v, d) {
          for (var N = this(m, v), g = 0; g < d.length; g++) N = this(N, d[g]);
          return N;
        },
    });
    function o(c, m) {
      if (!c.isInt() || !m.isInt())
        throw new Error("Parameters in function gcd must be integer numbers");
      for (var v = new i(0); !m.isZero(); ) {
        var d = c.mod(m);
        (c = m), (m = d);
      }
      return c.lt(v) ? c.neg() : c;
    }
  }),
  OS = "algorithm02",
  TS = ["typed", "equalScalar"],
  Et = F(OS, TS, (e) => {
    var { typed: r, equalScalar: t } = e;
    return function (i, a, s, f) {
      var l = i._data,
        p = i._size,
        u = i._datatype,
        o = a._values,
        c = a._index,
        m = a._ptr,
        v = a._size,
        d = a._datatype;
      if (p.length !== v.length) throw new De(p.length, v.length);
      if (p[0] !== v[0] || p[1] !== v[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            p +
            ") must match Matrix B (" +
            v +
            ")"
        );
      if (!o)
        throw new Error(
          "Cannot perform operation on Dense Matrix and Pattern Sparse Matrix"
        );
      var N = p[0],
        g = p[1],
        w,
        h = t,
        x = 0,
        b = s;
      typeof u == "string" &&
        u === d &&
        ((w = u),
        (h = r.find(t, [w, w])),
        (x = r.convert(0, w)),
        (b = r.find(s, [w, w])));
      for (var y = [], A = [], S = [], E = 0; E < g; E++) {
        S[E] = A.length;
        for (var M = m[E], _ = m[E + 1], C = M; C < _; C++) {
          var I = c[C],
            L = f ? b(o[C], l[I][E]) : b(l[I][E], o[C]);
          h(L, x) || (A.push(I), y.push(L));
        }
      }
      return (
        (S[g] = A.length),
        a.createSparseMatrix({
          values: y,
          index: A,
          ptr: S,
          size: [N, g],
          datatype: w,
        })
      );
    };
  }),
  DS = "algorithm06",
  _S = ["typed", "equalScalar"],
  Qs = F(DS, _S, (e) => {
    var { typed: r, equalScalar: t } = e;
    return function (i, a, s) {
      var f = i._values,
        l = i._size,
        p = i._datatype,
        u = a._values,
        o = a._size,
        c = a._datatype;
      if (l.length !== o.length) throw new De(l.length, o.length);
      if (l[0] !== o[0] || l[1] !== o[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            l +
            ") must match Matrix B (" +
            o +
            ")"
        );
      var m = l[0],
        v = l[1],
        d,
        N = t,
        g = 0,
        w = s;
      typeof p == "string" &&
        p === c &&
        ((d = p),
        (N = r.find(t, [d, d])),
        (g = r.convert(0, d)),
        (w = r.find(s, [d, d])));
      for (
        var h = f && u ? [] : void 0,
          x = [],
          b = [],
          y = h ? [] : void 0,
          A = [],
          S = [],
          E = 0;
        E < v;
        E++
      ) {
        b[E] = x.length;
        var M = E + 1;
        if ((Op(i, E, A, y, S, M, x, w), Op(a, E, A, y, S, M, x, w), y))
          for (var _ = b[E]; _ < x.length; ) {
            var C = x[_];
            if (S[C] === M) {
              var I = y[C];
              N(I, g) ? x.splice(_, 1) : (h.push(I), _++);
            } else x.splice(_, 1);
          }
        else
          for (var L = b[E]; L < x.length; ) {
            var $ = x[L];
            S[$] !== M ? x.splice(L, 1) : L++;
          }
      }
      return (
        (b[v] = x.length),
        i.createSparseMatrix({
          values: h,
          index: x,
          ptr: b,
          size: [m, v],
          datatype: d,
        })
      );
    };
  }),
  nm = "lcm",
  BS = ["typed", "matrix", "equalScalar"],
  IS = F(nm, BS, (e) => {
    var { typed: r, matrix: t, equalScalar: n } = e,
      i = Et({ typed: r, equalScalar: n }),
      a = Qs({ typed: r, equalScalar: n }),
      s = Sr({ typed: r, equalScalar: n }),
      f = Xe({ typed: r }),
      l = ke({ typed: r });
    return r(nm, {
      "number, number": I0,
      "BigNumber, BigNumber": p,
      "Fraction, Fraction": function (o, c) {
        return o.lcm(c);
      },
      "SparseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, this);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return i(c, o, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return i(o, c, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return f(o, c, this);
      },
      "Array, Array": function (o, c) {
        return this(t(o), t(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(t(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, t(c));
      },
      "SparseMatrix, number | BigNumber": function (o, c) {
        return s(o, c, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (o, c) {
        return l(o, c, this, !1);
      },
      "number | BigNumber, SparseMatrix": function (o, c) {
        return s(c, o, this, !0);
      },
      "number | BigNumber, DenseMatrix": function (o, c) {
        return l(c, o, this, !0);
      },
      "Array, number | BigNumber": function (o, c) {
        return l(t(o), c, this, !1).valueOf();
      },
      "number | BigNumber, Array": function (o, c) {
        return l(t(c), o, this, !0).valueOf();
      },
      "Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":
        function (o, c, m) {
          for (var v = this(o, c), d = 0; d < m.length; d++) v = this(v, m[d]);
          return v;
        },
    });
    function p(u, o) {
      if (!u.isInt() || !o.isInt())
        throw new Error("Parameters in function lcm must be integer numbers");
      if (u.isZero()) return u;
      if (o.isZero()) return o;
      for (var c = u.times(o); !o.isZero(); ) {
        var m = o;
        (o = u.mod(m)), (u = m);
      }
      return c.div(u).abs();
    }
  }),
  im = "log10",
  $S = ["typed", "config", "Complex"],
  zS = F(im, $S, (e) => {
    var { typed: r, config: t, Complex: n } = e;
    return r(im, {
      number: function (a) {
        return a >= 0 || t.predictable
          ? $0(a)
          : new n(a, 0).log().div(Math.LN10);
      },
      Complex: function (a) {
        return new n(a).log().div(Math.LN10);
      },
      BigNumber: function (a) {
        return !a.isNegative() || t.predictable
          ? a.log()
          : new n(a.toNumber(), 0).log().div(Math.LN10);
      },
      "Array | Matrix": function (a) {
        return ye(a, this);
      },
    });
  }),
  am = "log2",
  RS = ["typed", "config", "Complex"],
  FS = F(am, RS, (e) => {
    var { typed: r, config: t, Complex: n } = e;
    return r(am, {
      number: function (s) {
        return s >= 0 || t.predictable ? z0(s) : i(new n(s, 0));
      },
      Complex: i,
      BigNumber: function (s) {
        return !s.isNegative() || t.predictable
          ? s.log(2)
          : i(new n(s.toNumber(), 0));
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
    });
    function i(a) {
      var s = Math.sqrt(a.re * a.re + a.im * a.im);
      return new n(
        Math.log2 ? Math.log2(s) : Math.log(s) / Math.LN2,
        Math.atan2(a.im, a.re) / Math.LN2
      );
    }
  }),
  PS = "algorithm03",
  LS = ["typed"],
  Lr = F(PS, LS, (e) => {
    var { typed: r } = e;
    return function (n, i, a, s) {
      var f = n._data,
        l = n._size,
        p = n._datatype,
        u = i._values,
        o = i._index,
        c = i._ptr,
        m = i._size,
        v = i._datatype;
      if (l.length !== m.length) throw new De(l.length, m.length);
      if (l[0] !== m[0] || l[1] !== m[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            l +
            ") must match Matrix B (" +
            m +
            ")"
        );
      if (!u)
        throw new Error(
          "Cannot perform operation on Dense Matrix and Pattern Sparse Matrix"
        );
      var d = l[0],
        N = l[1],
        g,
        w = 0,
        h = a;
      typeof p == "string" &&
        p === v &&
        ((g = p), (w = r.convert(0, g)), (h = r.find(a, [g, g])));
      for (var x = [], b = 0; b < d; b++) x[b] = [];
      for (var y = [], A = [], S = 0; S < N; S++) {
        for (var E = S + 1, M = c[S], _ = c[S + 1], C = M; C < _; C++) {
          var I = o[C];
          (y[I] = s ? h(u[C], f[I][S]) : h(f[I][S], u[C])), (A[I] = E);
        }
        for (var L = 0; L < d; L++)
          A[L] === E
            ? (x[L][S] = y[L])
            : (x[L][S] = s ? h(w, f[L][S]) : h(f[L][S], w));
      }
      return n.createDenseMatrix({ data: x, size: [d, N], datatype: g });
    };
  }),
  kS = "algorithm05",
  US = ["typed", "equalScalar"],
  Ys = F(kS, US, (e) => {
    var { typed: r, equalScalar: t } = e;
    return function (i, a, s) {
      var f = i._values,
        l = i._index,
        p = i._ptr,
        u = i._size,
        o = i._datatype,
        c = a._values,
        m = a._index,
        v = a._ptr,
        d = a._size,
        N = a._datatype;
      if (u.length !== d.length) throw new De(u.length, d.length);
      if (u[0] !== d[0] || u[1] !== d[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            u +
            ") must match Matrix B (" +
            d +
            ")"
        );
      var g = u[0],
        w = u[1],
        h,
        x = t,
        b = 0,
        y = s;
      typeof o == "string" &&
        o === N &&
        ((h = o),
        (x = r.find(t, [h, h])),
        (b = r.convert(0, h)),
        (y = r.find(s, [h, h])));
      var A = f && c ? [] : void 0,
        S = [],
        E = [],
        M = A ? [] : void 0,
        _ = A ? [] : void 0,
        C = [],
        I = [],
        L,
        $,
        D,
        B;
      for ($ = 0; $ < w; $++) {
        E[$] = S.length;
        var R = $ + 1;
        for (D = p[$], B = p[$ + 1]; D < B; D++)
          (L = l[D]), S.push(L), (C[L] = R), M && (M[L] = f[D]);
        for (D = v[$], B = v[$ + 1]; D < B; D++)
          (L = m[D]), C[L] !== R && S.push(L), (I[L] = R), _ && (_[L] = c[D]);
        if (A)
          for (D = E[$]; D < S.length; ) {
            L = S[D];
            var T = C[L],
              P = I[L];
            if (T === R || P === R) {
              var W = T === R ? M[L] : b,
                J = P === R ? _[L] : b,
                G = y(W, J);
              x(G, b) ? S.splice(D, 1) : (A.push(G), D++);
            }
          }
      }
      return (
        (E[w] = S.length),
        i.createSparseMatrix({
          values: A,
          index: S,
          ptr: E,
          size: [g, w],
          datatype: h,
        })
      );
    };
  }),
  om = "mod",
  qS = ["typed", "matrix", "equalScalar", "DenseMatrix"],
  HS = F(om, qS, (e) => {
    var { typed: r, matrix: t, equalScalar: n, DenseMatrix: i } = e,
      a = Et({ typed: r, equalScalar: n }),
      s = Lr({ typed: r }),
      f = Ys({ typed: r, equalScalar: n }),
      l = Sr({ typed: r, equalScalar: n }),
      p = xr({ typed: r, DenseMatrix: i }),
      u = Xe({ typed: r }),
      o = ke({ typed: r });
    return r(om, {
      "number, number": R0,
      "BigNumber, BigNumber": function (m, v) {
        if (v.isNeg())
          throw new Error("Cannot calculate mod for a negative divisor");
        return v.isZero() ? m : m.mod(v);
      },
      "Fraction, Fraction": function (m, v) {
        if (v.compare(0) < 0)
          throw new Error("Cannot calculate mod for a negative divisor");
        return m.compare(0) >= 0 ? m.mod(v) : m.mod(v).add(v).mod(v);
      },
      "SparseMatrix, SparseMatrix": function (m, v) {
        return f(m, v, this, !1);
      },
      "SparseMatrix, DenseMatrix": function (m, v) {
        return a(v, m, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (m, v) {
        return s(m, v, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (m, v) {
        return u(m, v, this);
      },
      "Array, Array": function (m, v) {
        return this(t(m), t(v)).valueOf();
      },
      "Array, Matrix": function (m, v) {
        return this(t(m), v);
      },
      "Matrix, Array": function (m, v) {
        return this(m, t(v));
      },
      "SparseMatrix, any": function (m, v) {
        return l(m, v, this, !1);
      },
      "DenseMatrix, any": function (m, v) {
        return o(m, v, this, !1);
      },
      "any, SparseMatrix": function (m, v) {
        return p(v, m, this, !0);
      },
      "any, DenseMatrix": function (m, v) {
        return o(v, m, this, !0);
      },
      "Array, any": function (m, v) {
        return o(t(m), v, this, !1).valueOf();
      },
      "any, Array": function (m, v) {
        return o(t(v), m, this, !0).valueOf();
      },
    });
  }),
  VS = "multiplyScalar",
  GS = ["typed"],
  WS = F(VS, GS, (e) => {
    var { typed: r } = e;
    return r("multiplyScalar", {
      "number, number": E0,
      "Complex, Complex": function (n, i) {
        return n.mul(i);
      },
      "BigNumber, BigNumber": function (n, i) {
        return n.times(i);
      },
      "Fraction, Fraction": function (n, i) {
        return n.mul(i);
      },
      "number | Fraction | BigNumber | Complex, Unit": function (n, i) {
        var a = i.clone();
        return (
          (a.value = a.value === null ? a._normalize(n) : this(a.value, n)), a
        );
      },
      "Unit, number | Fraction | BigNumber | Complex": function (n, i) {
        var a = n.clone();
        return (
          (a.value = a.value === null ? a._normalize(i) : this(a.value, i)), a
        );
      },
      "Unit, Unit": function (n, i) {
        return n.multiply(i);
      },
    });
  }),
  sm = "multiply",
  ZS = ["typed", "matrix", "addScalar", "multiplyScalar", "equalScalar", "dot"],
  QS = F(sm, ZS, (e) => {
    var {
        typed: r,
        matrix: t,
        addScalar: n,
        multiplyScalar: i,
        equalScalar: a,
        dot: s,
      } = e,
      f = Sr({ typed: r, equalScalar: a }),
      l = ke({ typed: r });
    function p(b, y) {
      switch (b.length) {
        case 1:
          switch (y.length) {
            case 1:
              if (b[0] !== y[0])
                throw new RangeError(
                  "Dimension mismatch in multiplication. Vectors must have the same length"
                );
              break;
            case 2:
              if (b[0] !== y[0])
                throw new RangeError(
                  "Dimension mismatch in multiplication. Vector length (" +
                    b[0] +
                    ") must match Matrix rows (" +
                    y[0] +
                    ")"
                );
              break;
            default:
              throw new Error(
                "Can only multiply a 1 or 2 dimensional matrix (Matrix B has " +
                  y.length +
                  " dimensions)"
              );
          }
          break;
        case 2:
          switch (y.length) {
            case 1:
              if (b[1] !== y[0])
                throw new RangeError(
                  "Dimension mismatch in multiplication. Matrix columns (" +
                    b[1] +
                    ") must match Vector length (" +
                    y[0] +
                    ")"
                );
              break;
            case 2:
              if (b[1] !== y[0])
                throw new RangeError(
                  "Dimension mismatch in multiplication. Matrix A columns (" +
                    b[1] +
                    ") must match Matrix B rows (" +
                    y[0] +
                    ")"
                );
              break;
            default:
              throw new Error(
                "Can only multiply a 1 or 2 dimensional matrix (Matrix B has " +
                  y.length +
                  " dimensions)"
              );
          }
          break;
        default:
          throw new Error(
            "Can only multiply a 1 or 2 dimensional matrix (Matrix A has " +
              b.length +
              " dimensions)"
          );
      }
    }
    function u(b, y, A) {
      if (A === 0) throw new Error("Cannot multiply two empty vectors");
      return s(b, y);
    }
    function o(b, y) {
      if (y.storage() !== "dense")
        throw new Error("Support for SparseMatrix not implemented");
      return c(b, y);
    }
    function c(b, y) {
      var A = b._data,
        S = b._size,
        E = b._datatype,
        M = y._data,
        _ = y._size,
        C = y._datatype,
        I = S[0],
        L = _[1],
        $,
        D = n,
        B = i;
      E &&
        C &&
        E === C &&
        typeof E == "string" &&
        (($ = E), (D = r.find(n, [$, $])), (B = r.find(i, [$, $])));
      for (var R = [], T = 0; T < L; T++) {
        for (var P = B(A[0], M[0][T]), W = 1; W < I; W++)
          P = D(P, B(A[W], M[W][T]));
        R[T] = P;
      }
      return b.createDenseMatrix({ data: R, size: [L], datatype: $ });
    }
    var m = r("_multiplyMatrixVector", {
        "DenseMatrix, any": d,
        "SparseMatrix, any": w,
      }),
      v = r("_multiplyMatrixMatrix", {
        "DenseMatrix, DenseMatrix": N,
        "DenseMatrix, SparseMatrix": g,
        "SparseMatrix, DenseMatrix": h,
        "SparseMatrix, SparseMatrix": x,
      });
    function d(b, y) {
      var A = b._data,
        S = b._size,
        E = b._datatype,
        M = y._data,
        _ = y._datatype,
        C = S[0],
        I = S[1],
        L,
        $ = n,
        D = i;
      E &&
        _ &&
        E === _ &&
        typeof E == "string" &&
        ((L = E), ($ = r.find(n, [L, L])), (D = r.find(i, [L, L])));
      for (var B = [], R = 0; R < C; R++) {
        for (var T = A[R], P = D(T[0], M[0]), W = 1; W < I; W++)
          P = $(P, D(T[W], M[W]));
        B[R] = P;
      }
      return b.createDenseMatrix({ data: B, size: [C], datatype: L });
    }
    function N(b, y) {
      var A = b._data,
        S = b._size,
        E = b._datatype,
        M = y._data,
        _ = y._size,
        C = y._datatype,
        I = S[0],
        L = S[1],
        $ = _[1],
        D,
        B = n,
        R = i;
      E &&
        C &&
        E === C &&
        typeof E == "string" &&
        ((D = E), (B = r.find(n, [D, D])), (R = r.find(i, [D, D])));
      for (var T = [], P = 0; P < I; P++) {
        var W = A[P];
        T[P] = [];
        for (var J = 0; J < $; J++) {
          for (var G = R(W[0], M[0][J]), Y = 1; Y < L; Y++)
            G = B(G, R(W[Y], M[Y][J]));
          T[P][J] = G;
        }
      }
      return b.createDenseMatrix({ data: T, size: [I, $], datatype: D });
    }
    function g(b, y) {
      var A = b._data,
        S = b._size,
        E = b._datatype,
        M = y._values,
        _ = y._index,
        C = y._ptr,
        I = y._size,
        L = y._datatype;
      if (!M)
        throw new Error(
          "Cannot multiply Dense Matrix times Pattern only Matrix"
        );
      var $ = S[0],
        D = I[1],
        B,
        R = n,
        T = i,
        P = a,
        W = 0;
      E &&
        L &&
        E === L &&
        typeof E == "string" &&
        ((B = E),
        (R = r.find(n, [B, B])),
        (T = r.find(i, [B, B])),
        (P = r.find(a, [B, B])),
        (W = r.convert(0, B)));
      for (
        var J = [],
          G = [],
          Y = [],
          re = y.createSparseMatrix({
            values: J,
            index: G,
            ptr: Y,
            size: [$, D],
            datatype: B,
          }),
          K = 0;
        K < D;
        K++
      ) {
        Y[K] = G.length;
        var ie = C[K],
          te = C[K + 1];
        if (te > ie)
          for (var oe = 0, ee = 0; ee < $; ee++) {
            for (var de = ee + 1, xe = void 0, ce = ie; ce < te; ce++) {
              var he = _[ce];
              oe !== de
                ? ((xe = T(A[ee][he], M[ce])), (oe = de))
                : (xe = R(xe, T(A[ee][he], M[ce])));
            }
            oe === de && !P(xe, W) && (G.push(ee), J.push(xe));
          }
      }
      return (Y[D] = G.length), re;
    }
    function w(b, y) {
      var A = b._values,
        S = b._index,
        E = b._ptr,
        M = b._datatype;
      if (!A)
        throw new Error(
          "Cannot multiply Pattern only Matrix times Dense Matrix"
        );
      var _ = y._data,
        C = y._datatype,
        I = b._size[0],
        L = y._size[0],
        $ = [],
        D = [],
        B = [],
        R,
        T = n,
        P = i,
        W = a,
        J = 0;
      M &&
        C &&
        M === C &&
        typeof M == "string" &&
        ((R = M),
        (T = r.find(n, [R, R])),
        (P = r.find(i, [R, R])),
        (W = r.find(a, [R, R])),
        (J = r.convert(0, R)));
      var G = [],
        Y = [];
      B[0] = 0;
      for (var re = 0; re < L; re++) {
        var K = _[re];
        if (!W(K, J))
          for (var ie = E[re], te = E[re + 1], oe = ie; oe < te; oe++) {
            var ee = S[oe];
            Y[ee]
              ? (G[ee] = T(G[ee], P(K, A[oe])))
              : ((Y[ee] = !0), D.push(ee), (G[ee] = P(K, A[oe])));
          }
      }
      for (var de = D.length, xe = 0; xe < de; xe++) {
        var ce = D[xe];
        $[xe] = G[ce];
      }
      return (
        (B[1] = D.length),
        b.createSparseMatrix({
          values: $,
          index: D,
          ptr: B,
          size: [I, 1],
          datatype: R,
        })
      );
    }
    function h(b, y) {
      var A = b._values,
        S = b._index,
        E = b._ptr,
        M = b._datatype;
      if (!A)
        throw new Error(
          "Cannot multiply Pattern only Matrix times Dense Matrix"
        );
      var _ = y._data,
        C = y._datatype,
        I = b._size[0],
        L = y._size[0],
        $ = y._size[1],
        D,
        B = n,
        R = i,
        T = a,
        P = 0;
      M &&
        C &&
        M === C &&
        typeof M == "string" &&
        ((D = M),
        (B = r.find(n, [D, D])),
        (R = r.find(i, [D, D])),
        (T = r.find(a, [D, D])),
        (P = r.convert(0, D)));
      for (
        var W = [],
          J = [],
          G = [],
          Y = b.createSparseMatrix({
            values: W,
            index: J,
            ptr: G,
            size: [I, $],
            datatype: D,
          }),
          re = [],
          K = [],
          ie = 0;
        ie < $;
        ie++
      ) {
        G[ie] = J.length;
        for (var te = ie + 1, oe = 0; oe < L; oe++) {
          var ee = _[oe][ie];
          if (!T(ee, P))
            for (var de = E[oe], xe = E[oe + 1], ce = de; ce < xe; ce++) {
              var he = S[ce];
              K[he] !== te
                ? ((K[he] = te), J.push(he), (re[he] = R(ee, A[ce])))
                : (re[he] = B(re[he], R(ee, A[ce])));
            }
        }
        for (var k = G[ie], Q = J.length, V = k; V < Q; V++) {
          var q = J[V];
          W[V] = re[q];
        }
      }
      return (G[$] = J.length), Y;
    }
    function x(b, y) {
      var A = b._values,
        S = b._index,
        E = b._ptr,
        M = b._datatype,
        _ = y._values,
        C = y._index,
        I = y._ptr,
        L = y._datatype,
        $ = b._size[0],
        D = y._size[1],
        B = A && _,
        R,
        T = n,
        P = i;
      M &&
        L &&
        M === L &&
        typeof M == "string" &&
        ((R = M), (T = r.find(n, [R, R])), (P = r.find(i, [R, R])));
      for (
        var W = B ? [] : void 0,
          J = [],
          G = [],
          Y = b.createSparseMatrix({
            values: W,
            index: J,
            ptr: G,
            size: [$, D],
            datatype: R,
          }),
          re = B ? [] : void 0,
          K = [],
          ie,
          te,
          oe,
          ee,
          de,
          xe,
          ce,
          he,
          k = 0;
        k < D;
        k++
      ) {
        G[k] = J.length;
        var Q = k + 1;
        for (de = I[k], xe = I[k + 1], ee = de; ee < xe; ee++)
          if (((he = C[ee]), B))
            for (te = E[he], oe = E[he + 1], ie = te; ie < oe; ie++)
              (ce = S[ie]),
                K[ce] !== Q
                  ? ((K[ce] = Q), J.push(ce), (re[ce] = P(_[ee], A[ie])))
                  : (re[ce] = T(re[ce], P(_[ee], A[ie])));
          else
            for (te = E[he], oe = E[he + 1], ie = te; ie < oe; ie++)
              (ce = S[ie]), K[ce] !== Q && ((K[ce] = Q), J.push(ce));
        if (B)
          for (var V = G[k], q = J.length, X = V; X < q; X++) {
            var z = J[X];
            W[X] = re[z];
          }
      }
      return (G[D] = J.length), Y;
    }
    return r(
      sm,
      Pc(
        {
          "Array, Array": function (y, A) {
            p(Ie(y), Ie(A));
            var S = this(t(y), t(A));
            return Ae(S) ? S.valueOf() : S;
          },
          "Matrix, Matrix": function (y, A) {
            var S = y.size(),
              E = A.size();
            return (
              p(S, E),
              S.length === 1
                ? E.length === 1
                  ? u(y, A, S[0])
                  : o(y, A)
                : E.length === 1
                ? m(y, A)
                : v(y, A)
            );
          },
          "Matrix, Array": function (y, A) {
            return this(y, t(A));
          },
          "Array, Matrix": function (y, A) {
            return this(t(y, A.storage()), A);
          },
          "SparseMatrix, any": function (y, A) {
            return f(y, A, i, !1);
          },
          "DenseMatrix, any": function (y, A) {
            return l(y, A, i, !1);
          },
          "any, SparseMatrix": function (y, A) {
            return f(A, y, i, !0);
          },
          "any, DenseMatrix": function (y, A) {
            return l(A, y, i, !0);
          },
          "Array, any": function (y, A) {
            return l(t(y), A, i, !1).valueOf();
          },
          "any, Array": function (y, A) {
            return l(t(A), y, i, !0).valueOf();
          },
          "any, any": i,
          "any, any, ...any": function (y, A, S) {
            for (var E = this(y, A), M = 0; M < S.length; M++)
              E = this(E, S[M]);
            return E;
          },
        },
        i.signatures
      )
    );
  }),
  um = "nthRoot",
  YS = ["typed", "matrix", "equalScalar", "BigNumber"],
  XS = F(um, YS, (e) => {
    var { typed: r, matrix: t, equalScalar: n, BigNumber: i } = e,
      a = $n({ typed: r }),
      s = Et({ typed: r, equalScalar: n }),
      f = Qs({ typed: r, equalScalar: n }),
      l = Sr({ typed: r, equalScalar: n }),
      p = Xe({ typed: r }),
      u = ke({ typed: r }),
      o =
        "Complex number not supported in function nthRoot. Use nthRoots instead.";
    return r(um, {
      number: Dp,
      "number, number": Dp,
      BigNumber: function (v) {
        return c(v, new i(2));
      },
      Complex: function (v) {
        throw new Error(o);
      },
      "Complex, number": function (v, d) {
        throw new Error(o);
      },
      "BigNumber, BigNumber": c,
      "Array | Matrix": function (v) {
        return this(v, 2);
      },
      "SparseMatrix, SparseMatrix": function (v, d) {
        if (d.density() === 1) return f(v, d, this);
        throw new Error("Root must be non-zero");
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return s(d, v, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        if (d.density() === 1) return a(v, d, this, !1);
        throw new Error("Root must be non-zero");
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return p(v, d, this);
      },
      "Array, Array": function (v, d) {
        return this(t(v), t(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(t(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, t(d));
      },
      "SparseMatrix, number | BigNumber": function (v, d) {
        return l(v, d, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (v, d) {
        return u(v, d, this, !1);
      },
      "number | BigNumber, SparseMatrix": function (v, d) {
        if (d.density() === 1) return l(d, v, this, !0);
        throw new Error("Root must be non-zero");
      },
      "number | BigNumber, DenseMatrix": function (v, d) {
        return u(d, v, this, !0);
      },
      "Array, number | BigNumber": function (v, d) {
        return this(t(v), d).valueOf();
      },
      "number | BigNumber, Array": function (v, d) {
        return this(v, t(d)).valueOf();
      },
    });
    function c(m, v) {
      var d = i.precision,
        N = i.clone({ precision: d + 2 }),
        g = new i(0),
        w = new N(1),
        h = v.isNegative();
      if ((h && (v = v.neg()), v.isZero()))
        throw new Error("Root must be non-zero");
      if (m.isNegative() && !v.abs().mod(2).equals(1))
        throw new Error("Root must be odd when a is negative.");
      if (m.isZero()) return h ? new N(1 / 0) : 0;
      if (!m.isFinite()) return h ? g : m;
      var x = m.abs().pow(w.div(v));
      return (
        (x = m.isNeg() ? x.neg() : x), new i((h ? w.div(x) : x).toPrecision(d))
      );
    }
  }),
  lm = "sign",
  jS = ["typed", "BigNumber", "Fraction", "complex"],
  JS = F(lm, jS, (e) => {
    var { typed: r, BigNumber: t, complex: n, Fraction: i } = e;
    return r(lm, {
      number: $l,
      Complex: function (s) {
        return s.im === 0 ? n($l(s.re)) : s.sign();
      },
      BigNumber: function (s) {
        return new t(s.cmp(0));
      },
      Fraction: function (s) {
        return new i(s.s, 1);
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
      Unit: function (s) {
        if (!s._isDerived() && s.units[0].unit.offset !== 0)
          throw new TypeError("sign is ambiguous for units with offset");
        return this(s.value);
      },
    });
  }),
  KS = "sqrt",
  eA = ["config", "typed", "Complex"],
  rA = F(KS, eA, (e) => {
    var { config: r, typed: t, Complex: n } = e;
    return t("sqrt", {
      number: i,
      Complex: function (s) {
        return s.sqrt();
      },
      BigNumber: function (s) {
        return !s.isNegative() || r.predictable ? s.sqrt() : i(s.toNumber());
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
      Unit: function (s) {
        return s.pow(0.5);
      },
    });
    function i(a) {
      return isNaN(a)
        ? NaN
        : a >= 0 || r.predictable
        ? Math.sqrt(a)
        : new n(a, 0).sqrt();
    }
  }),
  cm = "square",
  tA = ["typed"],
  nA = F(cm, tA, (e) => {
    var { typed: r } = e;
    return r(cm, {
      number: F0,
      Complex: function (n) {
        return n.mul(n);
      },
      BigNumber: function (n) {
        return n.times(n);
      },
      Fraction: function (n) {
        return n.mul(n);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
      Unit: function (n) {
        return n.pow(2);
      },
    });
  }),
  fm = "subtract",
  iA = [
    "typed",
    "matrix",
    "equalScalar",
    "addScalar",
    "unaryMinus",
    "DenseMatrix",
  ],
  aA = F(fm, iA, (e) => {
    var {
        typed: r,
        matrix: t,
        equalScalar: n,
        addScalar: i,
        unaryMinus: a,
        DenseMatrix: s,
      } = e,
      f = $n({ typed: r }),
      l = Lr({ typed: r }),
      p = Ys({ typed: r, equalScalar: n }),
      u = ri({ typed: r, DenseMatrix: s }),
      o = Xe({ typed: r }),
      c = ke({ typed: r });
    return r(fm, {
      "number, number": function (v, d) {
        return v - d;
      },
      "Complex, Complex": function (v, d) {
        return v.sub(d);
      },
      "BigNumber, BigNumber": function (v, d) {
        return v.minus(d);
      },
      "Fraction, Fraction": function (v, d) {
        return v.sub(d);
      },
      "Unit, Unit": function (v, d) {
        if (v.value === null)
          throw new Error("Parameter x contains a unit with undefined value");
        if (d.value === null)
          throw new Error("Parameter y contains a unit with undefined value");
        if (!v.equalBase(d)) throw new Error("Units do not match");
        var N = v.clone();
        return (N.value = this(N.value, d.value)), (N.fixPrefix = !1), N;
      },
      "SparseMatrix, SparseMatrix": function (v, d) {
        return Mo(v, d), p(v, d, this);
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return Mo(v, d), l(d, v, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        return Mo(v, d), f(v, d, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return Mo(v, d), o(v, d, this);
      },
      "Array, Array": function (v, d) {
        return this(t(v), t(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(t(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, t(d));
      },
      "SparseMatrix, any": function (v, d) {
        return u(v, a(d), i);
      },
      "DenseMatrix, any": function (v, d) {
        return c(v, d, this);
      },
      "any, SparseMatrix": function (v, d) {
        return u(d, v, this, !0);
      },
      "any, DenseMatrix": function (v, d) {
        return c(d, v, this, !0);
      },
      "Array, any": function (v, d) {
        return c(t(v), d, this, !1).valueOf();
      },
      "any, Array": function (v, d) {
        return c(t(d), v, this, !0).valueOf();
      },
    });
  });
function Mo(e, r) {
  var t = e.size(),
    n = r.size();
  if (t.length !== n.length) throw new De(t.length, n.length);
}
var pm = "xgcd",
  oA = ["typed", "config", "matrix", "BigNumber"],
  sA = F(pm, oA, (e) => {
    var { typed: r, config: t, matrix: n, BigNumber: i } = e;
    return r(pm, {
      "number, number": function (f, l) {
        var p = P0(f, l);
        return t.matrix === "Array" ? p : n(p);
      },
      "BigNumber, BigNumber": a,
    });
    function a(s, f) {
      var l,
        p,
        u,
        o = new i(0),
        c = new i(1),
        m = o,
        v = c,
        d = c,
        N = o;
      if (!s.isInt() || !f.isInt())
        throw new Error("Parameters in function xgcd must be integer numbers");
      for (; !f.isZero(); )
        (p = s.div(f).floor()),
          (u = s.mod(f)),
          (l = m),
          (m = v.minus(p.times(m))),
          (v = l),
          (l = d),
          (d = N.minus(p.times(d))),
          (N = l),
          (s = f),
          (f = u);
      var g;
      return (
        s.lt(o)
          ? (g = [s.neg(), v.neg(), N.neg()])
          : (g = [s, s.isZero() ? 0 : v, N]),
        t.matrix === "Array" ? g : n(g)
      );
    }
  }),
  mm = "invmod",
  uA = [
    "typed",
    "config",
    "BigNumber",
    "xgcd",
    "equal",
    "smaller",
    "mod",
    "add",
    "isInteger",
  ],
  lA = F(mm, uA, (e) => {
    var {
      typed: r,
      config: t,
      BigNumber: n,
      xgcd: i,
      equal: a,
      smaller: s,
      mod: f,
      add: l,
      isInteger: p,
    } = e;
    return r(mm, { "number, number": u, "BigNumber, BigNumber": u });
    function u(o, c) {
      if (!p(o) || !p(c))
        throw new Error(
          "Parameters in function invmod must be integer numbers"
        );
      if (((o = f(o, c)), a(c, 0))) throw new Error("Divisor must be non zero");
      var m = i(o, c);
      m = m.valueOf();
      var [v, d] = m;
      return a(v, n(1)) ? ((d = f(d, c)), s(d, n(0)) && (d = l(d, c)), d) : NaN;
    }
  }),
  cA = "algorithm09",
  fA = ["typed", "equalScalar"],
  b1 = F(cA, fA, (e) => {
    var { typed: r, equalScalar: t } = e;
    return function (i, a, s) {
      var f = i._values,
        l = i._index,
        p = i._ptr,
        u = i._size,
        o = i._datatype,
        c = a._values,
        m = a._index,
        v = a._ptr,
        d = a._size,
        N = a._datatype;
      if (u.length !== d.length) throw new De(u.length, d.length);
      if (u[0] !== d[0] || u[1] !== d[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            u +
            ") must match Matrix B (" +
            d +
            ")"
        );
      var g = u[0],
        w = u[1],
        h,
        x = t,
        b = 0,
        y = s;
      typeof o == "string" &&
        o === N &&
        ((h = o),
        (x = r.find(t, [h, h])),
        (b = r.convert(0, h)),
        (y = r.find(s, [h, h])));
      var A = f && c ? [] : void 0,
        S = [],
        E = [],
        M = A ? [] : void 0,
        _ = [],
        C,
        I,
        L,
        $,
        D;
      for (I = 0; I < w; I++) {
        E[I] = S.length;
        var B = I + 1;
        if (M)
          for ($ = v[I], D = v[I + 1], L = $; L < D; L++)
            (C = m[L]), (_[C] = B), (M[C] = c[L]);
        for ($ = p[I], D = p[I + 1], L = $; L < D; L++)
          if (((C = l[L]), M)) {
            var R = _[C] === B ? M[C] : b,
              T = y(f[L], R);
            x(T, b) || (S.push(C), A.push(T));
          } else S.push(C);
      }
      return (
        (E[w] = S.length),
        i.createSparseMatrix({
          values: A,
          index: S,
          ptr: E,
          size: [g, w],
          datatype: h,
        })
      );
    };
  }),
  vm = "dotMultiply",
  pA = ["typed", "matrix", "equalScalar", "multiplyScalar"],
  mA = F(vm, pA, (e) => {
    var { typed: r, matrix: t, equalScalar: n, multiplyScalar: i } = e,
      a = Et({ typed: r, equalScalar: n }),
      s = b1({ typed: r, equalScalar: n }),
      f = Sr({ typed: r, equalScalar: n }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(vm, {
      "any, any": i,
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, i, !1);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, i, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, i, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, i);
      },
      "Array, Array": function (o, c) {
        return this(t(o), t(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(t(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, t(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, i, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, i, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, i, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, i, !0);
      },
      "Array, any": function (o, c) {
        return p(t(o), c, i, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(t(c), o, i, !0).valueOf();
      },
    });
  });
function vA(e, r) {
  if ((e.isFinite() && !e.isInteger()) || (r.isFinite() && !r.isInteger()))
    throw new Error("Integers expected in function bitAnd");
  var t = e.constructor;
  if (e.isNaN() || r.isNaN()) return new t(NaN);
  if (e.isZero() || r.eq(-1) || e.eq(r)) return e;
  if (r.isZero() || e.eq(-1)) return r;
  if (!e.isFinite() || !r.isFinite()) {
    if (!e.isFinite() && !r.isFinite())
      return e.isNegative() === r.isNegative() ? e : new t(0);
    if (!e.isFinite())
      return r.isNegative() ? e : e.isNegative() ? new t(0) : r;
    if (!r.isFinite())
      return e.isNegative() ? r : r.isNegative() ? new t(0) : e;
  }
  return Qc(e, r, function (n, i) {
    return n & i;
  });
}
function Za(e) {
  if (e.isFinite() && !e.isInteger())
    throw new Error("Integer expected in function bitNot");
  var r = e.constructor,
    t = r.precision;
  r.config({ precision: 1e9 });
  var n = e.plus(new r(1));
  return (n.s = -n.s || null), r.config({ precision: t }), n;
}
function dA(e, r) {
  if ((e.isFinite() && !e.isInteger()) || (r.isFinite() && !r.isInteger()))
    throw new Error("Integers expected in function bitOr");
  var t = e.constructor;
  if (e.isNaN() || r.isNaN()) return new t(NaN);
  var n = new t(-1);
  return e.isZero() || r.eq(n) || e.eq(r)
    ? r
    : r.isZero() || e.eq(n)
    ? e
    : !e.isFinite() || !r.isFinite()
    ? (!e.isFinite() && !e.isNegative() && r.isNegative()) ||
      (e.isNegative() && !r.isNegative() && !r.isFinite())
      ? n
      : e.isNegative() && r.isNegative()
      ? e.isFinite()
        ? e
        : r
      : e.isFinite()
      ? r
      : e
    : Qc(e, r, function (i, a) {
        return i | a;
      });
}
function Qc(e, r, t) {
  var n = e.constructor,
    i,
    a,
    s = +(e.s < 0),
    f = +(r.s < 0);
  if (s) {
    i = So(Za(e));
    for (var l = 0; l < i.length; ++l) i[l] ^= 1;
  } else i = So(e);
  if (f) {
    a = So(Za(r));
    for (var p = 0; p < a.length; ++p) a[p] ^= 1;
  } else a = So(r);
  var u, o, c;
  i.length <= a.length
    ? ((u = i), (o = a), (c = s))
    : ((u = a), (o = i), (c = f));
  var m = u.length,
    v = o.length,
    d = t(s, f) ^ 1,
    N = new n(d ^ 1),
    g = new n(1),
    w = new n(2),
    h = n.precision;
  for (n.config({ precision: 1e9 }); m > 0; )
    t(u[--m], o[--v]) === d && (N = N.plus(g)), (g = g.times(w));
  for (; v > 0; ) t(c, o[--v]) === d && (N = N.plus(g)), (g = g.times(w));
  return n.config({ precision: h }), d === 0 && (N.s = -N.s), N;
}
function So(e) {
  for (var r = e.d, t = r[0] + "", n = 1; n < r.length; ++n) {
    for (var i = r[n] + "", a = 7 - i.length; a--; ) i = "0" + i;
    t += i;
  }
  for (var s = t.length; t.charAt(s) === "0"; ) s--;
  var f = e.e,
    l = t.slice(0, s + 1 || 1),
    p = l.length;
  if (f > 0)
    if (++f > p) for (f -= p; f--; ) l += "0";
    else f < p && (l = l.slice(0, f) + "." + l.slice(f));
  for (var u = [0], o = 0; o < l.length; ) {
    for (var c = u.length; c--; ) u[c] *= 10;
    u[0] += parseInt(l.charAt(o++));
    for (var m = 0; m < u.length; ++m)
      u[m] > 1 &&
        ((u[m + 1] === null || u[m + 1] === void 0) && (u[m + 1] = 0),
        (u[m + 1] += u[m] >> 1),
        (u[m] &= 1));
  }
  return u.reverse();
}
function hA(e, r) {
  if ((e.isFinite() && !e.isInteger()) || (r.isFinite() && !r.isInteger()))
    throw new Error("Integers expected in function bitXor");
  var t = e.constructor;
  if (e.isNaN() || r.isNaN()) return new t(NaN);
  if (e.isZero()) return r;
  if (r.isZero()) return e;
  if (e.eq(r)) return new t(0);
  var n = new t(-1);
  return e.eq(n)
    ? Za(r)
    : r.eq(n)
    ? Za(e)
    : !e.isFinite() || !r.isFinite()
    ? !e.isFinite() && !r.isFinite()
      ? n
      : new t(e.isNegative() === r.isNegative() ? 1 / 0 : -1 / 0)
    : Qc(e, r, function (i, a) {
        return i ^ a;
      });
}
function gA(e, r) {
  if ((e.isFinite() && !e.isInteger()) || (r.isFinite() && !r.isInteger()))
    throw new Error("Integers expected in function leftShift");
  var t = e.constructor;
  return e.isNaN() || r.isNaN() || (r.isNegative() && !r.isZero())
    ? new t(NaN)
    : e.isZero() || r.isZero()
    ? e
    : !e.isFinite() && !r.isFinite()
    ? new t(NaN)
    : r.lt(55)
    ? e.times(Math.pow(2, r.toNumber()) + "")
    : e.times(new t(2).pow(r));
}
function yA(e, r) {
  if ((e.isFinite() && !e.isInteger()) || (r.isFinite() && !r.isInteger()))
    throw new Error("Integers expected in function rightArithShift");
  var t = e.constructor;
  return e.isNaN() || r.isNaN() || (r.isNegative() && !r.isZero())
    ? new t(NaN)
    : e.isZero() || r.isZero()
    ? e
    : r.isFinite()
    ? r.lt(55)
      ? e.div(Math.pow(2, r.toNumber()) + "").floor()
      : e.div(new t(2).pow(r)).floor()
    : e.isNegative()
    ? new t(-1)
    : e.isFinite()
    ? new t(0)
    : new t(NaN);
}
var dm = "bitAnd",
  xA = ["typed", "matrix", "equalScalar"],
  wA = F(dm, xA, (e) => {
    var { typed: r, matrix: t, equalScalar: n } = e,
      i = Et({ typed: r, equalScalar: n }),
      a = Qs({ typed: r, equalScalar: n }),
      s = Sr({ typed: r, equalScalar: n }),
      f = Xe({ typed: r }),
      l = ke({ typed: r });
    return r(dm, {
      "number, number": k0,
      "BigNumber, BigNumber": vA,
      "SparseMatrix, SparseMatrix": function (u, o) {
        return a(u, o, this, !1);
      },
      "SparseMatrix, DenseMatrix": function (u, o) {
        return i(o, u, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (u, o) {
        return i(u, o, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (u, o) {
        return f(u, o, this);
      },
      "Array, Array": function (u, o) {
        return this(t(u), t(o)).valueOf();
      },
      "Array, Matrix": function (u, o) {
        return this(t(u), o);
      },
      "Matrix, Array": function (u, o) {
        return this(u, t(o));
      },
      "SparseMatrix, any": function (u, o) {
        return s(u, o, this, !1);
      },
      "DenseMatrix, any": function (u, o) {
        return l(u, o, this, !1);
      },
      "any, SparseMatrix": function (u, o) {
        return s(o, u, this, !0);
      },
      "any, DenseMatrix": function (u, o) {
        return l(o, u, this, !0);
      },
      "Array, any": function (u, o) {
        return l(t(u), o, this, !1).valueOf();
      },
      "any, Array": function (u, o) {
        return l(t(o), u, this, !0).valueOf();
      },
    });
  }),
  hm = "bitNot",
  bA = ["typed"],
  NA = F(hm, bA, (e) => {
    var { typed: r } = e;
    return r(hm, {
      number: U0,
      BigNumber: Za,
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  gm = "bitOr",
  MA = ["typed", "matrix", "equalScalar", "DenseMatrix"],
  SA = F(gm, MA, (e) => {
    var { typed: r, matrix: t, equalScalar: n, DenseMatrix: i } = e,
      a = $n({ typed: r }),
      s = Zc({ typed: r, equalScalar: n }),
      f = ri({ typed: r, DenseMatrix: i }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(gm, {
      "number, number": q0,
      "BigNumber, BigNumber": dA,
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, this);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, this);
      },
      "Array, Array": function (o, c) {
        return this(t(o), t(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(t(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, t(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, this, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, this, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, this, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, this, !0);
      },
      "Array, any": function (o, c) {
        return p(t(o), c, this, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(t(c), o, this, !0).valueOf();
      },
    });
  }),
  AA = "algorithm07",
  EA = ["typed", "DenseMatrix"],
  Rt = F(AA, EA, (e) => {
    var { typed: r, DenseMatrix: t } = e;
    return function (a, s, f) {
      var l = a._size,
        p = a._datatype,
        u = s._size,
        o = s._datatype;
      if (l.length !== u.length) throw new De(l.length, u.length);
      if (l[0] !== u[0] || l[1] !== u[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            l +
            ") must match Matrix B (" +
            u +
            ")"
        );
      var c = l[0],
        m = l[1],
        v,
        d = 0,
        N = f;
      typeof p == "string" &&
        p === o &&
        ((v = p), (d = r.convert(0, v)), (N = r.find(f, [v, v])));
      var g,
        w,
        h = [];
      for (g = 0; g < c; g++) h[g] = [];
      var x = [],
        b = [],
        y = [],
        A = [];
      for (w = 0; w < m; w++) {
        var S = w + 1;
        for (n(a, w, y, x, S), n(s, w, A, b, S), g = 0; g < c; g++) {
          var E = y[g] === S ? x[g] : d,
            M = A[g] === S ? b[g] : d;
          h[g][w] = N(E, M);
        }
      }
      return new t({ data: h, size: [c, m], datatype: v });
    };
    function n(i, a, s, f, l) {
      for (
        var p = i._values, u = i._index, o = i._ptr, c = o[a], m = o[a + 1];
        c < m;
        c++
      ) {
        var v = u[c];
        (s[v] = l), (f[v] = p[c]);
      }
    }
  }),
  ym = "bitXor",
  CA = ["typed", "matrix", "DenseMatrix"],
  OA = F(ym, CA, (e) => {
    var { typed: r, matrix: t, DenseMatrix: n } = e,
      i = Lr({ typed: r }),
      a = Rt({ typed: r, DenseMatrix: n }),
      s = xr({ typed: r, DenseMatrix: n }),
      f = Xe({ typed: r }),
      l = ke({ typed: r });
    return r(ym, {
      "number, number": H0,
      "BigNumber, BigNumber": hA,
      "SparseMatrix, SparseMatrix": function (u, o) {
        return a(u, o, this);
      },
      "SparseMatrix, DenseMatrix": function (u, o) {
        return i(o, u, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (u, o) {
        return i(u, o, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (u, o) {
        return f(u, o, this);
      },
      "Array, Array": function (u, o) {
        return this(t(u), t(o)).valueOf();
      },
      "Array, Matrix": function (u, o) {
        return this(t(u), o);
      },
      "Matrix, Array": function (u, o) {
        return this(u, t(o));
      },
      "SparseMatrix, any": function (u, o) {
        return s(u, o, this, !1);
      },
      "DenseMatrix, any": function (u, o) {
        return l(u, o, this, !1);
      },
      "any, SparseMatrix": function (u, o) {
        return s(o, u, this, !0);
      },
      "any, DenseMatrix": function (u, o) {
        return l(o, u, this, !0);
      },
      "Array, any": function (u, o) {
        return l(t(u), o, this, !1).valueOf();
      },
      "any, Array": function (u, o) {
        return l(t(o), u, this, !0).valueOf();
      },
    });
  }),
  xm = "arg",
  TA = ["typed"],
  DA = F(xm, TA, (e) => {
    var { typed: r } = e;
    return r(xm, {
      number: function (n) {
        return Math.atan2(0, n);
      },
      BigNumber: function (n) {
        return n.constructor.atan2(0, n);
      },
      Complex: function (n) {
        return n.arg();
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  wm = "conj",
  _A = ["typed"],
  BA = F(wm, _A, (e) => {
    var { typed: r } = e;
    return r(wm, {
      number: function (n) {
        return n;
      },
      BigNumber: function (n) {
        return n;
      },
      Complex: function (n) {
        return n.conjugate();
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  bm = "im",
  IA = ["typed"],
  $A = F(bm, IA, (e) => {
    var { typed: r } = e;
    return r(bm, {
      number: function (n) {
        return 0;
      },
      BigNumber: function (n) {
        return n.mul(0);
      },
      Fraction: function (n) {
        return n.mul(0);
      },
      Complex: function (n) {
        return n.im;
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Nm = "re",
  zA = ["typed"],
  RA = F(Nm, zA, (e) => {
    var { typed: r } = e;
    return r(Nm, {
      number: function (n) {
        return n;
      },
      BigNumber: function (n) {
        return n;
      },
      Fraction: function (n) {
        return n;
      },
      Complex: function (n) {
        return n.re;
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Mm = "not",
  FA = ["typed"],
  PA = F(Mm, FA, (e) => {
    var { typed: r } = e;
    return r(Mm, {
      number: Q0,
      Complex: function (n) {
        return n.re === 0 && n.im === 0;
      },
      BigNumber: function (n) {
        return n.isZero() || n.isNaN();
      },
      Unit: function (n) {
        return n.value !== null ? this(n.value) : !0;
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Sm = "or",
  LA = ["typed", "matrix", "equalScalar", "DenseMatrix"],
  kA = F(Sm, LA, (e) => {
    var { typed: r, matrix: t, equalScalar: n, DenseMatrix: i } = e,
      a = Lr({ typed: r }),
      s = Ys({ typed: r, equalScalar: n }),
      f = xr({ typed: r, DenseMatrix: i }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(Sm, {
      "number, number": Y0,
      "Complex, Complex": function (o, c) {
        return o.re !== 0 || o.im !== 0 || c.re !== 0 || c.im !== 0;
      },
      "BigNumber, BigNumber": function (o, c) {
        return (!o.isZero() && !o.isNaN()) || (!c.isZero() && !c.isNaN());
      },
      "Unit, Unit": function (o, c) {
        return this(o.value || 0, c.value || 0);
      },
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, this);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, this);
      },
      "Array, Array": function (o, c) {
        return this(t(o), t(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(t(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, t(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, this, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, this, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, this, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, this, !0);
      },
      "Array, any": function (o, c) {
        return p(t(o), c, this, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(t(c), o, this, !0).valueOf();
      },
    });
  }),
  Am = "xor",
  UA = ["typed", "matrix", "DenseMatrix"],
  qA = F(Am, UA, (e) => {
    var { typed: r, matrix: t, DenseMatrix: n } = e,
      i = Lr({ typed: r }),
      a = Rt({ typed: r, DenseMatrix: n }),
      s = xr({ typed: r, DenseMatrix: n }),
      f = Xe({ typed: r }),
      l = ke({ typed: r });
    return r(Am, {
      "number, number": X0,
      "Complex, Complex": function (u, o) {
        return (u.re !== 0 || u.im !== 0) != (o.re !== 0 || o.im !== 0);
      },
      "BigNumber, BigNumber": function (u, o) {
        return (!u.isZero() && !u.isNaN()) != (!o.isZero() && !o.isNaN());
      },
      "Unit, Unit": function (u, o) {
        return this(u.value || 0, o.value || 0);
      },
      "SparseMatrix, SparseMatrix": function (u, o) {
        return a(u, o, this);
      },
      "SparseMatrix, DenseMatrix": function (u, o) {
        return i(o, u, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (u, o) {
        return i(u, o, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (u, o) {
        return f(u, o, this);
      },
      "Array, Array": function (u, o) {
        return this(t(u), t(o)).valueOf();
      },
      "Array, Matrix": function (u, o) {
        return this(t(u), o);
      },
      "Matrix, Array": function (u, o) {
        return this(u, t(o));
      },
      "SparseMatrix, any": function (u, o) {
        return s(u, o, this, !1);
      },
      "DenseMatrix, any": function (u, o) {
        return l(u, o, this, !1);
      },
      "any, SparseMatrix": function (u, o) {
        return s(o, u, this, !0);
      },
      "any, DenseMatrix": function (u, o) {
        return l(o, u, this, !0);
      },
      "Array, any": function (u, o) {
        return l(t(u), o, this, !1).valueOf();
      },
      "any, Array": function (u, o) {
        return l(t(o), u, this, !0).valueOf();
      },
    });
  }),
  Em = "concat",
  HA = ["typed", "matrix", "isInteger"],
  N1 = F(Em, HA, (e) => {
    var { typed: r, matrix: t, isInteger: n } = e;
    return r(Em, {
      "...Array | Matrix | number | BigNumber": function (a) {
        var s,
          f = a.length,
          l = -1,
          p,
          u = !1,
          o = [];
        for (s = 0; s < f; s++) {
          var c = a[s];
          if ((Ae(c) && (u = !0), $e(c) || Be(c))) {
            if (s !== f - 1)
              throw new Error("Dimension must be specified as last argument");
            if (((p = l), (l = c.valueOf()), !n(l)))
              throw new TypeError("Integer number expected for dimension");
            if (l < 0 || (s > 0 && l > p)) throw new vt(l, p + 1);
          } else {
            var m = Me(c).valueOf(),
              v = Ie(m);
            if (((o[s] = m), (p = l), (l = v.length - 1), s > 0 && l !== p))
              throw new De(p + 1, l + 1);
          }
        }
        if (o.length === 0)
          throw new SyntaxError("At least one matrix expected");
        for (var d = o.shift(); o.length; ) d = M1(d, o.shift(), l, 0);
        return u ? t(d) : d;
      },
      "...string": function (a) {
        return a.join("");
      },
    });
  });
function M1(e, r, t, n) {
  if (n < t) {
    if (e.length !== r.length) throw new De(e.length, r.length);
    for (var i = [], a = 0; a < e.length; a++) i[a] = M1(e[a], r[a], t, n + 1);
    return i;
  } else return e.concat(r);
}
var Cm = "column",
  VA = ["typed", "Index", "matrix", "range"],
  S1 = F(Cm, VA, (e) => {
    var { typed: r, Index: t, matrix: n, range: i } = e;
    return r(Cm, {
      "Matrix, number": a,
      "Array, number": function (f, l) {
        return a(n(Me(f)), l).valueOf();
      },
    });
    function a(s, f) {
      if (s.size().length !== 2)
        throw new Error("Only two dimensional matrix is supported");
      We(f, s.size()[1]);
      var l = i(0, s.size()[0]),
        p = new t(l, f);
      return s.subset(p);
    }
  }),
  Om = "count",
  GA = ["typed", "size", "prod"],
  WA = F(Om, GA, (e) => {
    var { typed: r, size: t, prod: n } = e;
    return r(Om, {
      string: function (a) {
        return a.length;
      },
      "Matrix | Array": function (a) {
        return n(t(a));
      },
    });
  }),
  Tm = "cross",
  ZA = ["typed", "matrix", "subtract", "multiply"],
  QA = F(Tm, ZA, (e) => {
    var { typed: r, matrix: t, subtract: n, multiply: i } = e;
    return r(Tm, {
      "Matrix, Matrix": function (f, l) {
        return t(a(f.toArray(), l.toArray()));
      },
      "Matrix, Array": function (f, l) {
        return t(a(f.toArray(), l));
      },
      "Array, Matrix": function (f, l) {
        return t(a(f, l.toArray()));
      },
      "Array, Array": a,
    });
    function a(s, f) {
      var l = Math.max(Ie(s).length, Ie(f).length);
      (s = cs(s)), (f = cs(f));
      var p = Ie(s),
        u = Ie(f);
      if (p.length !== 1 || u.length !== 1 || p[0] !== 3 || u[0] !== 3)
        throw new RangeError(
          "Vectors with length 3 expected (Size A = [" +
            p.join(", ") +
            "], B = [" +
            u.join(", ") +
            "])"
        );
      var o = [
        n(i(s[1], f[2]), i(s[2], f[1])),
        n(i(s[2], f[0]), i(s[0], f[2])),
        n(i(s[0], f[1]), i(s[1], f[0])),
      ];
      return l > 1 ? [o] : o;
    }
  }),
  Dm = "diag",
  YA = ["typed", "matrix", "DenseMatrix", "SparseMatrix"],
  XA = F(Dm, YA, (e) => {
    var { typed: r, matrix: t, DenseMatrix: n, SparseMatrix: i } = e;
    return r(Dm, {
      Array: function (p) {
        return a(p, 0, Ie(p), null);
      },
      "Array, number": function (p, u) {
        return a(p, u, Ie(p), null);
      },
      "Array, BigNumber": function (p, u) {
        return a(p, u.toNumber(), Ie(p), null);
      },
      "Array, string": function (p, u) {
        return a(p, 0, Ie(p), u);
      },
      "Array, number, string": function (p, u, o) {
        return a(p, u, Ie(p), o);
      },
      "Array, BigNumber, string": function (p, u, o) {
        return a(p, u.toNumber(), Ie(p), o);
      },
      Matrix: function (p) {
        return a(p, 0, p.size(), p.storage());
      },
      "Matrix, number": function (p, u) {
        return a(p, u, p.size(), p.storage());
      },
      "Matrix, BigNumber": function (p, u) {
        return a(p, u.toNumber(), p.size(), p.storage());
      },
      "Matrix, string": function (p, u) {
        return a(p, 0, p.size(), u);
      },
      "Matrix, number, string": function (p, u, o) {
        return a(p, u, p.size(), o);
      },
      "Matrix, BigNumber, string": function (p, u, o) {
        return a(p, u.toNumber(), p.size(), o);
      },
    });
    function a(l, p, u, o) {
      if (!Ne(p))
        throw new TypeError(
          "Second parameter in function diag must be an integer"
        );
      var c = p > 0 ? p : 0,
        m = p < 0 ? -p : 0;
      switch (u.length) {
        case 1:
          return s(l, p, o, u[0], m, c);
        case 2:
          return f(l, p, o, u, m, c);
      }
      throw new RangeError("Matrix for function diag must be 2 dimensional");
    }
    function s(l, p, u, o, c, m) {
      var v = [o + c, o + m];
      if (u && u !== "sparse" && u !== "dense")
        throw new TypeError("Unknown matrix type ".concat(u, '"'));
      var d = u === "sparse" ? i.diagonal(v, l, p) : n.diagonal(v, l, p);
      return u !== null ? d : d.valueOf();
    }
    function f(l, p, u, o, c, m) {
      if (Ae(l)) {
        var v = l.diagonal(p);
        return u !== null ? (u !== v.storage() ? t(v, u) : v) : v.valueOf();
      }
      for (var d = Math.min(o[0] - c, o[1] - m), N = [], g = 0; g < d; g++)
        N[g] = l[g + c][g + m];
      return u !== null ? t(N) : N;
    }
  });
function jA(e) {
  var r = 0,
    t = 1,
    n = Object.create(null),
    i = Object.create(null),
    a = 0,
    s = function (l) {
      var p = i[l];
      if (!!p && (delete n[p], delete i[l], --r, t === p)) {
        if (!r) {
          (a = 0), (t = 1);
          return;
        }
        for (; !hasOwnProperty.call(n, ++t); );
      }
    };
  return (
    (e = Math.abs(e)),
    {
      hit: function (l) {
        var p = i[l],
          u = ++a;
        if (((n[u] = l), (i[l] = u), !p))
          return ++r, r <= e ? void 0 : ((l = n[t]), s(l), l);
        if ((delete n[p], t === p)) for (; !hasOwnProperty.call(n, ++t); );
      },
      delete: s,
      clear: function () {
        (r = a = 0),
          (t = 1),
          (n = Object.create(null)),
          (i = Object.create(null));
      },
    }
  );
}
function ro(e) {
  var { hasher: r, limit: t } =
    arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return (
    (t = t == null ? Number.POSITIVE_INFINITY : t),
    (r = r == null ? JSON.stringify : r),
    function n() {
      typeof n.cache != "object" &&
        (n.cache = {
          values: new Map(),
          lru: jA(t || Number.POSITIVE_INFINITY),
        });
      for (var i = [], a = 0; a < arguments.length; a++) i[a] = arguments[a];
      var s = r(i);
      if (n.cache.values.has(s))
        return n.cache.lru.hit(s), n.cache.values.get(s);
      var f = e.apply(e, i);
      return (
        n.cache.values.set(s, f), n.cache.values.delete(n.cache.lru.hit(s)), f
      );
    }
  );
}
function Ji(e) {
  return Object.keys(e.signatures || {}).reduce(function (r, t) {
    var n = (t.match(/,/g) || []).length + 1;
    return Math.max(r, n);
  }, -1);
}
var JA = "filter",
  KA = ["typed"],
  eE = F(JA, KA, (e) => {
    var { typed: r } = e;
    return r("filter", {
      "Array, function": _m,
      "Matrix, function": function (n, i) {
        return n.create(_m(n.toArray(), i));
      },
      "Array, RegExp": fs,
      "Matrix, RegExp": function (n, i) {
        return n.create(fs(n.toArray(), i));
      },
    });
  });
function _m(e, r) {
  var t = Ji(r);
  return o0(e, function (n, i, a) {
    return t === 1 ? r(n) : t === 2 ? r(n, [i]) : r(n, [i], a);
  });
}
var Bm = "flatten",
  rE = ["typed", "matrix"],
  tE = F(Bm, rE, (e) => {
    var { typed: r, matrix: t } = e;
    return r(Bm, {
      Array: function (i) {
        return Re(Me(i));
      },
      Matrix: function (i) {
        var a = Re(Me(i.toArray()));
        return t(a);
      },
    });
  }),
  Im = "forEach",
  nE = ["typed"],
  iE = F(Im, nE, (e) => {
    var { typed: r } = e;
    return r(Im, {
      "Array, function": aE,
      "Matrix, function": function (n, i) {
        return n.forEach(i);
      },
    });
  });
function aE(e, r) {
  var t = Ji(r),
    n = function i(a, s) {
      Array.isArray(a)
        ? Us(a, function (f, l) {
            i(f, s.concat(l));
          })
        : t === 1
        ? r(a)
        : t === 2
        ? r(a, s)
        : r(a, s, e);
    };
  n(e, []);
}
var $m = "getMatrixDataType",
  oE = ["typed"],
  sE = F($m, oE, (e) => {
    var { typed: r } = e;
    return r($m, {
      Array: function (n) {
        return Ga(n, Ye);
      },
      Matrix: function (n) {
        return n.getDataType();
      },
    });
  }),
  zm = "identity",
  uE = [
    "typed",
    "config",
    "matrix",
    "BigNumber",
    "DenseMatrix",
    "SparseMatrix",
  ],
  lE = F(zm, uE, (e) => {
    var {
      typed: r,
      config: t,
      matrix: n,
      BigNumber: i,
      DenseMatrix: a,
      SparseMatrix: s,
    } = e;
    return r(zm, {
      "": function () {
        return t.matrix === "Matrix" ? n([]) : [];
      },
      string: function (u) {
        return n(u);
      },
      "number | BigNumber": function (u) {
        return l(u, u, t.matrix === "Matrix" ? "dense" : void 0);
      },
      "number | BigNumber, string": function (u, o) {
        return l(u, u, o);
      },
      "number | BigNumber, number | BigNumber": function (u, o) {
        return l(u, o, t.matrix === "Matrix" ? "dense" : void 0);
      },
      "number | BigNumber, number | BigNumber, string": function (u, o, c) {
        return l(u, o, c);
      },
      Array: function (u) {
        return f(u);
      },
      "Array, string": function (u, o) {
        return f(u, o);
      },
      Matrix: function (u) {
        return f(u.valueOf(), u.storage());
      },
      "Matrix, string": function (u, o) {
        return f(u.valueOf(), o);
      },
    });
    function f(p, u) {
      switch (p.length) {
        case 0:
          return u ? n(u) : [];
        case 1:
          return l(p[0], p[0], u);
        case 2:
          return l(p[0], p[1], u);
        default:
          throw new Error("Vector containing two values expected");
      }
    }
    function l(p, u, o) {
      var c = Be(p) || Be(u) ? i : null;
      if (
        (Be(p) && (p = p.toNumber()),
        Be(u) && (u = u.toNumber()),
        !Ne(p) || p < 1)
      )
        throw new Error(
          "Parameters in function identity must be positive integers"
        );
      if (!Ne(u) || u < 1)
        throw new Error(
          "Parameters in function identity must be positive integers"
        );
      var m = c ? new i(1) : 1,
        v = c ? new c(0) : 0,
        d = [p, u];
      if (o) {
        if (o === "sparse") return s.diagonal(d, m, 0, v);
        if (o === "dense") return a.diagonal(d, m, 0, v);
        throw new TypeError('Unknown matrix type "'.concat(o, '"'));
      }
      for (var N = Li([], d, v), g = p < u ? p : u, w = 0; w < g; w++)
        N[w][w] = m;
      return N;
    }
  }),
  Rm = "kron",
  cE = ["typed", "matrix", "multiplyScalar"],
  fE = F(Rm, cE, (e) => {
    var { typed: r, matrix: t, multiplyScalar: n } = e;
    return r(Rm, {
      "Matrix, Matrix": function (s, f) {
        return t(i(s.toArray(), f.toArray()));
      },
      "Matrix, Array": function (s, f) {
        return t(i(s.toArray(), f));
      },
      "Array, Matrix": function (s, f) {
        return t(i(s, f.toArray()));
      },
      "Array, Array": i,
    });
    function i(a, s) {
      if (
        (Ie(a).length === 1 && (a = [a]),
        Ie(s).length === 1 && (s = [s]),
        Ie(a).length > 2 || Ie(s).length > 2)
      )
        throw new RangeError(
          "Vectors with dimensions greater then 2 are not supported expected (Size x = " +
            JSON.stringify(a.length) +
            ", y = " +
            JSON.stringify(s.length) +
            ")"
        );
      var f = [],
        l = [];
      return (
        a.map(function (p) {
          return s.map(function (u) {
            return (
              (l = []),
              f.push(l),
              p.map(function (o) {
                return u.map(function (c) {
                  return l.push(n(o, c));
                });
              })
            );
          });
        }) && f
      );
    }
  }),
  Fm = "map",
  pE = ["typed"],
  mE = F(Fm, pE, (e) => {
    var { typed: r } = e;
    return r(Fm, {
      "Array, function": vE,
      "Matrix, function": function (n, i) {
        return n.map(i);
      },
    });
  });
function vE(e, r) {
  var t = Ji(r),
    n = function i(a, s) {
      if (Array.isArray(a))
        return a.map(function (p, u) {
          return i(p, s.concat(u));
        });
      try {
        return t === 1 ? r(a) : t === 2 ? r(a, s) : r(a, s, e);
      } catch (p) {
        if (
          p instanceof TypeError &&
          "data" in p &&
          p.data.category === "wrongType"
        ) {
          var f = "map attempted to call '".concat(p.data.fn, "(").concat(a),
            l = JSON.stringify(s);
          throw (
            (t === 2
              ? (f += "," + l)
              : t !== 1 && (f += ",".concat(l, ",").concat(e)),
            (f += ")' but argument ".concat(p.data.index + 1, " of type ")),
            (f += "".concat(p.data.actual, " does not match expected type ")),
            (f += p.data.expected.join(" or ")),
            new TypeError(f))
          );
        }
        throw p;
      }
    };
  return n(e, []);
}
var Pm = "diff",
  dE = ["typed", "matrix", "subtract", "number"],
  A1 = F(Pm, dE, (e) => {
    var { typed: r, matrix: t, subtract: n, number: i } = e;
    return r(Pm, {
      "Array | Matrix": function (u) {
        return Ae(u) ? t(s(u.toArray())) : s(u);
      },
      "Array | Matrix, number": function (u, o) {
        if (!Ne(o)) throw new RangeError("Dimension must be a whole number");
        return Ae(u) ? t(a(u.toArray(), o)) : a(u, o);
      },
      "Array | Matrix, BigNumber": function (u, o) {
        return this(u, i(o));
      },
    });
    function a(p, u) {
      if ((Ae(p) && (p = p.toArray()), !Array.isArray(p)))
        throw RangeError("Array/Matrix does not have that many dimensions");
      if (u > 0) {
        var o = [];
        return (
          p.forEach((c) => {
            o.push(a(c, u - 1));
          }),
          o
        );
      } else {
        if (u === 0) return s(p);
        throw RangeError("Cannot have negative dimension");
      }
    }
    function s(p) {
      var u = [],
        o = p.length;
      if (o < 2) return p;
      for (var c = 1; c < o; c++) u.push(f(p[c - 1], p[c]));
      return u;
    }
    function f(p, u) {
      Ae(p) && (p = p.toArray()), Ae(u) && (u = u.toArray());
      var o = Array.isArray(p),
        c = Array.isArray(u);
      if (o && c) return l(p, u);
      if (!o && !c) return n(u, p);
      throw TypeError(
        "Cannot calculate difference between 1 array and 1 non-array"
      );
    }
    function l(p, u) {
      if (p.length !== u.length)
        throw RangeError("Not all sub-arrays have the same length");
      for (var o = [], c = p.length, m = 0; m < c; m++) o.push(f(p[m], u[m]));
      return o;
    }
  }),
  hE = "ones",
  gE = ["typed", "config", "matrix", "BigNumber"],
  yE = F(hE, gE, (e) => {
    var { typed: r, config: t, matrix: n, BigNumber: i } = e;
    return r("ones", {
      "": function () {
        return t.matrix === "Array" ? a([]) : a([], "default");
      },
      "...number | BigNumber | string": function (p) {
        var u = p[p.length - 1];
        if (typeof u == "string") {
          var o = p.pop();
          return a(p, o);
        } else return t.matrix === "Array" ? a(p) : a(p, "default");
      },
      Array: a,
      Matrix: function (p) {
        var u = p.storage();
        return a(p.valueOf(), u);
      },
      "Array | Matrix, string": function (p, u) {
        return a(p.valueOf(), u);
      },
    });
    function a(l, p) {
      var u = s(l),
        o = u ? new i(1) : 1;
      if ((f(l), p)) {
        var c = n(p);
        return l.length > 0 ? c.resize(l, o) : c;
      } else {
        var m = [];
        return l.length > 0 ? Li(m, l, o) : m;
      }
    }
    function s(l) {
      var p = !1;
      return (
        l.forEach(function (u, o, c) {
          Be(u) && ((p = !0), (c[o] = u.toNumber()));
        }),
        p
      );
    }
    function f(l) {
      l.forEach(function (p) {
        if (typeof p != "number" || !Ne(p) || p < 0)
          throw new Error(
            "Parameters in function ones must be positive integers"
          );
      });
    }
  });
function Yc() {
  throw new Error('No "bignumber" implementation available');
}
function E1() {
  throw new Error('No "fraction" implementation available');
}
function C1() {
  throw new Error('No "matrix" implementation available');
}
var Lm = "range",
  xE = [
    "typed",
    "config",
    "?matrix",
    "?bignumber",
    "smaller",
    "smallerEq",
    "larger",
    "largerEq",
  ],
  O1 = F(Lm, xE, (e) => {
    var {
      typed: r,
      config: t,
      matrix: n,
      bignumber: i,
      smaller: a,
      smallerEq: s,
      larger: f,
      largerEq: l,
    } = e;
    return r(Lm, {
      string: u,
      "string, boolean": u,
      "number, number": function (g, w) {
        return p(o(g, w, 1));
      },
      "number, number, number": function (g, w, h) {
        return p(o(g, w, h));
      },
      "number, number, boolean": function (g, w, h) {
        return p(h ? c(g, w, 1) : o(g, w, 1));
      },
      "number, number, number, boolean": function (g, w, h, x) {
        return p(x ? c(g, w, h) : o(g, w, h));
      },
      "BigNumber, BigNumber": function (g, w) {
        var h = g.constructor;
        return p(m(g, w, new h(1)));
      },
      "BigNumber, BigNumber, BigNumber": function (g, w, h) {
        return p(m(g, w, h));
      },
      "BigNumber, BigNumber, boolean": function (g, w, h) {
        var x = g.constructor;
        return p(h ? v(g, w, new x(1)) : m(g, w, new x(1)));
      },
      "BigNumber, BigNumber, BigNumber, boolean": function (g, w, h, x) {
        return p(x ? v(g, w, h) : m(g, w, h));
      },
    });
    function p(N) {
      return t.matrix === "Matrix" ? (n ? n(N) : C1()) : N;
    }
    function u(N, g) {
      var w = d(N);
      if (!w) throw new SyntaxError('String "' + N + '" is no valid range');
      var h;
      return t.number === "BigNumber"
        ? (i === void 0 && Yc(),
          (h = g ? v : m),
          p(h(i(w.start), i(w.end), i(w.step))))
        : ((h = g ? c : o), p(h(w.start, w.end, w.step)));
    }
    function o(N, g, w) {
      var h = [],
        x = N;
      if (w > 0) for (; a(x, g); ) h.push(x), (x += w);
      else if (w < 0) for (; f(x, g); ) h.push(x), (x += w);
      return h;
    }
    function c(N, g, w) {
      var h = [],
        x = N;
      if (w > 0) for (; s(x, g); ) h.push(x), (x += w);
      else if (w < 0) for (; l(x, g); ) h.push(x), (x += w);
      return h;
    }
    function m(N, g, w) {
      var h = i(0),
        x = [],
        b = N;
      if (w.gt(h)) for (; a(b, g); ) x.push(b), (b = b.plus(w));
      else if (w.lt(h)) for (; f(b, g); ) x.push(b), (b = b.plus(w));
      return x;
    }
    function v(N, g, w) {
      var h = i(0),
        x = [],
        b = N;
      if (w.gt(h)) for (; s(b, g); ) x.push(b), (b = b.plus(w));
      else if (w.lt(h)) for (; l(b, g); ) x.push(b), (b = b.plus(w));
      return x;
    }
    function d(N) {
      var g = N.split(":"),
        w = g.map(function (x) {
          return Number(x);
        }),
        h = w.some(function (x) {
          return isNaN(x);
        });
      if (h) return null;
      switch (w.length) {
        case 2:
          return { start: w[0], end: w[1], step: 1 };
        case 3:
          return { start: w[0], end: w[2], step: w[1] };
        default:
          return null;
      }
    }
  }),
  km = "reshape",
  wE = ["typed", "isInteger", "matrix"],
  bE = F(km, wE, (e) => {
    var { typed: r, isInteger: t } = e;
    return r(km, {
      "Matrix, Array": function (i, a) {
        return i.reshape(a);
      },
      "Array, Array": function (i, a) {
        return (
          a.forEach(function (s) {
            if (!t(s)) throw new TypeError("Invalid size for dimension: " + s);
          }),
          r0(i, a)
        );
      },
    });
  });
function zn(e, r, t, n) {
  if (!(this instanceof zn))
    throw new SyntaxError("Constructor must be called with the new operator");
  (this.fn = e),
    (this.count = r),
    (this.min = t),
    (this.max = n),
    (this.message =
      "Wrong number of arguments in function " +
      e +
      " (" +
      r +
      " provided, " +
      t +
      (n != null ? "-" + n : "") +
      " expected)"),
    (this.stack = new Error().stack);
}
zn.prototype = new Error();
zn.prototype.constructor = Error;
zn.prototype.name = "ArgumentsError";
zn.prototype.isArgumentsError = !0;
var NE = "resize",
  ME = ["config", "matrix"],
  SE = F(NE, ME, (e) => {
    var { config: r, matrix: t } = e;
    return function (a, s, f) {
      if (arguments.length !== 2 && arguments.length !== 3)
        throw new zn("resize", arguments.length, 2, 3);
      if (
        (Ae(s) && (s = s.valueOf()),
        Be(s[0]) &&
          (s = s.map(function (u) {
            return Be(u) ? u.toNumber() : u;
          })),
        Ae(a))
      )
        return a.resize(s, f, !0);
      if (typeof a == "string") return n(a, s, f);
      var l = Array.isArray(a) ? !1 : r.matrix !== "Array";
      if (s.length === 0) {
        for (; Array.isArray(a); ) a = a[0];
        return Me(a);
      } else {
        Array.isArray(a) || (a = [a]), (a = Me(a));
        var p = Li(a, s, f);
        return l ? t(p) : p;
      }
    };
    function n(i, a, s) {
      if (s !== void 0) {
        if (typeof s != "string" || s.length !== 1)
          throw new TypeError("Single character expected as defaultValue");
      } else s = " ";
      if (a.length !== 1) throw new De(a.length, 1);
      var f = a[0];
      if (typeof f != "number" || !Ne(f))
        throw new TypeError(
          "Invalid size, must contain positive integers (size: " + _e(a) + ")"
        );
      if (i.length > f) return i.substring(0, f);
      if (i.length < f) {
        for (var l = i, p = 0, u = f - i.length; p < u; p++) l += s;
        return l;
      } else return i;
    }
  }),
  Um = "rotate",
  AE = ["typed", "multiply", "rotationMatrix"],
  EE = F(Um, AE, (e) => {
    var { typed: r, multiply: t, rotationMatrix: n } = e;
    return r(Um, {
      "Array , number | BigNumber | Complex | Unit": function (s, f) {
        i(s, 2);
        var l = t(n(f), s);
        return l.toArray();
      },
      "Matrix , number | BigNumber | Complex | Unit": function (s, f) {
        return i(s, 2), t(n(f), s);
      },
      "Array, number | BigNumber | Complex | Unit, Array | Matrix": function (
        s,
        f,
        l
      ) {
        i(s, 3);
        var p = t(n(f, l), s);
        return p;
      },
      "Matrix, number | BigNumber | Complex | Unit, Array | Matrix": function (
        s,
        f,
        l
      ) {
        return i(s, 3), t(n(f, l), s);
      },
    });
    function i(a, s) {
      var f = Array.isArray(a) ? Ie(a) : a.size();
      if (f.length > 2)
        throw new RangeError("Vector must be of dimensions 1x".concat(s));
      if (f.length === 2 && f[1] !== 1)
        throw new RangeError("Vector must be of dimensions 1x".concat(s));
      if (f[0] !== s)
        throw new RangeError("Vector must be of dimensions 1x".concat(s));
    }
  }),
  qm = "rotationMatrix",
  CE = [
    "typed",
    "config",
    "multiplyScalar",
    "addScalar",
    "unaryMinus",
    "norm",
    "matrix",
    "BigNumber",
    "DenseMatrix",
    "SparseMatrix",
    "cos",
    "sin",
  ],
  OE = F(qm, CE, (e) => {
    var {
      typed: r,
      config: t,
      multiplyScalar: n,
      addScalar: i,
      unaryMinus: a,
      norm: s,
      BigNumber: f,
      matrix: l,
      DenseMatrix: p,
      SparseMatrix: u,
      cos: o,
      sin: c,
    } = e;
    return r(qm, {
      "": function () {
        return t.matrix === "Matrix" ? l([]) : [];
      },
      string: function (h) {
        return l(h);
      },
      "number | BigNumber | Complex | Unit": function (h) {
        return m(h, t.matrix === "Matrix" ? "dense" : void 0);
      },
      "number | BigNumber | Complex | Unit, string": function (h, x) {
        return m(h, x);
      },
      "number | BigNumber | Complex | Unit, Array": function (h, x) {
        var b = l(x);
        return v(b), g(h, b, void 0);
      },
      "number | BigNumber | Complex | Unit, Matrix": function (h, x) {
        v(x);
        var b = x.storage() || (t.matrix === "Matrix" ? "dense" : void 0);
        return g(h, x, b);
      },
      "number | BigNumber | Complex | Unit, Array, string": function (h, x, b) {
        var y = l(x);
        return v(y), g(h, y, b);
      },
      "number | BigNumber | Complex | Unit, Matrix, string": function (
        h,
        x,
        b
      ) {
        return v(x), g(h, x, b);
      },
    });
    function m(w, h) {
      var x = Be(w),
        b = x ? new f(-1) : -1,
        y = o(w),
        A = c(w),
        S = [
          [y, n(b, A)],
          [A, y],
        ];
      return N(S, h);
    }
    function v(w) {
      var h = w.size();
      if (h.length < 1 || h[0] !== 3)
        throw new RangeError("Vector must be of dimensions 1x3");
    }
    function d(w) {
      return w.reduce((h, x) => n(h, x));
    }
    function N(w, h) {
      if (h) {
        if (h === "sparse") return new u(w);
        if (h === "dense") return new p(w);
        throw new TypeError('Unknown matrix type "'.concat(h, '"'));
      }
      return w;
    }
    function g(w, h, x) {
      var b = s(h);
      if (b === 0) throw new RangeError("Rotation around zero vector");
      var y = Be(w) ? f : null,
        A = y ? new y(1) : 1,
        S = y ? new y(-1) : -1,
        E = y ? new y(h.get([0]) / b) : h.get([0]) / b,
        M = y ? new y(h.get([1]) / b) : h.get([1]) / b,
        _ = y ? new y(h.get([2]) / b) : h.get([2]) / b,
        C = o(w),
        I = i(A, a(C)),
        L = c(w),
        $ = i(C, d([E, E, I])),
        D = i(d([E, M, I]), d([S, _, L])),
        B = i(d([E, _, I]), d([M, L])),
        R = i(d([E, M, I]), d([_, L])),
        T = i(C, d([M, M, I])),
        P = i(d([M, _, I]), d([S, E, L])),
        W = i(d([E, _, I]), d([S, M, L])),
        J = i(d([M, _, I]), d([E, L])),
        G = i(C, d([_, _, I])),
        Y = [
          [$, D, B],
          [R, T, P],
          [W, J, G],
        ];
      return N(Y, x);
    }
  }),
  Hm = "row",
  TE = ["typed", "Index", "matrix", "range"],
  T1 = F(Hm, TE, (e) => {
    var { typed: r, Index: t, matrix: n, range: i } = e;
    return r(Hm, {
      "Matrix, number": a,
      "Array, number": function (f, l) {
        return a(n(Me(f)), l).valueOf();
      },
    });
    function a(s, f) {
      if (s.size().length !== 2)
        throw new Error("Only two dimensional matrix is supported");
      We(f, s.size()[0]);
      var l = i(0, s.size()[1]),
        p = new t(f, l);
      return s.subset(p);
    }
  }),
  Vm = "size",
  DE = ["typed", "config", "?matrix"],
  _E = F(Vm, DE, (e) => {
    var { typed: r, config: t, matrix: n } = e;
    return r(Vm, {
      Matrix: function (a) {
        return a.create(a.size());
      },
      Array: Ie,
      string: function (a) {
        return t.matrix === "Array" ? [a.length] : n([a.length]);
      },
      "number | Complex | BigNumber | Unit | boolean | null": function (a) {
        return t.matrix === "Array" ? [] : n ? n([]) : C1();
      },
    });
  }),
  Gm = "squeeze",
  BE = ["typed", "matrix"],
  IE = F(Gm, BE, (e) => {
    var { typed: r, matrix: t } = e;
    return r(Gm, {
      Array: function (i) {
        return cs(Me(i));
      },
      Matrix: function (i) {
        var a = cs(i.toArray());
        return Array.isArray(a) ? t(a) : a;
      },
      any: function (i) {
        return Me(i);
      },
    });
  }),
  Wm = "subset",
  $E = ["typed", "matrix"],
  D1 = F(Wm, $E, (e) => {
    var { typed: r, matrix: t } = e;
    return r(Wm, {
      "Array, Index": function (i, a) {
        var s = t(i),
          f = s.subset(a);
        return a.isScalar() ? f : f.valueOf();
      },
      "Matrix, Index": function (i, a) {
        return i.subset(a);
      },
      "Object, Index": RE,
      "string, Index": zE,
      "Array, Index, any": function (i, a, s) {
        return t(Me(i))
          .subset(a, s, void 0)
          .valueOf();
      },
      "Array, Index, any, any": function (i, a, s, f) {
        return t(Me(i)).subset(a, s, f).valueOf();
      },
      "Matrix, Index, any": function (i, a, s) {
        return i.clone().subset(a, s);
      },
      "Matrix, Index, any, any": function (i, a, s, f) {
        return i.clone().subset(a, s, f);
      },
      "string, Index, string": Zm,
      "string, Index, string, string": Zm,
      "Object, Index, any": FE,
    });
  });
function zE(e, r) {
  if (!Zi(r)) throw new TypeError("Index expected");
  if (r.size().length !== 1) throw new De(r.size().length, 1);
  var t = e.length;
  We(r.min()[0], t), We(r.max()[0], t);
  var n = r.dimension(0),
    i = "";
  return (
    n.forEach(function (a) {
      i += e.charAt(a);
    }),
    i
  );
}
function Zm(e, r, t, n) {
  if (!r || r.isIndex !== !0) throw new TypeError("Index expected");
  if (r.size().length !== 1) throw new De(r.size().length, 1);
  if (n !== void 0) {
    if (typeof n != "string" || n.length !== 1)
      throw new TypeError("Single character expected as defaultValue");
  } else n = " ";
  var i = r.dimension(0),
    a = i.size()[0];
  if (a !== t.length) throw new De(i.size()[0], t.length);
  var s = e.length;
  We(r.min()[0]), We(r.max()[0]);
  for (var f = [], l = 0; l < s; l++) f[l] = e.charAt(l);
  if (
    (i.forEach(function (o, c) {
      f[o] = t.charAt(c[0]);
    }),
    f.length > s)
  )
    for (var p = s - 1, u = f.length; p < u; p++) f[p] || (f[p] = n);
  return f.join("");
}
function RE(e, r) {
  if (r.size().length !== 1) throw new De(r.size(), 1);
  var t = r.dimension(0);
  if (typeof t != "string")
    throw new TypeError(
      "String expected as index to retrieve an object property"
    );
  return mt(e, t);
}
function FE(e, r, t) {
  if (r.size().length !== 1) throw new De(r.size(), 1);
  var n = r.dimension(0);
  if (typeof n != "string")
    throw new TypeError(
      "String expected as index to retrieve an object property"
    );
  var i = Me(e);
  return Ui(i, n, t), i;
}
var PE = "transpose",
  LE = ["typed", "matrix"],
  kE = F(PE, LE, (e) => {
    var { typed: r, matrix: t } = e;
    return r("transpose", {
      Array: function (s) {
        return this(t(s)).valueOf();
      },
      Matrix: function (s) {
        var f = s.size(),
          l;
        switch (f.length) {
          case 1:
            l = s.clone();
            break;
          case 2:
            {
              var p = f[0],
                u = f[1];
              if (u === 0)
                throw new RangeError(
                  "Cannot transpose a 2D matrix with no columns (size: " +
                    _e(f) +
                    ")"
                );
              switch (s.storage()) {
                case "dense":
                  l = n(s, p, u);
                  break;
                case "sparse":
                  l = i(s, p, u);
                  break;
              }
            }
            break;
          default:
            throw new RangeError(
              "Matrix must be a vector or two dimensional (size: " +
                _e(this._size) +
                ")"
            );
        }
        return l;
      },
      any: function (s) {
        return Me(s);
      },
    });
    function n(a, s, f) {
      for (var l = a._data, p = [], u, o = 0; o < f; o++) {
        u = p[o] = [];
        for (var c = 0; c < s; c++) u[c] = Me(l[c][o]);
      }
      return a.createDenseMatrix({
        data: p,
        size: [f, s],
        datatype: a._datatype,
      });
    }
    function i(a, s, f) {
      for (
        var l = a._values,
          p = a._index,
          u = a._ptr,
          o = l ? [] : void 0,
          c = [],
          m = [],
          v = [],
          d = 0;
        d < s;
        d++
      )
        v[d] = 0;
      var N, g, w;
      for (N = 0, g = p.length; N < g; N++) v[p[N]]++;
      for (var h = 0, x = 0; x < s; x++) m.push(h), (h += v[x]), (v[x] = m[x]);
      for (m.push(h), w = 0; w < f; w++)
        for (var b = u[w], y = u[w + 1], A = b; A < y; A++) {
          var S = v[p[A]]++;
          (c[S] = w), l && (o[S] = Me(l[A]));
        }
      return a.createSparseMatrix({
        values: o,
        index: c,
        ptr: m,
        size: [f, s],
        datatype: a._datatype,
      });
    }
  }),
  Qm = "ctranspose",
  UE = ["typed", "transpose", "conj"],
  qE = F(Qm, UE, (e) => {
    var { typed: r, transpose: t, conj: n } = e;
    return r(Qm, {
      any: function (a) {
        return n(t(a));
      },
    });
  }),
  Ym = "zeros",
  HE = ["typed", "config", "matrix", "BigNumber"],
  VE = F(Ym, HE, (e) => {
    var { typed: r, config: t, matrix: n, BigNumber: i } = e;
    return r(Ym, {
      "": function () {
        return t.matrix === "Array" ? a([]) : a([], "default");
      },
      "...number | BigNumber | string": function (p) {
        var u = p[p.length - 1];
        if (typeof u == "string") {
          var o = p.pop();
          return a(p, o);
        } else return t.matrix === "Array" ? a(p) : a(p, "default");
      },
      Array: a,
      Matrix: function (p) {
        var u = p.storage();
        return a(p.valueOf(), u);
      },
      "Array | Matrix, string": function (p, u) {
        return a(p.valueOf(), u);
      },
    });
    function a(l, p) {
      var u = s(l),
        o = u ? new i(0) : 0;
      if ((f(l), p)) {
        var c = n(p);
        return l.length > 0 ? c.resize(l, o) : c;
      } else {
        var m = [];
        return l.length > 0 ? Li(m, l, o) : m;
      }
    }
    function s(l) {
      var p = !1;
      return (
        l.forEach(function (u, o, c) {
          Be(u) && ((p = !0), (c[o] = u.toNumber()));
        }),
        p
      );
    }
    function f(l) {
      l.forEach(function (p) {
        if (typeof p != "number" || !Ne(p) || p < 0)
          throw new Error(
            "Parameters in function zeros must be positive integers"
          );
      });
    }
  }),
  Xm = "fft",
  GE = [
    "typed",
    "matrix",
    "addScalar",
    "multiplyScalar",
    "divideScalar",
    "exp",
    "tau",
    "i",
  ],
  WE = F(Xm, GE, (e) => {
    var {
      typed: r,
      matrix: t,
      addScalar: n,
      multiplyScalar: i,
      divideScalar: a,
      exp: s,
      tau: f,
      i: l,
    } = e;
    return r(Xm, {
      Array: p,
      Matrix: function (m) {
        return m.create(p(m.toArray()));
      },
    });
    function p(c) {
      var m = Ie(c);
      return m.length === 1
        ? o(c, m[0])
        : u(
            c.map((v) => p(v, m.slice(1))),
            0
          );
    }
    function u(c, m) {
      var v = Ie(c);
      if (m !== 0) return new Array(v[0]).fill(0).map((N, g) => u(c[g], m - 1));
      if (v.length === 1) return o(c);
      function d(N) {
        var g = Ie(N);
        return new Array(g[1])
          .fill(0)
          .map((w, h) => new Array(g[0]).fill(0).map((x, b) => N[b][h]));
      }
      return d(u(d(c), 1));
    }
    function o(c) {
      var m = c.length;
      if (m === 1) return [c[0]];
      if (m % 2 === 0) {
        for (
          var v = [
              ...o(c.filter((w, h) => h % 2 === 0)),
              ...o(c.filter((w, h) => h % 2 === 1)),
            ],
            d = 0;
          d < m / 2;
          d++
        ) {
          var N = v[d],
            g = i(v[d + m / 2], s(i(i(f, l), a(-d, m))));
          (v[d] = n(N, g)), (v[d + m / 2] = n(N, i(-1, g)));
        }
        return v;
      }
      throw new Error("Can only calculate FFT of power-of-two size");
    }
  }),
  jm = "ifft",
  ZE = ["typed", "fft", "dotDivide", "conj"],
  QE = F(jm, ZE, (e) => {
    var { typed: r, fft: t, dotDivide: n, conj: i } = e;
    return r(jm, {
      "Array | Matrix": function (s) {
        var f = Ae(s) ? s.size() : Ie(s);
        return n(
          i(t(i(s))),
          f.reduce((l, p) => l * p, 1)
        );
      },
    });
  }),
  YE = "erf",
  XE = ["typed"],
  jE = F(YE, XE, (e) => {
    var { typed: r } = e;
    return r("name", {
      number: function (s) {
        var f = Math.abs(s);
        return f >= eC
          ? pn(s)
          : f <= JE
          ? pn(s) * t(f)
          : f <= 4
          ? pn(s) * (1 - n(f))
          : pn(s) * (1 - i(f));
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
    });
    function t(a) {
      var s = a * a,
        f = Pt[0][4] * s,
        l = s,
        p;
      for (p = 0; p < 3; p += 1)
        (f = (f + Pt[0][p]) * s), (l = (l + si[0][p]) * s);
      return (a * (f + Pt[0][3])) / (l + si[0][3]);
    }
    function n(a) {
      var s = Pt[1][8] * a,
        f = a,
        l;
      for (l = 0; l < 7; l += 1)
        (s = (s + Pt[1][l]) * a), (f = (f + si[1][l]) * a);
      var p = (s + Pt[1][7]) / (f + si[1][7]),
        u = parseInt(a * 16) / 16,
        o = (a - u) * (a + u);
      return Math.exp(-u * u) * Math.exp(-o) * p;
    }
    function i(a) {
      var s = 1 / (a * a),
        f = Pt[2][5] * s,
        l = s,
        p;
      for (p = 0; p < 4; p += 1)
        (f = (f + Pt[2][p]) * s), (l = (l + si[2][p]) * s);
      var u = (s * (f + Pt[2][4])) / (l + si[2][4]);
      (u = (KE - u) / a), (s = parseInt(a * 16) / 16);
      var o = (a - s) * (a + s);
      return Math.exp(-s * s) * Math.exp(-o) * u;
    }
  }),
  JE = 0.46875,
  KE = 0.5641895835477563,
  Pt = [
    [
      3.1611237438705655, 113.86415415105016, 377.485237685302,
      3209.3775891384694, 0.18577770618460315,
    ],
    [
      0.5641884969886701, 8.883149794388377, 66.11919063714163,
      298.6351381974001, 881.952221241769, 1712.0476126340707,
      2051.0783778260716, 1230.3393547979972, 21531153547440383e-24,
    ],
    [
      0.30532663496123236, 0.36034489994980445, 0.12578172611122926,
      0.016083785148742275, 0.0006587491615298378, 0.016315387137302097,
    ],
  ],
  si = [
    [
      23.601290952344122, 244.02463793444417, 1282.6165260773723,
      2844.236833439171,
    ],
    [
      15.744926110709835, 117.6939508913125, 537.1811018620099,
      1621.3895745666903, 3290.7992357334597, 4362.619090143247,
      3439.3676741437216, 1230.3393548037495,
    ],
    [
      2.568520192289822, 1.8729528499234604, 0.5279051029514285,
      0.06051834131244132, 0.0023352049762686918,
    ],
  ],
  eC = Math.pow(2, 53),
  Jm = "mode",
  rC = ["typed", "isNaN", "isNumeric"],
  tC = F(Jm, rC, (e) => {
    var { typed: r, isNaN: t, isNumeric: n } = e;
    return r(Jm, {
      "Array | Matrix": i,
      "...": function (s) {
        return i(s);
      },
    });
    function i(a) {
      a = Re(a.valueOf());
      var s = a.length;
      if (s === 0) throw new Error("Cannot calculate mode of an empty array");
      for (var f = {}, l = [], p = 0, u = 0; u < a.length; u++) {
        var o = a[u];
        if (n(o) && t(o))
          throw new Error(
            "Cannot calculate mode of an array containing NaN values"
          );
        o in f || (f[o] = 0),
          f[o]++,
          f[o] === p ? l.push(o) : f[o] > p && ((p = f[o]), (l = [o]));
      }
      return l;
    }
  });
function Rr(e, r, t) {
  var n;
  return String(e).indexOf("Unexpected type") !== -1
    ? ((n =
        arguments.length > 2
          ? " (type: " + Ye(t) + ", value: " + JSON.stringify(t) + ")"
          : " (type: " + e.data.actual + ")"),
      new TypeError(
        "Cannot calculate " + r + ", unexpected type of argument" + n
      ))
    : String(e).indexOf("complex numbers") !== -1
    ? ((n =
        arguments.length > 2
          ? " (type: " + Ye(t) + ", value: " + JSON.stringify(t) + ")"
          : ""),
      new TypeError(
        "Cannot calculate " +
          r +
          ", no ordering relation is defined for complex numbers" +
          n
      ))
    : e;
}
var Km = "prod",
  nC = ["typed", "config", "multiplyScalar", "numeric"],
  iC = F(Km, nC, (e) => {
    var { typed: r, config: t, multiplyScalar: n, numeric: i } = e;
    return r(Km, {
      "Array | Matrix": a,
      "Array | Matrix, number | BigNumber": function (f, l) {
        throw new Error("prod(A, dim) is not yet supported");
      },
      "...": function (f) {
        return a(f);
      },
    });
    function a(s) {
      var f;
      if (
        (Jt(s, function (l) {
          try {
            f = f === void 0 ? l : n(f, l);
          } catch (p) {
            throw Rr(p, "prod", l);
          }
        }),
        typeof f == "string" && (f = i(f, t.number)),
        f === void 0)
      )
        throw new Error("Cannot calculate prod of an empty array");
      return f;
    }
  }),
  ev = "format",
  aC = ["typed"],
  oC = F(ev, aC, (e) => {
    var { typed: r } = e;
    return r(ev, { any: _e, "any, Object | function | number": _e });
  }),
  rv = "bin",
  sC = ["typed", "format"],
  uC = F(rv, sC, (e) => {
    var { typed: r, format: t } = e;
    return r(rv, {
      "number | BigNumber": function (i) {
        return t(i, { notation: "bin" });
      },
      "number | BigNumber, number": function (i, a) {
        return t(i, { notation: "bin", wordSize: a });
      },
    });
  }),
  tv = "oct",
  lC = ["typed", "format"],
  cC = F(tv, lC, (e) => {
    var { typed: r, format: t } = e;
    return r(tv, {
      "number | BigNumber": function (i) {
        return t(i, { notation: "oct" });
      },
      "number | BigNumber, number": function (i, a) {
        return t(i, { notation: "oct", wordSize: a });
      },
    });
  }),
  nv = "hex",
  fC = ["typed", "format"],
  pC = F(nv, fC, (e) => {
    var { typed: r, format: t } = e;
    return r(nv, {
      "number | BigNumber": function (i) {
        return t(i, { notation: "hex" });
      },
      "number | BigNumber, number": function (i, a) {
        return t(i, { notation: "hex", wordSize: a });
      },
    });
  }),
  iv = "print",
  mC = ["typed"],
  vC = F(iv, mC, (e) => {
    var { typed: r } = e;
    return r(iv, {
      "string, Object | Array": av,
      "string, Object | Array, number | Object": av,
    });
  });
function av(e, r, t) {
  return e.replace(/\$([\w.]+)/g, function (n, i) {
    for (var a = i.split("."), s = r[a.shift()]; a.length && s !== void 0; ) {
      var f = a.shift();
      s = f ? s[f] : s + ".";
    }
    return s !== void 0 ? ($r(s) ? s : _e(s, t)) : n;
  });
}
var ov = "to",
  dC = ["typed", "matrix"],
  hC = F(ov, dC, (e) => {
    var { typed: r, matrix: t } = e,
      n = Xe({ typed: r }),
      i = ke({ typed: r });
    return r(ov, {
      "Unit, Unit | string": function (s, f) {
        return s.to(f);
      },
      "Matrix, Matrix": function (s, f) {
        return n(s, f, this);
      },
      "Array, Array": function (s, f) {
        return this(t(s), t(f)).valueOf();
      },
      "Array, Matrix": function (s, f) {
        return this(t(s), f);
      },
      "Matrix, Array": function (s, f) {
        return this(s, t(f));
      },
      "Matrix, any": function (s, f) {
        return i(s, f, this, !1);
      },
      "any, Matrix": function (s, f) {
        return i(f, s, this, !0);
      },
      "Array, any": function (s, f) {
        return i(t(s), f, this, !1).valueOf();
      },
      "any, Array": function (s, f) {
        return i(t(f), s, this, !0).valueOf();
      },
    });
  }),
  sv = "isPrime",
  gC = ["typed"],
  yC = F(sv, gC, (e) => {
    var { typed: r } = e;
    return r(sv, {
      number: function (n) {
        if (n * 0 !== 0) return !1;
        if (n <= 3) return n > 1;
        if (n % 2 === 0 || n % 3 === 0) return !1;
        for (var i = 5; i * i <= n; i += 6)
          if (n % i === 0 || n % (i + 2) === 0) return !1;
        return !0;
      },
      BigNumber: function (n) {
        if (n.toNumber() * 0 !== 0) return !1;
        if (n.lte(3)) return n.gt(1);
        if (n.mod(2).eq(0) || n.mod(3).eq(0)) return !1;
        if (n.lt(Math.pow(2, 32))) {
          for (var i = n.toNumber(), a = 5; a * a <= i; a += 6)
            if (i % a === 0 || i % (a + 2) === 0) return !1;
          return !0;
        }
        function s(w, h, x) {
          for (var b = 1; !h.eq(0); )
            h.mod(2).eq(0)
              ? ((h = h.div(2)), (w = w.mul(w).mod(x)))
              : ((h = h.sub(1)), (b = w.mul(b).mod(x)));
          return b;
        }
        var f = n.constructor.clone({ precision: n.toFixed(0).length * 2 });
        n = new f(n);
        for (var l = 0, p = n.sub(1); p.mod(2).eq(0); )
          (p = p.div(2)), (l += 1);
        var u = null;
        if (n.lt("3317044064679887385961981"))
          u = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41].filter(
            (w) => w < n
          );
        else {
          var o = Math.min(
            n.toNumber() - 2,
            Math.floor(2 * Math.pow(n.toFixed(0).length * Math.log(10), 2))
          );
          u = [];
          for (var c = 2; c <= o; c += 1) u.push(o);
        }
        for (var m = 0; m < u.length; m += 1) {
          var v = u[m],
            d = s(n.sub(n).add(v), p, n);
          if (!d.eq(1)) {
            for (var N = 0, g = d; !g.eq(n.sub(1)); N += 1, g = g.mul(g).mod(n))
              if (N === l - 1) return !1;
          }
        }
        return !0;
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  xC = "numeric",
  wC = ["number", "?bignumber", "?fraction"],
  bC = F(xC, wC, (e) => {
    var { number: r, bignumber: t, fraction: n } = e,
      i = { string: !0, number: !0, BigNumber: !0, Fraction: !0 },
      a = {
        number: (s) => r(s),
        BigNumber: t ? (s) => t(s) : Yc,
        Fraction: n ? (s) => n(s) : E1,
      };
    return function (f, l) {
      var p = Ye(f);
      if (!(p in i))
        throw new TypeError(
          "Cannot convert " +
            f +
            ' of type "' +
            p +
            '"; valid input types are ' +
            Object.keys(i).join(", ")
        );
      if (!(l in a))
        throw new TypeError(
          "Cannot convert " +
            f +
            ' to type "' +
            l +
            '"; valid output types are ' +
            Object.keys(a).join(", ")
        );
      return l === p ? f : a[l](f);
    };
  }),
  uv = "divideScalar",
  NC = ["typed", "numeric"],
  MC = F(uv, NC, (e) => {
    var { typed: r, numeric: t } = e;
    return r(uv, {
      "number, number": function (i, a) {
        return i / a;
      },
      "Complex, Complex": function (i, a) {
        return i.div(a);
      },
      "BigNumber, BigNumber": function (i, a) {
        return i.div(a);
      },
      "Fraction, Fraction": function (i, a) {
        return i.div(a);
      },
      "Unit, number | Fraction | BigNumber": function (i, a) {
        var s = i.clone(),
          f = t(1, Ye(a));
        return (
          (s.value = this(s.value === null ? s._normalize(f) : s.value, a)), s
        );
      },
      "number | Fraction | BigNumber, Unit": function (i, a) {
        var s = a.clone();
        s = s.pow(-1);
        var f = t(1, Ye(i));
        return (
          (s.value = this(i, a.value === null ? a._normalize(f) : a.value)), s
        );
      },
      "Unit, Unit": function (i, a) {
        return i.divide(a);
      },
    });
  }),
  lv = "pow",
  SC = [
    "typed",
    "config",
    "identity",
    "multiply",
    "matrix",
    "inv",
    "fraction",
    "number",
    "Complex",
  ],
  AC = F(lv, SC, (e) => {
    var {
      typed: r,
      config: t,
      identity: n,
      multiply: i,
      matrix: a,
      inv: s,
      number: f,
      fraction: l,
      Complex: p,
    } = e;
    return r(lv, {
      "number, number": u,
      "Complex, Complex": function (v, d) {
        return v.pow(d);
      },
      "BigNumber, BigNumber": function (v, d) {
        return d.isInteger() || v >= 0 || t.predictable
          ? v.pow(d)
          : new p(v.toNumber(), 0).pow(d.toNumber(), 0);
      },
      "Fraction, Fraction": function (v, d) {
        var N = v.pow(d);
        if (N != null) return N;
        if (t.predictable)
          throw new Error(
            "Result of pow is non-rational and cannot be expressed as a fraction"
          );
        return u(v.valueOf(), d.valueOf());
      },
      "Array, number": o,
      "Array, BigNumber": function (v, d) {
        return o(v, d.toNumber());
      },
      "Matrix, number": c,
      "Matrix, BigNumber": function (v, d) {
        return c(v, d.toNumber());
      },
      "Unit, number | BigNumber": function (v, d) {
        return v.pow(d);
      },
    });
    function u(m, v) {
      if (t.predictable && !Ne(v) && m < 0)
        try {
          var d = l(v),
            N = f(d);
          if ((v === N || Math.abs((v - N) / v) < 1e-14) && d.d % 2 === 1)
            return (d.n % 2 === 0 ? 1 : -1) * Math.pow(-m, v);
        } catch {}
      return t.predictable &&
        ((m < -1 && v === 1 / 0) || (m > -1 && m < 0 && v === -1 / 0))
        ? NaN
        : Ne(v) || m >= 0 || t.predictable
        ? L0(m, v)
        : (m * m < 1 && v === 1 / 0) || (m * m > 1 && v === -1 / 0)
        ? 0
        : new p(m, 0).pow(v, 0);
    }
    function o(m, v) {
      if (!Ne(v))
        throw new TypeError(
          "For A^b, b must be an integer (value is " + v + ")"
        );
      var d = Ie(m);
      if (d.length !== 2)
        throw new Error(
          "For A^b, A must be 2 dimensional (A has " + d.length + " dimensions)"
        );
      if (d[0] !== d[1])
        throw new Error(
          "For A^b, A must be square (size is " + d[0] + "x" + d[1] + ")"
        );
      if (v < 0)
        try {
          return o(s(m), -v);
        } catch (w) {
          throw w.message === "Cannot calculate inverse, determinant is zero"
            ? new TypeError(
                "For A^b, when A is not invertible, b must be a positive integer (value is " +
                  v +
                  ")"
              )
            : w;
        }
      for (var N = n(d[0]).valueOf(), g = m; v >= 1; )
        (v & 1) === 1 && (N = i(g, N)), (v >>= 1), (g = i(g, g));
      return N;
    }
    function c(m, v) {
      return a(o(m.valueOf(), v));
    }
  }),
  ui = "Number of decimals in function round must be an integer",
  cv = "round",
  EC = ["typed", "matrix", "equalScalar", "zeros", "BigNumber", "DenseMatrix"],
  CC = F(cv, EC, (e) => {
    var {
        typed: r,
        matrix: t,
        equalScalar: n,
        zeros: i,
        BigNumber: a,
        DenseMatrix: s,
      } = e,
      f = Sr({ typed: r, equalScalar: n }),
      l = xr({ typed: r, DenseMatrix: s }),
      p = ke({ typed: r });
    return r(cv, {
      number: _p,
      "number, number": _p,
      "number, BigNumber": function (o, c) {
        if (!c.isInteger()) throw new TypeError(ui);
        return new a(o).toDecimalPlaces(c.toNumber());
      },
      Complex: function (o) {
        return o.round();
      },
      "Complex, number": function (o, c) {
        if (c % 1) throw new TypeError(ui);
        return o.round(c);
      },
      "Complex, BigNumber": function (o, c) {
        if (!c.isInteger()) throw new TypeError(ui);
        var m = c.toNumber();
        return o.round(m);
      },
      BigNumber: function (o) {
        return o.toDecimalPlaces(0);
      },
      "BigNumber, BigNumber": function (o, c) {
        if (!c.isInteger()) throw new TypeError(ui);
        return o.toDecimalPlaces(c.toNumber());
      },
      Fraction: function (o) {
        return o.round();
      },
      "Fraction, number": function (o, c) {
        if (c % 1) throw new TypeError(ui);
        return o.round(c);
      },
      "Fraction, BigNumber": function (o, c) {
        if (!c.isInteger()) throw new TypeError(ui);
        return o.round(c.toNumber());
      },
      "Array | Matrix": function (o) {
        return ye(o, this);
      },
      "SparseMatrix, number | BigNumber": function (o, c) {
        return f(o, c, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (o, c) {
        return p(o, c, this, !1);
      },
      "Array, number | BigNumber": function (o, c) {
        return p(t(o), c, this, !1).valueOf();
      },
      "number | Complex | BigNumber | Fraction, SparseMatrix": function (o, c) {
        return n(o, 0) ? i(c.size(), c.storage()) : l(c, o, this, !0);
      },
      "number | Complex | BigNumber | Fraction, DenseMatrix": function (o, c) {
        return n(o, 0) ? i(c.size(), c.storage()) : p(c, o, this, !0);
      },
      "number | Complex | BigNumber | Fraction, Array": function (o, c) {
        return p(t(c), o, this, !0).valueOf();
      },
    });
  }),
  fv = "log",
  OC = ["config", "typed", "divideScalar", "Complex"],
  TC = F(fv, OC, (e) => {
    var { typed: r, config: t, divideScalar: n, Complex: i } = e;
    return r(fv, {
      number: function (s) {
        return s >= 0 || t.predictable ? RM(s) : new i(s, 0).log();
      },
      Complex: function (s) {
        return s.log();
      },
      BigNumber: function (s) {
        return !s.isNegative() || t.predictable
          ? s.ln()
          : new i(s.toNumber(), 0).log();
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
      "any, any": function (s, f) {
        return n(this(s), this(f));
      },
    });
  }),
  pv = "log1p",
  DC = ["typed", "config", "divideScalar", "log", "Complex"],
  _C = F(pv, DC, (e) => {
    var { typed: r, config: t, divideScalar: n, log: i, Complex: a } = e;
    return r(pv, {
      number: function (l) {
        return l >= -1 || t.predictable ? Ub(l) : s(new a(l, 0));
      },
      Complex: s,
      BigNumber: function (l) {
        var p = l.plus(1);
        return !p.isNegative() || t.predictable
          ? p.ln()
          : s(new a(l.toNumber(), 0));
      },
      "Array | Matrix": function (l) {
        return ye(l, this);
      },
      "any, any": function (l, p) {
        return n(this(l), i(p));
      },
    });
    function s(f) {
      var l = f.re + 1;
      return new a(
        Math.log(Math.sqrt(l * l + f.im * f.im)),
        Math.atan2(f.im, l)
      );
    }
  }),
  mv = "nthRoots",
  BC = ["config", "typed", "divideScalar", "Complex"],
  IC = F(mv, BC, (e) => {
    var { typed: r, config: t, divideScalar: n, Complex: i } = e,
      a = [
        function (l) {
          return new i(l, 0);
        },
        function (l) {
          return new i(0, l);
        },
        function (l) {
          return new i(-l, 0);
        },
        function (l) {
          return new i(0, -l);
        },
      ];
    function s(f, l) {
      if (l < 0) throw new Error("Root must be greater than zero");
      if (l === 0) throw new Error("Root must be non-zero");
      if (l % 1 !== 0) throw new Error("Root must be an integer");
      if (f === 0 || f.abs() === 0) return [new i(0, 0)];
      var p = typeof f == "number",
        u;
      (p || f.re === 0 || f.im === 0) &&
        (p
          ? (u = 2 * +(f < 0))
          : f.im === 0
          ? (u = 2 * +(f.re < 0))
          : (u = 2 * +(f.im < 0) + 1));
      for (
        var o = f.arg(), c = f.abs(), m = [], v = Math.pow(c, 1 / l), d = 0;
        d < l;
        d++
      ) {
        var N = (u + 4 * d) / l;
        if (N === Math.round(N)) {
          m.push(a[N % 4](v));
          continue;
        }
        m.push(new i({ r: v, phi: (o + 2 * Math.PI * d) / l }));
      }
      return m;
    }
    return r(mv, {
      Complex: function (l) {
        return s(l, 2);
      },
      "Complex, number": s,
    });
  }),
  vv = "dotPow",
  $C = ["typed", "equalScalar", "matrix", "pow", "DenseMatrix"],
  zC = F(vv, $C, (e) => {
    var { typed: r, equalScalar: t, matrix: n, pow: i, DenseMatrix: a } = e,
      s = Lr({ typed: r }),
      f = Rt({ typed: r, DenseMatrix: a }),
      l = Sr({ typed: r, equalScalar: t }),
      p = xr({ typed: r, DenseMatrix: a }),
      u = Xe({ typed: r }),
      o = ke({ typed: r });
    return r(vv, {
      "any, any": i,
      "SparseMatrix, SparseMatrix": function (m, v) {
        return f(m, v, i, !1);
      },
      "SparseMatrix, DenseMatrix": function (m, v) {
        return s(v, m, i, !0);
      },
      "DenseMatrix, SparseMatrix": function (m, v) {
        return s(m, v, i, !1);
      },
      "DenseMatrix, DenseMatrix": function (m, v) {
        return u(m, v, i);
      },
      "Array, Array": function (m, v) {
        return this(n(m), n(v)).valueOf();
      },
      "Array, Matrix": function (m, v) {
        return this(n(m), v);
      },
      "Matrix, Array": function (m, v) {
        return this(m, n(v));
      },
      "SparseMatrix, any": function (m, v) {
        return l(m, v, this, !1);
      },
      "DenseMatrix, any": function (m, v) {
        return o(m, v, this, !1);
      },
      "any, SparseMatrix": function (m, v) {
        return p(v, m, this, !0);
      },
      "any, DenseMatrix": function (m, v) {
        return o(v, m, this, !0);
      },
      "Array, any": function (m, v) {
        return o(n(m), v, this, !1).valueOf();
      },
      "any, Array": function (m, v) {
        return o(n(v), m, this, !0).valueOf();
      },
    });
  }),
  dv = "dotDivide",
  RC = ["typed", "matrix", "equalScalar", "divideScalar", "DenseMatrix"],
  FC = F(dv, RC, (e) => {
    var {
        typed: r,
        matrix: t,
        equalScalar: n,
        divideScalar: i,
        DenseMatrix: a,
      } = e,
      s = Et({ typed: r, equalScalar: n }),
      f = Lr({ typed: r }),
      l = Rt({ typed: r, DenseMatrix: a }),
      p = Sr({ typed: r, equalScalar: n }),
      u = xr({ typed: r, DenseMatrix: a }),
      o = Xe({ typed: r }),
      c = ke({ typed: r });
    return r(dv, {
      "any, any": i,
      "SparseMatrix, SparseMatrix": function (v, d) {
        return l(v, d, i, !1);
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return s(d, v, i, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        return f(v, d, i, !1);
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return o(v, d, i);
      },
      "Array, Array": function (v, d) {
        return this(t(v), t(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(t(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, t(d));
      },
      "SparseMatrix, any": function (v, d) {
        return p(v, d, i, !1);
      },
      "DenseMatrix, any": function (v, d) {
        return c(v, d, i, !1);
      },
      "any, SparseMatrix": function (v, d) {
        return u(d, v, i, !0);
      },
      "any, DenseMatrix": function (v, d) {
        return c(d, v, i, !0);
      },
      "Array, any": function (v, d) {
        return c(t(v), d, i, !1).valueOf();
      },
      "any, Array": function (v, d) {
        return c(t(d), v, i, !0).valueOf();
      },
    });
  });
function to(e) {
  var { DenseMatrix: r } = e;
  return function (n, i, a) {
    var s = n.size();
    if (s.length !== 2)
      throw new RangeError(
        "Matrix must be two dimensional (size: " + _e(s) + ")"
      );
    var f = s[0],
      l = s[1];
    if (f !== l)
      throw new RangeError("Matrix must be square (size: " + _e(s) + ")");
    var p = [];
    if (Ae(i)) {
      var u = i.size(),
        o = i._data;
      if (u.length === 1) {
        if (u[0] !== f)
          throw new RangeError(
            "Dimension mismatch. Matrix columns must match vector length."
          );
        for (var c = 0; c < f; c++) p[c] = [o[c]];
        return new r({ data: p, size: [f, 1], datatype: i._datatype });
      }
      if (u.length === 2) {
        if (u[0] !== f || u[1] !== 1)
          throw new RangeError(
            "Dimension mismatch. Matrix columns must match vector length."
          );
        if (Ha(i)) {
          if (a) {
            p = [];
            for (var m = 0; m < f; m++) p[m] = [o[m][0]];
            return new r({ data: p, size: [f, 1], datatype: i._datatype });
          }
          return i;
        }
        if (fn(i)) {
          for (var v = 0; v < f; v++) p[v] = [0];
          for (
            var d = i._values, N = i._index, g = i._ptr, w = g[1], h = g[0];
            h < w;
            h++
          ) {
            var x = N[h];
            p[x][0] = d[h];
          }
          return new r({ data: p, size: [f, 1], datatype: i._datatype });
        }
      }
      throw new RangeError(
        "Dimension mismatch. The right side has to be either 1- or 2-dimensional vector."
      );
    }
    if (He(i)) {
      var b = Ie(i);
      if (b.length === 1) {
        if (b[0] !== f)
          throw new RangeError(
            "Dimension mismatch. Matrix columns must match vector length."
          );
        for (var y = 0; y < f; y++) p[y] = [i[y]];
        return new r({ data: p, size: [f, 1] });
      }
      if (b.length === 2) {
        if (b[0] !== f || b[1] !== 1)
          throw new RangeError(
            "Dimension mismatch. Matrix columns must match vector length."
          );
        for (var A = 0; A < f; A++) p[A] = [i[A][0]];
        return new r({ data: p, size: [f, 1] });
      }
      throw new RangeError(
        "Dimension mismatch. The right side has to be either 1- or 2-dimensional vector."
      );
    }
  };
}
var hv = "lsolve",
  PC = [
    "typed",
    "matrix",
    "divideScalar",
    "multiplyScalar",
    "subtract",
    "equalScalar",
    "DenseMatrix",
  ],
  LC = F(hv, PC, (e) => {
    var {
        typed: r,
        matrix: t,
        divideScalar: n,
        multiplyScalar: i,
        subtract: a,
        equalScalar: s,
        DenseMatrix: f,
      } = e,
      l = to({ DenseMatrix: f });
    return r(hv, {
      "SparseMatrix, Array | Matrix": function (c, m) {
        return u(c, m);
      },
      "DenseMatrix, Array | Matrix": function (c, m) {
        return p(c, m);
      },
      "Array, Array | Matrix": function (c, m) {
        var v = t(c),
          d = p(v, m);
        return d.valueOf();
      },
    });
    function p(o, c) {
      c = l(o, c, !0);
      for (
        var m = c._data,
          v = o._size[0],
          d = o._size[1],
          N = [],
          g = o._data,
          w = 0;
        w < d;
        w++
      ) {
        var h = m[w][0] || 0,
          x = void 0;
        if (s(h, 0)) x = 0;
        else {
          var b = g[w][w];
          if (s(b, 0))
            throw new Error(
              "Linear system cannot be solved since matrix is singular"
            );
          x = n(h, b);
          for (var y = w + 1; y < v; y++)
            m[y] = [a(m[y][0] || 0, i(x, g[y][w]))];
        }
        N[w] = [x];
      }
      return new f({ data: N, size: [v, 1] });
    }
    function u(o, c) {
      c = l(o, c, !0);
      for (
        var m = c._data,
          v = o._size[0],
          d = o._size[1],
          N = o._values,
          g = o._index,
          w = o._ptr,
          h = [],
          x = 0;
        x < d;
        x++
      ) {
        var b = m[x][0] || 0;
        if (s(b, 0)) h[x] = [0];
        else {
          for (
            var y = 0, A = [], S = [], E = w[x], M = w[x + 1], _ = E;
            _ < M;
            _++
          ) {
            var C = g[_];
            C === x ? (y = N[_]) : C > x && (A.push(N[_]), S.push(C));
          }
          if (s(y, 0))
            throw new Error(
              "Linear system cannot be solved since matrix is singular"
            );
          for (var I = n(b, y), L = 0, $ = S.length; L < $; L++) {
            var D = S[L];
            m[D] = [a(m[D][0] || 0, i(I, A[L]))];
          }
          h[x] = [I];
        }
      }
      return new f({ data: h, size: [v, 1] });
    }
  }),
  gv = "usolve",
  kC = [
    "typed",
    "matrix",
    "divideScalar",
    "multiplyScalar",
    "subtract",
    "equalScalar",
    "DenseMatrix",
  ],
  UC = F(gv, kC, (e) => {
    var {
        typed: r,
        matrix: t,
        divideScalar: n,
        multiplyScalar: i,
        subtract: a,
        equalScalar: s,
        DenseMatrix: f,
      } = e,
      l = to({ DenseMatrix: f });
    return r(gv, {
      "SparseMatrix, Array | Matrix": function (c, m) {
        return u(c, m);
      },
      "DenseMatrix, Array | Matrix": function (c, m) {
        return p(c, m);
      },
      "Array, Array | Matrix": function (c, m) {
        var v = t(c),
          d = p(v, m);
        return d.valueOf();
      },
    });
    function p(o, c) {
      c = l(o, c, !0);
      for (
        var m = c._data,
          v = o._size[0],
          d = o._size[1],
          N = [],
          g = o._data,
          w = d - 1;
        w >= 0;
        w--
      ) {
        var h = m[w][0] || 0,
          x = void 0;
        if (s(h, 0)) x = 0;
        else {
          var b = g[w][w];
          if (s(b, 0))
            throw new Error(
              "Linear system cannot be solved since matrix is singular"
            );
          x = n(h, b);
          for (var y = w - 1; y >= 0; y--)
            m[y] = [a(m[y][0] || 0, i(x, g[y][w]))];
        }
        N[w] = [x];
      }
      return new f({ data: N, size: [v, 1] });
    }
    function u(o, c) {
      c = l(o, c, !0);
      for (
        var m = c._data,
          v = o._size[0],
          d = o._size[1],
          N = o._values,
          g = o._index,
          w = o._ptr,
          h = [],
          x = d - 1;
        x >= 0;
        x--
      ) {
        var b = m[x][0] || 0;
        if (s(b, 0)) h[x] = [0];
        else {
          for (
            var y = 0, A = [], S = [], E = w[x], M = w[x + 1], _ = M - 1;
            _ >= E;
            _--
          ) {
            var C = g[_];
            C === x ? (y = N[_]) : C < x && (A.push(N[_]), S.push(C));
          }
          if (s(y, 0))
            throw new Error(
              "Linear system cannot be solved since matrix is singular"
            );
          for (var I = n(b, y), L = 0, $ = S.length; L < $; L++) {
            var D = S[L];
            m[D] = [a(m[D][0], i(I, A[L]))];
          }
          h[x] = [I];
        }
      }
      return new f({ data: h, size: [v, 1] });
    }
  }),
  yv = "lsolveAll",
  qC = [
    "typed",
    "matrix",
    "divideScalar",
    "multiplyScalar",
    "subtract",
    "equalScalar",
    "DenseMatrix",
  ],
  HC = F(yv, qC, (e) => {
    var {
        typed: r,
        matrix: t,
        divideScalar: n,
        multiplyScalar: i,
        subtract: a,
        equalScalar: s,
        DenseMatrix: f,
      } = e,
      l = to({ DenseMatrix: f });
    return r(yv, {
      "SparseMatrix, Array | Matrix": function (c, m) {
        return u(c, m);
      },
      "DenseMatrix, Array | Matrix": function (c, m) {
        return p(c, m);
      },
      "Array, Array | Matrix": function (c, m) {
        var v = t(c),
          d = p(v, m);
        return d.map((N) => N.valueOf());
      },
    });
    function p(o, c) {
      for (
        var m = [l(o, c, !0)._data.map((S) => S[0])],
          v = o._data,
          d = o._size[0],
          N = o._size[1],
          g = 0;
        g < N;
        g++
      )
        for (var w = m.length, h = 0; h < w; h++) {
          var x = m[h];
          if (s(v[g][g], 0))
            if (s(x[g], 0)) {
              if (h === 0) {
                var y = [...x];
                y[g] = 1;
                for (var A = g + 1; A < N; A++) y[A] = a(y[A], v[A][g]);
                m.push(y);
              }
            } else {
              if (h === 0) return [];
              m.splice(h, 1), (h -= 1), (w -= 1);
            }
          else {
            x[g] = n(x[g], v[g][g]);
            for (var b = g + 1; b < N; b++) x[b] = a(x[b], i(x[g], v[b][g]));
          }
        }
      return m.map((S) => new f({ data: S.map((E) => [E]), size: [d, 1] }));
    }
    function u(o, c) {
      for (
        var m = [l(o, c, !0)._data.map((W) => W[0])],
          v = o._size[0],
          d = o._size[1],
          N = o._values,
          g = o._index,
          w = o._ptr,
          h = 0;
        h < d;
        h++
      )
        for (var x = m.length, b = 0; b < x; b++) {
          for (
            var y = m[b], A = [], S = [], E = w[h], M = w[h + 1], _ = 0, C = E;
            C < M;
            C++
          ) {
            var I = g[C];
            I === h ? (_ = N[C]) : I > h && (A.push(N[C]), S.push(I));
          }
          if (s(_, 0))
            if (s(y[h], 0)) {
              if (b === 0) {
                var B = [...y];
                B[h] = 1;
                for (var R = 0, T = S.length; R < T; R++) {
                  var P = S[R];
                  B[P] = a(B[P], A[R]);
                }
                m.push(B);
              }
            } else {
              if (b === 0) return [];
              m.splice(b, 1), (b -= 1), (x -= 1);
            }
          else {
            y[h] = n(y[h], _);
            for (var L = 0, $ = S.length; L < $; L++) {
              var D = S[L];
              y[D] = a(y[D], i(y[h], A[L]));
            }
          }
        }
      return m.map((W) => new f({ data: W.map((J) => [J]), size: [v, 1] }));
    }
  }),
  xv = "usolveAll",
  VC = [
    "typed",
    "matrix",
    "divideScalar",
    "multiplyScalar",
    "subtract",
    "equalScalar",
    "DenseMatrix",
  ],
  GC = F(xv, VC, (e) => {
    var {
        typed: r,
        matrix: t,
        divideScalar: n,
        multiplyScalar: i,
        subtract: a,
        equalScalar: s,
        DenseMatrix: f,
      } = e,
      l = to({ DenseMatrix: f });
    return r(xv, {
      "SparseMatrix, Array | Matrix": function (c, m) {
        return u(c, m);
      },
      "DenseMatrix, Array | Matrix": function (c, m) {
        return p(c, m);
      },
      "Array, Array | Matrix": function (c, m) {
        var v = t(c),
          d = p(v, m);
        return d.map((N) => N.valueOf());
      },
    });
    function p(o, c) {
      for (
        var m = [l(o, c, !0)._data.map((S) => S[0])],
          v = o._data,
          d = o._size[0],
          N = o._size[1],
          g = N - 1;
        g >= 0;
        g--
      )
        for (var w = m.length, h = 0; h < w; h++) {
          var x = m[h];
          if (s(v[g][g], 0))
            if (s(x[g], 0)) {
              if (h === 0) {
                var y = [...x];
                y[g] = 1;
                for (var A = g - 1; A >= 0; A--) y[A] = a(y[A], v[A][g]);
                m.push(y);
              }
            } else {
              if (h === 0) return [];
              m.splice(h, 1), (h -= 1), (w -= 1);
            }
          else {
            x[g] = n(x[g], v[g][g]);
            for (var b = g - 1; b >= 0; b--) x[b] = a(x[b], i(x[g], v[b][g]));
          }
        }
      return m.map((S) => new f({ data: S.map((E) => [E]), size: [d, 1] }));
    }
    function u(o, c) {
      for (
        var m = [l(o, c, !0)._data.map((W) => W[0])],
          v = o._size[0],
          d = o._size[1],
          N = o._values,
          g = o._index,
          w = o._ptr,
          h = d - 1;
        h >= 0;
        h--
      )
        for (var x = m.length, b = 0; b < x; b++) {
          for (
            var y = m[b],
              A = [],
              S = [],
              E = w[h],
              M = w[h + 1],
              _ = 0,
              C = M - 1;
            C >= E;
            C--
          ) {
            var I = g[C];
            I === h ? (_ = N[C]) : I < h && (A.push(N[C]), S.push(I));
          }
          if (s(_, 0))
            if (s(y[h], 0)) {
              if (b === 0) {
                var B = [...y];
                B[h] = 1;
                for (var R = 0, T = S.length; R < T; R++) {
                  var P = S[R];
                  B[P] = a(B[P], A[R]);
                }
                m.push(B);
              }
            } else {
              if (b === 0) return [];
              m.splice(b, 1), (b -= 1), (x -= 1);
            }
          else {
            y[h] = n(y[h], _);
            for (var L = 0, $ = S.length; L < $; L++) {
              var D = S[L];
              y[D] = a(y[D], i(y[h], A[L]));
            }
          }
        }
      return m.map((W) => new f({ data: W.map((J) => [J]), size: [v, 1] }));
    }
  }),
  WC = "algorithm08",
  ZC = ["typed", "equalScalar"],
  Xc = F(WC, ZC, (e) => {
    var { typed: r, equalScalar: t } = e;
    return function (i, a, s) {
      var f = i._values,
        l = i._index,
        p = i._ptr,
        u = i._size,
        o = i._datatype,
        c = a._values,
        m = a._index,
        v = a._ptr,
        d = a._size,
        N = a._datatype;
      if (u.length !== d.length) throw new De(u.length, d.length);
      if (u[0] !== d[0] || u[1] !== d[1])
        throw new RangeError(
          "Dimension mismatch. Matrix A (" +
            u +
            ") must match Matrix B (" +
            d +
            ")"
        );
      if (!f || !c)
        throw new Error("Cannot perform operation on Pattern Sparse Matrices");
      var g = u[0],
        w = u[1],
        h,
        x = t,
        b = 0,
        y = s;
      typeof o == "string" &&
        o === N &&
        ((h = o),
        (x = r.find(t, [h, h])),
        (b = r.convert(0, h)),
        (y = r.find(s, [h, h])));
      for (
        var A = [], S = [], E = [], M = [], _ = [], C, I, L, $, D = 0;
        D < w;
        D++
      ) {
        E[D] = S.length;
        var B = D + 1;
        for (I = p[D], L = p[D + 1], C = I; C < L; C++)
          ($ = l[C]), (_[$] = B), (M[$] = f[C]), S.push($);
        for (I = v[D], L = v[D + 1], C = I; C < L; C++)
          ($ = m[C]), _[$] === B && (M[$] = y(M[$], c[C]));
        for (C = E[D]; C < S.length; ) {
          $ = S[C];
          var R = M[$];
          x(R, b) ? S.splice(C, 1) : (A.push(R), C++);
        }
      }
      return (
        (E[w] = S.length),
        i.createSparseMatrix({
          values: A,
          index: S,
          ptr: E,
          size: [g, w],
          datatype: h,
        })
      );
    };
  }),
  wv = "leftShift",
  QC = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix"],
  YC = F(wv, QC, (e) => {
    var { typed: r, matrix: t, equalScalar: n, zeros: i, DenseMatrix: a } = e,
      s = $n({ typed: r }),
      f = Et({ typed: r, equalScalar: n }),
      l = Xc({ typed: r, equalScalar: n }),
      p = ri({ typed: r, DenseMatrix: a }),
      u = Sr({ typed: r, equalScalar: n }),
      o = Xe({ typed: r }),
      c = ke({ typed: r });
    return r(wv, {
      "number, number": V0,
      "BigNumber, BigNumber": gA,
      "SparseMatrix, SparseMatrix": function (v, d) {
        return l(v, d, this, !1);
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return f(d, v, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        return s(v, d, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return o(v, d, this);
      },
      "Array, Array": function (v, d) {
        return this(t(v), t(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(t(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, t(d));
      },
      "SparseMatrix, number | BigNumber": function (v, d) {
        return n(d, 0) ? v.clone() : u(v, d, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (v, d) {
        return n(d, 0) ? v.clone() : c(v, d, this, !1);
      },
      "number | BigNumber, SparseMatrix": function (v, d) {
        return n(v, 0) ? i(d.size(), d.storage()) : p(d, v, this, !0);
      },
      "number | BigNumber, DenseMatrix": function (v, d) {
        return n(v, 0) ? i(d.size(), d.storage()) : c(d, v, this, !0);
      },
      "Array, number | BigNumber": function (v, d) {
        return this(t(v), d).valueOf();
      },
      "number | BigNumber, Array": function (v, d) {
        return this(v, t(d)).valueOf();
      },
    });
  }),
  bv = "rightArithShift",
  XC = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix"],
  jC = F(bv, XC, (e) => {
    var { typed: r, matrix: t, equalScalar: n, zeros: i, DenseMatrix: a } = e,
      s = $n({ typed: r }),
      f = Et({ typed: r, equalScalar: n }),
      l = Xc({ typed: r, equalScalar: n }),
      p = ri({ typed: r, DenseMatrix: a }),
      u = Sr({ typed: r, equalScalar: n }),
      o = Xe({ typed: r }),
      c = ke({ typed: r });
    return r(bv, {
      "number, number": G0,
      "BigNumber, BigNumber": yA,
      "SparseMatrix, SparseMatrix": function (v, d) {
        return l(v, d, this, !1);
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return f(d, v, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        return s(v, d, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return o(v, d, this);
      },
      "Array, Array": function (v, d) {
        return this(t(v), t(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(t(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, t(d));
      },
      "SparseMatrix, number | BigNumber": function (v, d) {
        return n(d, 0) ? v.clone() : u(v, d, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (v, d) {
        return n(d, 0) ? v.clone() : c(v, d, this, !1);
      },
      "number | BigNumber, SparseMatrix": function (v, d) {
        return n(v, 0) ? i(d.size(), d.storage()) : p(d, v, this, !0);
      },
      "number | BigNumber, DenseMatrix": function (v, d) {
        return n(v, 0) ? i(d.size(), d.storage()) : c(d, v, this, !0);
      },
      "Array, number | BigNumber": function (v, d) {
        return this(t(v), d).valueOf();
      },
      "number | BigNumber, Array": function (v, d) {
        return this(v, t(d)).valueOf();
      },
    });
  }),
  Nv = "rightLogShift",
  JC = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix"],
  KC = F(Nv, JC, (e) => {
    var { typed: r, matrix: t, equalScalar: n, zeros: i, DenseMatrix: a } = e,
      s = $n({ typed: r }),
      f = Et({ typed: r, equalScalar: n }),
      l = Xc({ typed: r, equalScalar: n }),
      p = ri({ typed: r, DenseMatrix: a }),
      u = Sr({ typed: r, equalScalar: n }),
      o = Xe({ typed: r }),
      c = ke({ typed: r });
    return r(Nv, {
      "number, number": W0,
      "SparseMatrix, SparseMatrix": function (v, d) {
        return l(v, d, this, !1);
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return f(d, v, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        return s(v, d, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return o(v, d, this);
      },
      "Array, Array": function (v, d) {
        return this(t(v), t(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(t(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, t(d));
      },
      "SparseMatrix, number | BigNumber": function (v, d) {
        return n(d, 0) ? v.clone() : u(v, d, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (v, d) {
        return n(d, 0) ? v.clone() : c(v, d, this, !1);
      },
      "number | BigNumber, SparseMatrix": function (v, d) {
        return n(v, 0) ? i(d.size(), d.storage()) : p(d, v, this, !0);
      },
      "number | BigNumber, DenseMatrix": function (v, d) {
        return n(v, 0) ? i(d.size(), d.storage()) : c(d, v, this, !0);
      },
      "Array, number | BigNumber": function (v, d) {
        return this(t(v), d).valueOf();
      },
      "number | BigNumber, Array": function (v, d) {
        return this(v, t(d)).valueOf();
      },
    });
  }),
  Mv = "and",
  e3 = ["typed", "matrix", "equalScalar", "zeros", "not"],
  r3 = F(Mv, e3, (e) => {
    var { typed: r, matrix: t, equalScalar: n, zeros: i, not: a } = e,
      s = Et({ typed: r, equalScalar: n }),
      f = Qs({ typed: r, equalScalar: n }),
      l = Sr({ typed: r, equalScalar: n }),
      p = Xe({ typed: r }),
      u = ke({ typed: r });
    return r(Mv, {
      "number, number": j0,
      "Complex, Complex": function (c, m) {
        return (c.re !== 0 || c.im !== 0) && (m.re !== 0 || m.im !== 0);
      },
      "BigNumber, BigNumber": function (c, m) {
        return !c.isZero() && !m.isZero() && !c.isNaN() && !m.isNaN();
      },
      "Unit, Unit": function (c, m) {
        return this(c.value || 0, m.value || 0);
      },
      "SparseMatrix, SparseMatrix": function (c, m) {
        return f(c, m, this, !1);
      },
      "SparseMatrix, DenseMatrix": function (c, m) {
        return s(m, c, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (c, m) {
        return s(c, m, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (c, m) {
        return p(c, m, this);
      },
      "Array, Array": function (c, m) {
        return this(t(c), t(m)).valueOf();
      },
      "Array, Matrix": function (c, m) {
        return this(t(c), m);
      },
      "Matrix, Array": function (c, m) {
        return this(c, t(m));
      },
      "SparseMatrix, any": function (c, m) {
        return a(m) ? i(c.size(), c.storage()) : l(c, m, this, !1);
      },
      "DenseMatrix, any": function (c, m) {
        return a(m) ? i(c.size(), c.storage()) : u(c, m, this, !1);
      },
      "any, SparseMatrix": function (c, m) {
        return a(c) ? i(c.size(), c.storage()) : l(m, c, this, !0);
      },
      "any, DenseMatrix": function (c, m) {
        return a(c) ? i(c.size(), c.storage()) : u(m, c, this, !0);
      },
      "Array, any": function (c, m) {
        return this(t(c), m).valueOf();
      },
      "any, Array": function (c, m) {
        return this(c, t(m)).valueOf();
      },
    });
  }),
  Sv = "compare",
  t3 = [
    "typed",
    "config",
    "matrix",
    "equalScalar",
    "BigNumber",
    "Fraction",
    "DenseMatrix",
  ],
  n3 = F(Sv, t3, (e) => {
    var {
        typed: r,
        config: t,
        equalScalar: n,
        matrix: i,
        BigNumber: a,
        Fraction: s,
        DenseMatrix: f,
      } = e,
      l = Lr({ typed: r }),
      p = Ys({ typed: r, equalScalar: n }),
      u = xr({ typed: r, DenseMatrix: f }),
      o = Xe({ typed: r }),
      c = ke({ typed: r });
    return r(Sv, {
      "boolean, boolean": function (v, d) {
        return v === d ? 0 : v > d ? 1 : -1;
      },
      "number, number": function (v, d) {
        return rt(v, d, t.epsilon) ? 0 : v > d ? 1 : -1;
      },
      "BigNumber, BigNumber": function (v, d) {
        return zt(v, d, t.epsilon) ? new a(0) : new a(v.cmp(d));
      },
      "Fraction, Fraction": function (v, d) {
        return new s(v.compare(d));
      },
      "Complex, Complex": function () {
        throw new TypeError(
          "No ordering relation is defined for complex numbers"
        );
      },
      "Unit, Unit": function (v, d) {
        if (!v.equalBase(d))
          throw new Error("Cannot compare units with different base");
        return this(v.value, d.value);
      },
      "SparseMatrix, SparseMatrix": function (v, d) {
        return p(v, d, this);
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return l(d, v, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        return l(v, d, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return o(v, d, this);
      },
      "Array, Array": function (v, d) {
        return this(i(v), i(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(i(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, i(d));
      },
      "SparseMatrix, any": function (v, d) {
        return u(v, d, this, !1);
      },
      "DenseMatrix, any": function (v, d) {
        return c(v, d, this, !1);
      },
      "any, SparseMatrix": function (v, d) {
        return u(d, v, this, !0);
      },
      "any, DenseMatrix": function (v, d) {
        return c(d, v, this, !0);
      },
      "Array, any": function (v, d) {
        return c(i(v), d, this, !1).valueOf();
      },
      "any, Array": function (v, d) {
        return c(i(d), v, this, !0).valueOf();
      },
    });
  }),
  li = function e(r, t) {
    var n =
        /(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,
      i = /(^[ ]*|[ ]*$)/g,
      a =
        /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
      s = /^0x[0-9a-f]+$/i,
      f = /^0/,
      l = function (h) {
        return (e.insensitive && ("" + h).toLowerCase()) || "" + h;
      },
      p = l(r).replace(i, "") || "",
      u = l(t).replace(i, "") || "",
      o = p
        .replace(n, "\0$1\0")
        .replace(/\0$/, "")
        .replace(/^\0/, "")
        .split("\0"),
      c = u
        .replace(n, "\0$1\0")
        .replace(/\0$/, "")
        .replace(/^\0/, "")
        .split("\0"),
      m =
        parseInt(p.match(s), 16) ||
        (o.length !== 1 && p.match(a) && Date.parse(p)),
      v =
        parseInt(u.match(s), 16) || (m && u.match(a) && Date.parse(u)) || null,
      d,
      N;
    if (v) {
      if (m < v) return -1;
      if (m > v) return 1;
    }
    for (var g = 0, w = Math.max(o.length, c.length); g < w; g++) {
      if (
        ((d = (!(o[g] || "").match(f) && parseFloat(o[g])) || o[g] || 0),
        (N = (!(c[g] || "").match(f) && parseFloat(c[g])) || c[g] || 0),
        isNaN(d) !== isNaN(N))
      )
        return isNaN(d) ? 1 : -1;
      if ((typeof d != typeof N && ((d += ""), (N += "")), d < N)) return -1;
      if (d > N) return 1;
    }
    return 0;
  },
  Av = "compareNatural",
  i3 = ["typed", "compare"],
  a3 = F(Av, i3, (e) => {
    var { typed: r, compare: t } = e,
      n = t.signatures["boolean,boolean"];
    return r(Av, {
      "any, any": function (l, p) {
        var u = Ye(l),
          o = Ye(p),
          c;
        if (
          (u === "number" || u === "BigNumber" || u === "Fraction") &&
          (o === "number" || o === "BigNumber" || o === "Fraction")
        )
          return (
            (c = t(l, p)), c.toString() !== "0" ? (c > 0 ? 1 : -1) : li(u, o)
          );
        if (u === "Array" || u === "Matrix" || o === "Array" || o === "Matrix")
          return (c = i(this, l, p)), c !== 0 ? c : li(u, o);
        if (u !== o) return li(u, o);
        if (u === "Complex") return o3(l, p);
        if (u === "Unit")
          return l.equalBase(p)
            ? this(l.value, p.value)
            : a(this, l.formatUnits(), p.formatUnits());
        if (u === "boolean") return n(l, p);
        if (u === "string") return li(l, p);
        if (u === "Object") return s(this, l, p);
        if (u === "null" || u === "undefined") return 0;
        throw new TypeError('Unsupported type of value "' + u + '"');
      },
    });
    function i(f, l, p) {
      return fn(l) && fn(p)
        ? a(f, l.toJSON().values, p.toJSON().values)
        : fn(l)
        ? i(f, l.toArray(), p)
        : fn(p)
        ? i(f, l, p.toArray())
        : Ha(l)
        ? i(f, l.toJSON().data, p)
        : Ha(p)
        ? i(f, l, p.toJSON().data)
        : Array.isArray(l)
        ? Array.isArray(p)
          ? a(f, l, p)
          : i(f, l, [p])
        : i(f, [l], p);
    }
    function a(f, l, p) {
      for (var u = 0, o = Math.min(l.length, p.length); u < o; u++) {
        var c = f(l[u], p[u]);
        if (c !== 0) return c;
      }
      return l.length > p.length ? 1 : l.length < p.length ? -1 : 0;
    }
    function s(f, l, p) {
      var u = Object.keys(l),
        o = Object.keys(p);
      u.sort(li), o.sort(li);
      var c = a(f, u, o);
      if (c !== 0) return c;
      for (var m = 0; m < u.length; m++) {
        var v = f(l[u[m]], p[o[m]]);
        if (v !== 0) return v;
      }
      return 0;
    }
  });
function o3(e, r) {
  return e.re > r.re
    ? 1
    : e.re < r.re
    ? -1
    : e.im > r.im
    ? 1
    : e.im < r.im
    ? -1
    : 0;
}
var Ev = "compareText",
  s3 = ["typed", "matrix"],
  u3 = F(Ev, s3, (e) => {
    var { typed: r, matrix: t } = e,
      n = Xe({ typed: r }),
      i = ke({ typed: r });
    return r(Ev, {
      "any, any": ai,
      "DenseMatrix, DenseMatrix": function (s, f) {
        return n(s, f, ai);
      },
      "Array, Array": function (s, f) {
        return this(t(s), t(f)).valueOf();
      },
      "Array, Matrix": function (s, f) {
        return this(t(s), f);
      },
      "Matrix, Array": function (s, f) {
        return this(s, t(f));
      },
      "DenseMatrix, any": function (s, f) {
        return i(s, f, ai, !1);
      },
      "any, DenseMatrix": function (s, f) {
        return i(f, s, ai, !0);
      },
      "Array, any": function (s, f) {
        return i(t(s), f, ai, !1).valueOf();
      },
      "any, Array": function (s, f) {
        return i(t(f), s, ai, !0).valueOf();
      },
    });
  }),
  ws = "equal",
  l3 = ["typed", "matrix", "equalScalar", "DenseMatrix"],
  c3 = F(ws, l3, (e) => {
    var { typed: r, matrix: t, equalScalar: n, DenseMatrix: i } = e,
      a = Lr({ typed: r }),
      s = Rt({ typed: r, DenseMatrix: i }),
      f = xr({ typed: r, DenseMatrix: i }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(ws, {
      "any, any": function (o, c) {
        return o === null
          ? c === null
          : c === null
          ? o === null
          : o === void 0
          ? c === void 0
          : c === void 0
          ? o === void 0
          : n(o, c);
      },
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, n);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, n, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, n, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, n);
      },
      "Array, Array": function (o, c) {
        return this(t(o), t(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(t(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, t(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, n, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, n, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, n, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, n, !0);
      },
      "Array, any": function (o, c) {
        return p(t(o), c, n, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(t(c), o, n, !0).valueOf();
      },
    });
  });
F(ws, ["typed", "equalScalar"], (e) => {
  var { typed: r, equalScalar: t } = e;
  return r(ws, {
    "any, any": function (i, a) {
      return i === null
        ? a === null
        : a === null
        ? i === null
        : i === void 0
        ? a === void 0
        : a === void 0
        ? i === void 0
        : t(i, a);
    },
  });
});
var Cv = "equalText",
  f3 = ["typed", "compareText", "isZero"],
  p3 = F(Cv, f3, (e) => {
    var { typed: r, compareText: t, isZero: n } = e;
    return r(Cv, {
      "any, any": function (a, s) {
        return n(t(a, s));
      },
    });
  }),
  Ov = "smaller",
  m3 = ["typed", "config", "matrix", "DenseMatrix"],
  v3 = F(Ov, m3, (e) => {
    var { typed: r, config: t, matrix: n, DenseMatrix: i } = e,
      a = Lr({ typed: r }),
      s = Rt({ typed: r, DenseMatrix: i }),
      f = xr({ typed: r, DenseMatrix: i }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(Ov, {
      "boolean, boolean": function (o, c) {
        return o < c;
      },
      "number, number": function (o, c) {
        return o < c && !rt(o, c, t.epsilon);
      },
      "BigNumber, BigNumber": function (o, c) {
        return o.lt(c) && !zt(o, c, t.epsilon);
      },
      "Fraction, Fraction": function (o, c) {
        return o.compare(c) === -1;
      },
      "Complex, Complex": function (o, c) {
        throw new TypeError(
          "No ordering relation is defined for complex numbers"
        );
      },
      "Unit, Unit": function (o, c) {
        if (!o.equalBase(c))
          throw new Error("Cannot compare units with different base");
        return this(o.value, c.value);
      },
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, this);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, this);
      },
      "Array, Array": function (o, c) {
        return this(n(o), n(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(n(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, n(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, this, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, this, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, this, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, this, !0);
      },
      "Array, any": function (o, c) {
        return p(n(o), c, this, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(n(c), o, this, !0).valueOf();
      },
    });
  }),
  Tv = "smallerEq",
  d3 = ["typed", "config", "matrix", "DenseMatrix"],
  h3 = F(Tv, d3, (e) => {
    var { typed: r, config: t, matrix: n, DenseMatrix: i } = e,
      a = Lr({ typed: r }),
      s = Rt({ typed: r, DenseMatrix: i }),
      f = xr({ typed: r, DenseMatrix: i }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(Tv, {
      "boolean, boolean": function (o, c) {
        return o <= c;
      },
      "number, number": function (o, c) {
        return o <= c || rt(o, c, t.epsilon);
      },
      "BigNumber, BigNumber": function (o, c) {
        return o.lte(c) || zt(o, c, t.epsilon);
      },
      "Fraction, Fraction": function (o, c) {
        return o.compare(c) !== 1;
      },
      "Complex, Complex": function () {
        throw new TypeError(
          "No ordering relation is defined for complex numbers"
        );
      },
      "Unit, Unit": function (o, c) {
        if (!o.equalBase(c))
          throw new Error("Cannot compare units with different base");
        return this(o.value, c.value);
      },
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, this);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, this);
      },
      "Array, Array": function (o, c) {
        return this(n(o), n(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(n(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, n(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, this, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, this, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, this, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, this, !0);
      },
      "Array, any": function (o, c) {
        return p(n(o), c, this, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(n(c), o, this, !0).valueOf();
      },
    });
  }),
  Dv = "larger",
  g3 = ["typed", "config", "matrix", "DenseMatrix"],
  y3 = F(Dv, g3, (e) => {
    var { typed: r, config: t, matrix: n, DenseMatrix: i } = e,
      a = Lr({ typed: r }),
      s = Rt({ typed: r, DenseMatrix: i }),
      f = xr({ typed: r, DenseMatrix: i }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(Dv, {
      "boolean, boolean": function (o, c) {
        return o > c;
      },
      "number, number": function (o, c) {
        return o > c && !rt(o, c, t.epsilon);
      },
      "BigNumber, BigNumber": function (o, c) {
        return o.gt(c) && !zt(o, c, t.epsilon);
      },
      "Fraction, Fraction": function (o, c) {
        return o.compare(c) === 1;
      },
      "Complex, Complex": function () {
        throw new TypeError(
          "No ordering relation is defined for complex numbers"
        );
      },
      "Unit, Unit": function (o, c) {
        if (!o.equalBase(c))
          throw new Error("Cannot compare units with different base");
        return this(o.value, c.value);
      },
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, this);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, this);
      },
      "Array, Array": function (o, c) {
        return this(n(o), n(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(n(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, n(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, this, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, this, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, this, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, this, !0);
      },
      "Array, any": function (o, c) {
        return p(n(o), c, this, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(n(c), o, this, !0).valueOf();
      },
    });
  }),
  _v = "largerEq",
  x3 = ["typed", "config", "matrix", "DenseMatrix"],
  w3 = F(_v, x3, (e) => {
    var { typed: r, config: t, matrix: n, DenseMatrix: i } = e,
      a = Lr({ typed: r }),
      s = Rt({ typed: r, DenseMatrix: i }),
      f = xr({ typed: r, DenseMatrix: i }),
      l = Xe({ typed: r }),
      p = ke({ typed: r });
    return r(_v, {
      "boolean, boolean": function (o, c) {
        return o >= c;
      },
      "number, number": function (o, c) {
        return o >= c || rt(o, c, t.epsilon);
      },
      "BigNumber, BigNumber": function (o, c) {
        return o.gte(c) || zt(o, c, t.epsilon);
      },
      "Fraction, Fraction": function (o, c) {
        return o.compare(c) !== -1;
      },
      "Complex, Complex": function () {
        throw new TypeError(
          "No ordering relation is defined for complex numbers"
        );
      },
      "Unit, Unit": function (o, c) {
        if (!o.equalBase(c))
          throw new Error("Cannot compare units with different base");
        return this(o.value, c.value);
      },
      "SparseMatrix, SparseMatrix": function (o, c) {
        return s(o, c, this);
      },
      "SparseMatrix, DenseMatrix": function (o, c) {
        return a(c, o, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (o, c) {
        return a(o, c, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (o, c) {
        return l(o, c, this);
      },
      "Array, Array": function (o, c) {
        return this(n(o), n(c)).valueOf();
      },
      "Array, Matrix": function (o, c) {
        return this(n(o), c);
      },
      "Matrix, Array": function (o, c) {
        return this(o, n(c));
      },
      "SparseMatrix, any": function (o, c) {
        return f(o, c, this, !1);
      },
      "DenseMatrix, any": function (o, c) {
        return p(o, c, this, !1);
      },
      "any, SparseMatrix": function (o, c) {
        return f(c, o, this, !0);
      },
      "any, DenseMatrix": function (o, c) {
        return p(c, o, this, !0);
      },
      "Array, any": function (o, c) {
        return p(n(o), c, this, !1).valueOf();
      },
      "any, Array": function (o, c) {
        return p(n(c), o, this, !0).valueOf();
      },
    });
  }),
  Bv = "deepEqual",
  b3 = ["typed", "equal"],
  N3 = F(Bv, b3, (e) => {
    var { typed: r, equal: t } = e;
    return r(Bv, {
      "any, any": function (a, s) {
        return n(a.valueOf(), s.valueOf());
      },
    });
    function n(i, a) {
      if (Array.isArray(i))
        if (Array.isArray(a)) {
          var s = i.length;
          if (s !== a.length) return !1;
          for (var f = 0; f < s; f++) if (!n(i[f], a[f])) return !1;
          return !0;
        } else return !1;
      else return Array.isArray(a) ? !1 : t(i, a);
    }
  }),
  Pl = "unequal",
  M3 = ["typed", "config", "equalScalar", "matrix", "DenseMatrix"],
  S3 = F(Pl, M3, (e) => {
    var { typed: r, config: t, equalScalar: n, matrix: i, DenseMatrix: a } = e,
      s = Lr({ typed: r }),
      f = Rt({ typed: r, DenseMatrix: a }),
      l = xr({ typed: r, DenseMatrix: a }),
      p = Xe({ typed: r }),
      u = ke({ typed: r });
    return r("unequal", {
      "any, any": function (m, v) {
        return m === null
          ? v !== null
          : v === null
          ? m !== null
          : m === void 0
          ? v !== void 0
          : v === void 0
          ? m !== void 0
          : o(m, v);
      },
      "SparseMatrix, SparseMatrix": function (m, v) {
        return f(m, v, o);
      },
      "SparseMatrix, DenseMatrix": function (m, v) {
        return s(v, m, o, !0);
      },
      "DenseMatrix, SparseMatrix": function (m, v) {
        return s(m, v, o, !1);
      },
      "DenseMatrix, DenseMatrix": function (m, v) {
        return p(m, v, o);
      },
      "Array, Array": function (m, v) {
        return this(i(m), i(v)).valueOf();
      },
      "Array, Matrix": function (m, v) {
        return this(i(m), v);
      },
      "Matrix, Array": function (m, v) {
        return this(m, i(v));
      },
      "SparseMatrix, any": function (m, v) {
        return l(m, v, o, !1);
      },
      "DenseMatrix, any": function (m, v) {
        return u(m, v, o, !1);
      },
      "any, SparseMatrix": function (m, v) {
        return l(v, m, o, !0);
      },
      "any, DenseMatrix": function (m, v) {
        return u(v, m, o, !0);
      },
      "Array, any": function (m, v) {
        return u(i(m), v, o, !1).valueOf();
      },
      "any, Array": function (m, v) {
        return u(i(v), m, o, !0).valueOf();
      },
    });
    function o(c, m) {
      return !n(c, m);
    }
  });
F(Pl, ["typed", "equalScalar"], (e) => {
  var { typed: r, equalScalar: t } = e;
  return r(Pl, {
    "any, any": function (i, a) {
      return i === null
        ? a !== null
        : a === null
        ? i !== null
        : i === void 0
        ? a !== void 0
        : a === void 0
        ? i !== void 0
        : !t(i, a);
    },
  });
});
var Iv = "partitionSelect",
  A3 = ["typed", "isNumeric", "isNaN", "compare"],
  E3 = F(Iv, A3, (e) => {
    var { typed: r, isNumeric: t, isNaN: n, compare: i } = e,
      a = i,
      s = (p, u) => -i(p, u);
    return r(Iv, {
      "Array | Matrix, number": function (u, o) {
        return f(u, o, a);
      },
      "Array | Matrix, number, string": function (u, o, c) {
        if (c === "asc") return f(u, o, a);
        if (c === "desc") return f(u, o, s);
        throw new Error('Compare string must be "asc" or "desc"');
      },
      "Array | Matrix, number, function": f,
    });
    function f(p, u, o) {
      if (!Ne(u) || u < 0) throw new Error("k must be a non-negative integer");
      if (Ae(p)) {
        var c = p.size();
        if (c.length > 1)
          throw new Error("Only one dimensional matrices supported");
        return l(p.valueOf(), u, o);
      }
      if (Array.isArray(p)) return l(p, u, o);
    }
    function l(p, u, o) {
      if (u >= p.length) throw new Error("k out of bounds");
      for (var c = 0; c < p.length; c++) if (t(p[c]) && n(p[c])) return p[c];
      for (var m = 0, v = p.length - 1; m < v; ) {
        for (
          var d = m, N = v, g = p[Math.floor(Math.random() * (v - m + 1)) + m];
          d < N;

        )
          if (o(p[d], g) >= 0) {
            var w = p[N];
            (p[N] = p[d]), (p[d] = w), --N;
          } else ++d;
        o(p[d], g) > 0 && --d, u <= d ? (v = d) : (m = d + 1);
      }
      return p[u];
    }
  }),
  $v = "sort",
  C3 = ["typed", "matrix", "compare", "compareNatural"],
  O3 = F($v, C3, (e) => {
    var { typed: r, matrix: t, compare: n, compareNatural: i } = e,
      a = n,
      s = (u, o) => -n(u, o);
    return r($v, {
      Array: function (o) {
        return l(o), o.sort(a);
      },
      Matrix: function (o) {
        return p(o), t(o.toArray().sort(a), o.storage());
      },
      "Array, function": function (o, c) {
        return l(o), o.sort(c);
      },
      "Matrix, function": function (o, c) {
        return p(o), t(o.toArray().sort(c), o.storage());
      },
      "Array, string": function (o, c) {
        return l(o), o.sort(f(c));
      },
      "Matrix, string": function (o, c) {
        return p(o), t(o.toArray().sort(f(c)), o.storage());
      },
    });
    function f(u) {
      if (u === "asc") return a;
      if (u === "desc") return s;
      if (u === "natural") return i;
      throw new Error('String "asc", "desc", or "natural" expected');
    }
    function l(u) {
      if (Ie(u).length !== 1) throw new Error("One dimensional array expected");
    }
    function p(u) {
      if (u.size().length !== 1)
        throw new Error("One dimensional matrix expected");
    }
  }),
  zv = "max",
  T3 = ["typed", "config", "numeric", "larger"],
  _1 = F(zv, T3, (e) => {
    var { typed: r, config: t, numeric: n, larger: i } = e;
    return r(zv, {
      "Array | Matrix": s,
      "Array | Matrix, number | BigNumber": function (l, p) {
        return Ws(l, p.valueOf(), a);
      },
      "...": function (l) {
        if (Xi(l))
          throw new TypeError("Scalar values expected in function max");
        return s(l);
      },
    });
    function a(f, l) {
      try {
        return i(f, l) ? f : l;
      } catch (p) {
        throw Rr(p, "max", l);
      }
    }
    function s(f) {
      var l;
      if (
        (Jt(f, function (p) {
          try {
            isNaN(p) && typeof p == "number"
              ? (l = NaN)
              : (l === void 0 || i(p, l)) && (l = p);
          } catch (u) {
            throw Rr(u, "max", p);
          }
        }),
        l === void 0)
      )
        throw new Error("Cannot calculate max of an empty array");
      return typeof l == "string" && (l = n(l, t.number)), l;
    }
  }),
  Rv = "min",
  D3 = ["typed", "config", "numeric", "smaller"],
  B1 = F(Rv, D3, (e) => {
    var { typed: r, config: t, numeric: n, smaller: i } = e;
    return r(Rv, {
      "Array | Matrix": s,
      "Array | Matrix, number | BigNumber": function (l, p) {
        return Ws(l, p.valueOf(), a);
      },
      "...": function (l) {
        if (Xi(l))
          throw new TypeError("Scalar values expected in function min");
        return s(l);
      },
    });
    function a(f, l) {
      try {
        return i(f, l) ? f : l;
      } catch (p) {
        throw Rr(p, "min", l);
      }
    }
    function s(f) {
      var l;
      if (
        (Jt(f, function (p) {
          try {
            isNaN(p) && typeof p == "number"
              ? (l = NaN)
              : (l === void 0 || i(p, l)) && (l = p);
          } catch (u) {
            throw Rr(u, "min", p);
          }
        }),
        l === void 0)
      )
        throw new Error("Cannot calculate min of an empty array");
      return typeof l == "string" && (l = n(l, t.number)), l;
    }
  }),
  _3 = "ImmutableDenseMatrix",
  B3 = ["smaller", "DenseMatrix"],
  I3 = F(
    _3,
    B3,
    (e) => {
      var { smaller: r, DenseMatrix: t } = e;
      function n(i, a) {
        if (!(this instanceof n))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (a && !$r(a)) throw new Error("Invalid datatype: " + a);
        if (Ae(i) || He(i)) {
          var s = new t(i, a);
          (this._data = s._data),
            (this._size = s._size),
            (this._datatype = s._datatype),
            (this._min = null),
            (this._max = null);
        } else if (i && He(i.data) && He(i.size))
          (this._data = i.data),
            (this._size = i.size),
            (this._datatype = i.datatype),
            (this._min = typeof i.min != "undefined" ? i.min : null),
            (this._max = typeof i.max != "undefined" ? i.max : null);
        else {
          if (i)
            throw new TypeError("Unsupported type of data (" + Ye(i) + ")");
          (this._data = []),
            (this._size = [0]),
            (this._datatype = a),
            (this._min = null),
            (this._max = null);
        }
      }
      return (
        (n.prototype = new t()),
        (n.prototype.type = "ImmutableDenseMatrix"),
        (n.prototype.isImmutableDenseMatrix = !0),
        (n.prototype.subset = function (i) {
          switch (arguments.length) {
            case 1: {
              var a = t.prototype.subset.call(this, i);
              return Ae(a)
                ? new n({ data: a._data, size: a._size, datatype: a._datatype })
                : a;
            }
            case 2:
            case 3:
              throw new Error(
                "Cannot invoke set subset on an Immutable Matrix instance"
              );
            default:
              throw new SyntaxError("Wrong number of arguments");
          }
        }),
        (n.prototype.set = function () {
          throw new Error("Cannot invoke set on an Immutable Matrix instance");
        }),
        (n.prototype.resize = function () {
          throw new Error(
            "Cannot invoke resize on an Immutable Matrix instance"
          );
        }),
        (n.prototype.reshape = function () {
          throw new Error(
            "Cannot invoke reshape on an Immutable Matrix instance"
          );
        }),
        (n.prototype.clone = function () {
          return new n({
            data: Me(this._data),
            size: Me(this._size),
            datatype: this._datatype,
          });
        }),
        (n.prototype.toJSON = function () {
          return {
            mathjs: "ImmutableDenseMatrix",
            data: this._data,
            size: this._size,
            datatype: this._datatype,
          };
        }),
        (n.fromJSON = function (i) {
          return new n(i);
        }),
        (n.prototype.swapRows = function () {
          throw new Error(
            "Cannot invoke swapRows on an Immutable Matrix instance"
          );
        }),
        (n.prototype.min = function () {
          if (this._min === null) {
            var i = null;
            this.forEach(function (a) {
              (i === null || r(a, i)) && (i = a);
            }),
              (this._min = i !== null ? i : void 0);
          }
          return this._min;
        }),
        (n.prototype.max = function () {
          if (this._max === null) {
            var i = null;
            this.forEach(function (a) {
              (i === null || r(i, a)) && (i = a);
            }),
              (this._max = i !== null ? i : void 0);
          }
          return this._max;
        }),
        n
      );
    },
    { isClass: !0 }
  ),
  $3 = "Index",
  z3 = ["ImmutableDenseMatrix"],
  R3 = F(
    $3,
    z3,
    (e) => {
      var { ImmutableDenseMatrix: r } = e;
      function t(i) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        (this._dimensions = []), (this._isScalar = !0);
        for (var a = 0, s = arguments.length; a < s; a++) {
          var f = arguments[a];
          if (Ka(f)) this._dimensions.push(f), (this._isScalar = !1);
          else if (Array.isArray(f) || Ae(f)) {
            var l = n(f.valueOf());
            this._dimensions.push(l);
            var p = l.size();
            (p.length !== 1 || p[0] !== 1) && (this._isScalar = !1);
          } else if (typeof f == "number") this._dimensions.push(n([f]));
          else if (typeof f == "string") this._dimensions.push(f);
          else
            throw new TypeError(
              "Dimension must be an Array, Matrix, number, string, or Range"
            );
        }
      }
      (t.prototype.type = "Index"), (t.prototype.isIndex = !0);
      function n(i) {
        for (var a = 0, s = i.length; a < s; a++)
          if (typeof i[a] != "number" || !Ne(i[a]))
            throw new TypeError(
              "Index parameters must be positive integer numbers"
            );
        return new r(i);
      }
      return (
        (t.prototype.clone = function () {
          var i = new t();
          return (
            (i._dimensions = Me(this._dimensions)),
            (i._isScalar = this._isScalar),
            i
          );
        }),
        (t.create = function (i) {
          var a = new t();
          return t.apply(a, i), a;
        }),
        (t.prototype.size = function () {
          for (var i = [], a = 0, s = this._dimensions.length; a < s; a++) {
            var f = this._dimensions[a];
            i[a] = typeof f == "string" ? 1 : f.size()[0];
          }
          return i;
        }),
        (t.prototype.max = function () {
          for (var i = [], a = 0, s = this._dimensions.length; a < s; a++) {
            var f = this._dimensions[a];
            i[a] = typeof f == "string" ? f : f.max();
          }
          return i;
        }),
        (t.prototype.min = function () {
          for (var i = [], a = 0, s = this._dimensions.length; a < s; a++) {
            var f = this._dimensions[a];
            i[a] = typeof f == "string" ? f : f.min();
          }
          return i;
        }),
        (t.prototype.forEach = function (i) {
          for (var a = 0, s = this._dimensions.length; a < s; a++)
            i(this._dimensions[a], a, this);
        }),
        (t.prototype.dimension = function (i) {
          return this._dimensions[i] || null;
        }),
        (t.prototype.isObjectProperty = function () {
          return (
            this._dimensions.length === 1 &&
            typeof this._dimensions[0] == "string"
          );
        }),
        (t.prototype.getObjectProperty = function () {
          return this.isObjectProperty() ? this._dimensions[0] : null;
        }),
        (t.prototype.isScalar = function () {
          return this._isScalar;
        }),
        (t.prototype.toArray = function () {
          for (var i = [], a = 0, s = this._dimensions.length; a < s; a++) {
            var f = this._dimensions[a];
            i.push(typeof f == "string" ? f : f.toArray());
          }
          return i;
        }),
        (t.prototype.valueOf = t.prototype.toArray),
        (t.prototype.toString = function () {
          for (var i = [], a = 0, s = this._dimensions.length; a < s; a++) {
            var f = this._dimensions[a];
            typeof f == "string"
              ? i.push(JSON.stringify(f))
              : i.push(f.toString());
          }
          return "[" + i.join(", ") + "]";
        }),
        (t.prototype.toJSON = function () {
          return { mathjs: "Index", dimensions: this._dimensions };
        }),
        (t.fromJSON = function (i) {
          return t.create(i.dimensions);
        }),
        t
      );
    },
    { isClass: !0 }
  ),
  F3 = "FibonacciHeap",
  P3 = ["smaller", "larger"],
  L3 = F(
    F3,
    P3,
    (e) => {
      var { smaller: r, larger: t } = e,
        n = 1 / Math.log((1 + Math.sqrt(5)) / 2);
      function i() {
        if (!(this instanceof i))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        (this._minimum = null), (this._size = 0);
      }
      (i.prototype.type = "FibonacciHeap"),
        (i.prototype.isFibonacciHeap = !0),
        (i.prototype.insert = function (u, o) {
          var c = { key: u, value: o, degree: 0 };
          if (this._minimum) {
            var m = this._minimum;
            (c.left = m),
              (c.right = m.right),
              (m.right = c),
              (c.right.left = c),
              r(u, m.key) && (this._minimum = c);
          } else (c.left = c), (c.right = c), (this._minimum = c);
          return this._size++, c;
        }),
        (i.prototype.size = function () {
          return this._size;
        }),
        (i.prototype.clear = function () {
          (this._minimum = null), (this._size = 0);
        }),
        (i.prototype.isEmpty = function () {
          return this._size === 0;
        }),
        (i.prototype.extractMinimum = function () {
          var u = this._minimum;
          if (u === null) return u;
          for (var o = this._minimum, c = u.degree, m = u.child; c > 0; ) {
            var v = m.right;
            (m.left.right = m.right),
              (m.right.left = m.left),
              (m.left = o),
              (m.right = o.right),
              (o.right = m),
              (m.right.left = m),
              (m.parent = null),
              (m = v),
              c--;
          }
          return (
            (u.left.right = u.right),
            (u.right.left = u.left),
            u === u.right
              ? (o = null)
              : ((o = u.right), (o = p(o, this._size))),
            this._size--,
            (this._minimum = o),
            u
          );
        }),
        (i.prototype.remove = function (u) {
          (this._minimum = a(this._minimum, u, -1)), this.extractMinimum();
        });
      function a(u, o, c) {
        o.key = c;
        var m = o.parent;
        return (
          m && r(o.key, m.key) && (s(u, o, m), f(u, m)),
          r(o.key, u.key) && (u = o),
          u
        );
      }
      function s(u, o, c) {
        (o.left.right = o.right),
          (o.right.left = o.left),
          c.degree--,
          c.child === o && (c.child = o.right),
          c.degree === 0 && (c.child = null),
          (o.left = u),
          (o.right = u.right),
          (u.right = o),
          (o.right.left = o),
          (o.parent = null),
          (o.mark = !1);
      }
      function f(u, o) {
        var c = o.parent;
        !c || (o.mark ? (s(u, o, c), f(c)) : (o.mark = !0));
      }
      var l = function (o, c) {
        (o.left.right = o.right),
          (o.right.left = o.left),
          (o.parent = c),
          c.child
            ? ((o.left = c.child),
              (o.right = c.child.right),
              (c.child.right = o),
              (o.right.left = o))
            : ((c.child = o), (o.right = o), (o.left = o)),
          c.degree++,
          (o.mark = !1);
      };
      function p(u, o) {
        var c = Math.floor(Math.log(o) * n) + 1,
          m = new Array(c),
          v = 0,
          d = u;
        if (d) for (v++, d = d.right; d !== u; ) v++, (d = d.right);
        for (var N; v > 0; ) {
          for (var g = d.degree, w = d.right; (N = m[g]), !!N; ) {
            if (t(d.key, N.key)) {
              var h = N;
              (N = d), (d = h);
            }
            l(N, d), (m[g] = null), g++;
          }
          (m[g] = d), (d = w), v--;
        }
        u = null;
        for (var x = 0; x < c; x++)
          (N = m[x]),
            N &&
              (u
                ? ((N.left.right = N.right),
                  (N.right.left = N.left),
                  (N.left = u),
                  (N.right = u.right),
                  (u.right = N),
                  (N.right.left = N),
                  r(N.key, u.key) && (u = N))
                : (u = N));
        return u;
      }
      return i;
    },
    { isClass: !0 }
  ),
  k3 = "Spa",
  U3 = ["addScalar", "equalScalar", "FibonacciHeap"],
  q3 = F(
    k3,
    U3,
    (e) => {
      var { addScalar: r, equalScalar: t, FibonacciHeap: n } = e;
      function i() {
        if (!(this instanceof i))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        (this._values = []), (this._heap = new n());
      }
      return (
        (i.prototype.type = "Spa"),
        (i.prototype.isSpa = !0),
        (i.prototype.set = function (a, s) {
          if (this._values[a]) this._values[a].value = s;
          else {
            var f = this._heap.insert(a, s);
            this._values[a] = f;
          }
        }),
        (i.prototype.get = function (a) {
          var s = this._values[a];
          return s ? s.value : 0;
        }),
        (i.prototype.accumulate = function (a, s) {
          var f = this._values[a];
          f
            ? (f.value = r(f.value, s))
            : ((f = this._heap.insert(a, s)), (this._values[a] = f));
        }),
        (i.prototype.forEach = function (a, s, f) {
          var l = this._heap,
            p = this._values,
            u = [],
            o = l.extractMinimum();
          for (o && u.push(o); o && o.key <= s; )
            o.key >= a && (t(o.value, 0) || f(o.key, o.value, this)),
              (o = l.extractMinimum()),
              o && u.push(o);
          for (var c = 0; c < u.length; c++) {
            var m = u[c];
            (o = l.insert(m.key, m.value)), (p[o.key] = o);
          }
        }),
        (i.prototype.swap = function (a, s) {
          var f = this._values[a],
            l = this._values[s];
          if (!f && l)
            (f = this._heap.insert(a, l.value)),
              this._heap.remove(l),
              (this._values[a] = f),
              (this._values[s] = void 0);
          else if (f && !l)
            (l = this._heap.insert(s, f.value)),
              this._heap.remove(f),
              (this._values[s] = l),
              (this._values[a] = void 0);
          else if (f && l) {
            var p = f.value;
            (f.value = l.value), (l.value = p);
          }
        }),
        i
      );
    },
    { isClass: !0 }
  );
function I1(e, r, t) {
  return (
    r in e
      ? Object.defineProperty(e, r, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[r] = t),
    e
  );
}
var H3 = ro(
    function (e) {
      return new e(1).exp();
    },
    { hasher: Xs }
  ),
  V3 = ro(
    function (e) {
      return new e(1).plus(new e(5).sqrt()).div(2);
    },
    { hasher: Xs }
  ),
  jc = ro(
    function (e) {
      return e.acos(-1);
    },
    { hasher: Xs }
  ),
  G3 = ro(
    function (e) {
      return jc(e).times(2);
    },
    { hasher: Xs }
  );
function Xs(e) {
  return e[0].precision;
}
function Fv(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    r &&
      (n = n.filter(function (i) {
        return Object.getOwnPropertyDescriptor(e, i).enumerable;
      })),
      t.push.apply(t, n);
  }
  return t;
}
function _u(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = arguments[r] != null ? arguments[r] : {};
    r % 2
      ? Fv(Object(t), !0).forEach(function (n) {
          I1(e, n, t[n]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
      : Fv(Object(t)).forEach(function (n) {
          Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));
        });
  }
  return e;
}
var W3 = "Unit",
  Z3 = [
    "?on",
    "config",
    "addScalar",
    "subtract",
    "multiplyScalar",
    "divideScalar",
    "pow",
    "abs",
    "fix",
    "round",
    "equal",
    "isNumeric",
    "format",
    "number",
    "Complex",
    "BigNumber",
    "Fraction",
  ],
  Q3 = F(
    W3,
    Z3,
    (e) => {
      var {
          on: r,
          config: t,
          addScalar: n,
          subtract: i,
          multiplyScalar: a,
          divideScalar: s,
          pow: f,
          abs: l,
          fix: p,
          round: u,
          equal: o,
          isNumeric: c,
          format: m,
          number: v,
          Complex: d,
          BigNumber: N,
          Fraction: g,
        } = e,
        w = v;
      function h(k, Q) {
        if (!(this instanceof h))
          throw new Error("Constructor must be called with the new operator");
        if (!(k == null || c(k) || Nt(k)))
          throw new TypeError(
            "First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined"
          );
        if (Q !== void 0 && (typeof Q != "string" || Q === ""))
          throw new TypeError(
            "Second parameter in Unit constructor must be a string"
          );
        if (Q !== void 0) {
          var V = h.parse(Q);
          (this.units = V.units), (this.dimensions = V.dimensions);
        } else {
          (this.units = [{ unit: J, prefix: B.NONE, power: 0 }]),
            (this.dimensions = []);
          for (var q = 0; q < R.length; q++) this.dimensions[q] = 0;
        }
        (this.value = k != null ? this._normalize(k) : null),
          (this.fixPrefix = !1),
          (this.skipAutomaticSimplification = !0);
      }
      (h.prototype.type = "Unit"), (h.prototype.isUnit = !0);
      var x, b, y;
      function A() {
        for (; y === " " || y === "	"; ) M();
      }
      function S(k) {
        return (k >= "0" && k <= "9") || k === ".";
      }
      function E(k) {
        return k >= "0" && k <= "9";
      }
      function M() {
        b++, (y = x.charAt(b));
      }
      function _(k) {
        (b = k), (y = x.charAt(b));
      }
      function C() {
        var k = "",
          Q = b;
        if ((y === "+" ? M() : y === "-" && ((k += y), M()), !S(y)))
          return _(Q), null;
        if (y === ".") {
          if (((k += y), M(), !E(y))) return _(Q), null;
        } else {
          for (; E(y); ) (k += y), M();
          y === "." && ((k += y), M());
        }
        for (; E(y); ) (k += y), M();
        if (y === "E" || y === "e") {
          var V = "",
            q = b;
          if (
            ((V += y), M(), (y === "+" || y === "-") && ((V += y), M()), !E(y))
          )
            return _(q), k;
          for (k = k + V; E(y); ) (k += y), M();
        }
        return k;
      }
      function I() {
        for (var k = ""; E(y) || h.isValidAlpha(y); ) (k += y), M();
        var Q = k.charAt(0);
        return h.isValidAlpha(Q) ? k : null;
      }
      function L(k) {
        return y === k ? (M(), k) : null;
      }
      (h.parse = function (k, Q) {
        if (((Q = Q || {}), (x = k), (b = -1), (y = ""), typeof x != "string"))
          throw new TypeError(
            "Invalid argument in Unit.parse, string expected"
          );
        var V = new h();
        V.units = [];
        var q = 1,
          X = !1;
        M(), A();
        var z = C(),
          U = null;
        if (z) {
          if (t.number === "BigNumber") U = new N(z);
          else if (t.number === "Fraction")
            try {
              U = new g(z);
            } catch {
              U = parseFloat(z);
            }
          else U = parseFloat(z);
          A(), L("*") ? ((q = 1), (X = !0)) : L("/") && ((q = -1), (X = !0));
        }
        for (var j = [], H = 1; ; ) {
          for (A(); y === "("; ) j.push(q), (H *= q), (q = 1), M(), A();
          var ae = void 0;
          if (y) {
            var ue = y;
            if (((ae = I()), ae === null))
              throw new SyntaxError(
                'Unexpected "' +
                  ue +
                  '" in "' +
                  x +
                  '" at index ' +
                  b.toString()
              );
          } else break;
          var ve = $(ae);
          if (ve === null)
            throw new SyntaxError('Unit "' + ae + '" not found.');
          var fe = q * H;
          if ((A(), L("^"))) {
            A();
            var pe = C();
            if (pe === null)
              throw new SyntaxError(
                'In "' +
                  k +
                  '", "^" must be followed by a floating-point number'
              );
            fe *= pe;
          }
          V.units.push({ unit: ve.unit, prefix: ve.prefix, power: fe });
          for (var we = 0; we < R.length; we++)
            V.dimensions[we] += (ve.unit.dimensions[we] || 0) * fe;
          for (A(); y === ")"; ) {
            if (j.length === 0)
              throw new SyntaxError(
                'Unmatched ")" in "' + x + '" at index ' + b.toString()
              );
            (H /= j.pop()), M(), A();
          }
          if (
            ((X = !1),
            L("*")
              ? ((q = 1), (X = !0))
              : L("/")
              ? ((q = -1), (X = !0))
              : (q = 1),
            ve.unit.base)
          ) {
            var Ge = ve.unit.base.key;
            K.auto[Ge] = { unit: ve.unit, prefix: ve.prefix };
          }
        }
        if ((A(), y)) throw new SyntaxError('Could not parse: "' + k + '"');
        if (X) throw new SyntaxError('Trailing characters: "' + k + '"');
        if (j.length !== 0)
          throw new SyntaxError('Unmatched "(" in "' + x + '"');
        if (V.units.length === 0 && !Q.allowNoUnits)
          throw new SyntaxError('"' + k + '" contains no units');
        return (V.value = U !== void 0 ? V._normalize(U) : null), V;
      }),
        (h.prototype.clone = function () {
          var k = new h();
          (k.fixPrefix = this.fixPrefix),
            (k.skipAutomaticSimplification = this.skipAutomaticSimplification),
            (k.value = Me(this.value)),
            (k.dimensions = this.dimensions.slice(0)),
            (k.units = []);
          for (var Q = 0; Q < this.units.length; Q++) {
            k.units[Q] = {};
            for (var V in this.units[Q])
              ge(this.units[Q], V) && (k.units[Q][V] = this.units[Q][V]);
          }
          return k;
        }),
        (h.prototype._isDerived = function () {
          return this.units.length === 0
            ? !1
            : this.units.length > 1 ||
                Math.abs(this.units[0].power - 1) > 1e-15;
        }),
        (h.prototype._normalize = function (k) {
          if (k == null || this.units.length === 0) return k;
          for (
            var Q = k, V = h._getNumberConverter(Ye(k)), q = 0;
            q < this.units.length;
            q++
          ) {
            var X = V(this.units[q].unit.value),
              z = V(this.units[q].prefix.value),
              U = V(this.units[q].power);
            Q = a(Q, f(a(X, z), U));
          }
          return Q;
        }),
        (h.prototype._denormalize = function (k, Q) {
          if (k == null || this.units.length === 0) return k;
          for (
            var V = k, q = h._getNumberConverter(Ye(k)), X = 0;
            X < this.units.length;
            X++
          ) {
            var z = q(this.units[X].unit.value),
              U = q(this.units[X].prefix.value),
              j = q(this.units[X].power);
            V = s(V, f(a(z, U), j));
          }
          return V;
        });
      var $ = ro(
        (k) => {
          if (ge(G, k)) {
            var Q = G[k],
              V = Q.prefixes[""];
            return { unit: Q, prefix: V };
          }
          for (var q in G)
            if (ge(G, q) && iN(k, q)) {
              var X = G[q],
                z = k.length - q.length,
                U = k.substring(0, z),
                j = ge(X.prefixes, U) ? X.prefixes[U] : void 0;
              if (j !== void 0) return { unit: X, prefix: j };
            }
          return null;
        },
        { hasher: (k) => k[0], limit: 100 }
      );
      (h.isValuelessUnit = function (k) {
        return $(k) !== null;
      }),
        (h.prototype.hasBase = function (k) {
          if ((typeof k == "string" && (k = T[k]), !k)) return !1;
          for (var Q = 0; Q < R.length; Q++)
            if (
              Math.abs((this.dimensions[Q] || 0) - (k.dimensions[Q] || 0)) >
              1e-12
            )
              return !1;
          return !0;
        }),
        (h.prototype.equalBase = function (k) {
          for (var Q = 0; Q < R.length; Q++)
            if (
              Math.abs((this.dimensions[Q] || 0) - (k.dimensions[Q] || 0)) >
              1e-12
            )
              return !1;
          return !0;
        }),
        (h.prototype.equals = function (k) {
          return this.equalBase(k) && o(this.value, k.value);
        }),
        (h.prototype.multiply = function (k) {
          for (var Q = this.clone(), V = 0; V < R.length; V++)
            Q.dimensions[V] =
              (this.dimensions[V] || 0) + (k.dimensions[V] || 0);
          for (var q = 0; q < k.units.length; q++) {
            var X = _u({}, k.units[q]);
            Q.units.push(X);
          }
          if (this.value !== null || k.value !== null) {
            var z = this.value === null ? this._normalize(1) : this.value,
              U = k.value === null ? k._normalize(1) : k.value;
            Q.value = a(z, U);
          } else Q.value = null;
          return (Q.skipAutomaticSimplification = !1), D(Q);
        }),
        (h.prototype.divide = function (k) {
          for (var Q = this.clone(), V = 0; V < R.length; V++)
            Q.dimensions[V] =
              (this.dimensions[V] || 0) - (k.dimensions[V] || 0);
          for (var q = 0; q < k.units.length; q++) {
            var X = _u(_u({}, k.units[q]), {}, { power: -k.units[q].power });
            Q.units.push(X);
          }
          if (this.value !== null || k.value !== null) {
            var z = this.value === null ? this._normalize(1) : this.value,
              U = k.value === null ? k._normalize(1) : k.value;
            Q.value = s(z, U);
          } else Q.value = null;
          return (Q.skipAutomaticSimplification = !1), D(Q);
        }),
        (h.prototype.pow = function (k) {
          for (var Q = this.clone(), V = 0; V < R.length; V++)
            Q.dimensions[V] = (this.dimensions[V] || 0) * k;
          for (var q = 0; q < Q.units.length; q++) Q.units[q].power *= k;
          return (
            Q.value !== null ? (Q.value = f(Q.value, k)) : (Q.value = null),
            (Q.skipAutomaticSimplification = !1),
            D(Q)
          );
        });
      function D(k) {
        return k.equalBase(T.NONE) && k.value !== null && !t.predictable
          ? k.value
          : k;
      }
      (h.prototype.abs = function () {
        var k = this.clone();
        if (k.value !== null)
          if (k._isDerived() || k.units[0].unit.offset === 0)
            k.value = l(k.value);
          else {
            var Q = h._getNumberConverter(Ye(k.value)),
              V = Q(k.units[0].unit.value),
              q = Q(k.units[0].unit.offset),
              X = a(V, q);
            k.value = i(l(n(k.value, X)), X);
          }
        for (var z in k.units)
          (k.units[z].unit.name === "VA" || k.units[z].unit.name === "VAR") &&
            (k.units[z].unit = G.W);
        return k;
      }),
        (h.prototype.to = function (k) {
          var Q = this.value === null ? this._normalize(1) : this.value,
            V;
          if (typeof k == "string") V = h.parse(k);
          else if (jn(k)) V = k.clone();
          else throw new Error("String or Unit expected as parameter");
          if (!this.equalBase(V))
            throw new Error(
              "Units do not match ('"
                .concat(V.toString(), "' != '")
                .concat(this.toString(), "')")
            );
          if (V.value !== null)
            throw new Error("Cannot convert to a unit with a value");
          if (
            this.value === null ||
            this._isDerived() ||
            this.units[0].unit.offset === V.units[0].unit.offset
          )
            V.value = Me(Q);
          else {
            var q = h._getNumberConverter(Ye(Q)),
              X = q(this.units[0].unit.value),
              z = q(this.units[0].unit.offset),
              U = a(X, z),
              j = q(V.units[0].unit.value),
              H = q(V.units[0].unit.offset),
              ae = a(j, H);
            V.value = i(n(Q, U), ae);
          }
          return (V.fixPrefix = !0), (V.skipAutomaticSimplification = !0), V;
        }),
        (h.prototype.toNumber = function (k) {
          return w(this.toNumeric(k));
        }),
        (h.prototype.toNumeric = function (k) {
          var Q;
          return (
            k ? (Q = this.to(k)) : (Q = this.clone()),
            Q._isDerived() || Q.units.length === 0
              ? Q._denormalize(Q.value)
              : Q._denormalize(Q.value, Q.units[0].prefix.value)
          );
        }),
        (h.prototype.toString = function () {
          return this.format();
        }),
        (h.prototype.toJSON = function () {
          return {
            mathjs: "Unit",
            value: this._denormalize(this.value),
            unit: this.formatUnits(),
            fixPrefix: this.fixPrefix,
          };
        }),
        (h.fromJSON = function (k) {
          var Q = new h(k.value, k.unit);
          return (Q.fixPrefix = k.fixPrefix || !1), Q;
        }),
        (h.prototype.valueOf = h.prototype.toString),
        (h.prototype.simplify = function () {
          var k = this.clone(),
            Q = [],
            V;
          for (var q in ie)
            if (ge(ie, q) && k.hasBase(T[q])) {
              V = q;
              break;
            }
          if (V === "NONE") k.units = [];
          else {
            var X;
            if ((V && ge(ie, V) && (X = ie[V]), X))
              k.units = [{ unit: X.unit, prefix: X.prefix, power: 1 }];
            else {
              for (var z = !1, U = 0; U < R.length; U++) {
                var j = R[U];
                Math.abs(k.dimensions[U] || 0) > 1e-12 &&
                  (ge(ie, j)
                    ? Q.push({
                        unit: ie[j].unit,
                        prefix: ie[j].prefix,
                        power: k.dimensions[U] || 0,
                      })
                    : (z = !0));
              }
              Q.length < k.units.length && !z && (k.units = Q);
            }
          }
          return k;
        }),
        (h.prototype.toSI = function () {
          for (var k = this.clone(), Q = [], V = 0; V < R.length; V++) {
            var q = R[V];
            if (Math.abs(k.dimensions[V] || 0) > 1e-12)
              if (ge(K.si, q))
                Q.push({
                  unit: K.si[q].unit,
                  prefix: K.si[q].prefix,
                  power: k.dimensions[V] || 0,
                });
              else
                throw new Error(
                  "Cannot express custom unit " + q + " in SI units"
                );
          }
          return (
            (k.units = Q),
            (k.fixPrefix = !0),
            (k.skipAutomaticSimplification = !0),
            k
          );
        }),
        (h.prototype.formatUnits = function () {
          for (
            var k = "", Q = "", V = 0, q = 0, X = 0;
            X < this.units.length;
            X++
          )
            this.units[X].power > 0
              ? (V++,
                (k +=
                  " " + this.units[X].prefix.name + this.units[X].unit.name),
                Math.abs(this.units[X].power - 1) > 1e-15 &&
                  (k += "^" + this.units[X].power))
              : this.units[X].power < 0 && q++;
          if (q > 0)
            for (var z = 0; z < this.units.length; z++)
              this.units[z].power < 0 &&
                (V > 0
                  ? ((Q +=
                      " " +
                      this.units[z].prefix.name +
                      this.units[z].unit.name),
                    Math.abs(this.units[z].power + 1) > 1e-15 &&
                      (Q += "^" + -this.units[z].power))
                  : ((Q +=
                      " " +
                      this.units[z].prefix.name +
                      this.units[z].unit.name),
                    (Q += "^" + this.units[z].power)));
          (k = k.substr(1)),
            (Q = Q.substr(1)),
            V > 1 && q > 0 && (k = "(" + k + ")"),
            q > 1 && V > 0 && (Q = "(" + Q + ")");
          var U = k;
          return V > 0 && q > 0 && (U += " / "), (U += Q), U;
        }),
        (h.prototype.format = function (k) {
          var Q =
              this.skipAutomaticSimplification || this.value === null
                ? this.clone()
                : this.simplify(),
            V = !1;
          typeof Q.value != "undefined" &&
            Q.value !== null &&
            Nt(Q.value) &&
            (V = Math.abs(Q.value.re) < 1e-14);
          for (var q in Q.units)
            ge(Q.units, q) &&
              Q.units[q].unit &&
              (Q.units[q].unit.name === "VA" && V
                ? (Q.units[q].unit = G.VAR)
                : Q.units[q].unit.name === "VAR" &&
                  !V &&
                  (Q.units[q].unit = G.VA));
          Q.units.length === 1 &&
            !Q.fixPrefix &&
            Math.abs(Q.units[0].power - Math.round(Q.units[0].power)) < 1e-14 &&
            (Q.units[0].prefix = Q._bestPrefix());
          var X = Q._denormalize(Q.value),
            z = Q.value !== null ? m(X, k || {}) : "",
            U = Q.formatUnits();
          return (
            Q.value && Nt(Q.value) && (z = "(" + z + ")"),
            U.length > 0 && z.length > 0 && (z += " "),
            (z += U),
            z
          );
        }),
        (h.prototype._bestPrefix = function () {
          if (this.units.length !== 1)
            throw new Error(
              "Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!"
            );
          if (
            Math.abs(this.units[0].power - Math.round(this.units[0].power)) >=
            1e-14
          )
            throw new Error(
              "Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!"
            );
          var k = this.value !== null ? l(this.value) : 0,
            Q = l(this.units[0].unit.value),
            V = this.units[0].prefix;
          if (k === 0) return V;
          var q = this.units[0].power,
            X = Math.log(k / Math.pow(V.value * Q, q)) / Math.LN10 - 1.2;
          if (X > -2.200001 && X < 1.800001) return V;
          X = Math.abs(X);
          var z = this.units[0].unit.prefixes;
          for (var U in z)
            if (ge(z, U)) {
              var j = z[U];
              if (j.scientific) {
                var H = Math.abs(
                  Math.log(k / Math.pow(j.value * Q, q)) / Math.LN10 - 1.2
                );
                (H < X || (H === X && j.name.length < V.name.length)) &&
                  ((V = j), (X = H));
              }
            }
          return V;
        }),
        (h.prototype.splitUnit = function (k) {
          for (
            var Q = this.clone(), V = [], q = 0;
            q < k.length && ((Q = Q.to(k[q])), q !== k.length - 1);
            q++
          ) {
            var X = Q.toNumeric(),
              z = u(X),
              U = void 0,
              j = o(z, X);
            j ? (U = z) : (U = p(Q.toNumeric()));
            var H = new h(U, k[q].toString());
            V.push(H), (Q = i(Q, H));
          }
          for (var ae = 0, ue = 0; ue < V.length; ue++) ae = n(ae, V[ue].value);
          return o(ae, this.value) && (Q.value = 0), V.push(Q), V;
        });
      var B = {
        NONE: { "": { name: "", value: 1, scientific: !0 } },
        SHORT: {
          "": { name: "", value: 1, scientific: !0 },
          da: { name: "da", value: 10, scientific: !1 },
          h: { name: "h", value: 100, scientific: !1 },
          k: { name: "k", value: 1e3, scientific: !0 },
          M: { name: "M", value: 1e6, scientific: !0 },
          G: { name: "G", value: 1e9, scientific: !0 },
          T: { name: "T", value: 1e12, scientific: !0 },
          P: { name: "P", value: 1e15, scientific: !0 },
          E: { name: "E", value: 1e18, scientific: !0 },
          Z: { name: "Z", value: 1e21, scientific: !0 },
          Y: { name: "Y", value: 1e24, scientific: !0 },
          d: { name: "d", value: 0.1, scientific: !1 },
          c: { name: "c", value: 0.01, scientific: !1 },
          m: { name: "m", value: 0.001, scientific: !0 },
          u: { name: "u", value: 1e-6, scientific: !0 },
          n: { name: "n", value: 1e-9, scientific: !0 },
          p: { name: "p", value: 1e-12, scientific: !0 },
          f: { name: "f", value: 1e-15, scientific: !0 },
          a: { name: "a", value: 1e-18, scientific: !0 },
          z: { name: "z", value: 1e-21, scientific: !0 },
          y: { name: "y", value: 1e-24, scientific: !0 },
        },
        LONG: {
          "": { name: "", value: 1, scientific: !0 },
          deca: { name: "deca", value: 10, scientific: !1 },
          hecto: { name: "hecto", value: 100, scientific: !1 },
          kilo: { name: "kilo", value: 1e3, scientific: !0 },
          mega: { name: "mega", value: 1e6, scientific: !0 },
          giga: { name: "giga", value: 1e9, scientific: !0 },
          tera: { name: "tera", value: 1e12, scientific: !0 },
          peta: { name: "peta", value: 1e15, scientific: !0 },
          exa: { name: "exa", value: 1e18, scientific: !0 },
          zetta: { name: "zetta", value: 1e21, scientific: !0 },
          yotta: { name: "yotta", value: 1e24, scientific: !0 },
          deci: { name: "deci", value: 0.1, scientific: !1 },
          centi: { name: "centi", value: 0.01, scientific: !1 },
          milli: { name: "milli", value: 0.001, scientific: !0 },
          micro: { name: "micro", value: 1e-6, scientific: !0 },
          nano: { name: "nano", value: 1e-9, scientific: !0 },
          pico: { name: "pico", value: 1e-12, scientific: !0 },
          femto: { name: "femto", value: 1e-15, scientific: !0 },
          atto: { name: "atto", value: 1e-18, scientific: !0 },
          zepto: { name: "zepto", value: 1e-21, scientific: !0 },
          yocto: { name: "yocto", value: 1e-24, scientific: !0 },
        },
        SQUARED: {
          "": { name: "", value: 1, scientific: !0 },
          da: { name: "da", value: 100, scientific: !1 },
          h: { name: "h", value: 1e4, scientific: !1 },
          k: { name: "k", value: 1e6, scientific: !0 },
          M: { name: "M", value: 1e12, scientific: !0 },
          G: { name: "G", value: 1e18, scientific: !0 },
          T: { name: "T", value: 1e24, scientific: !0 },
          P: { name: "P", value: 1e30, scientific: !0 },
          E: { name: "E", value: 1e36, scientific: !0 },
          Z: { name: "Z", value: 1e42, scientific: !0 },
          Y: { name: "Y", value: 1e48, scientific: !0 },
          d: { name: "d", value: 0.01, scientific: !1 },
          c: { name: "c", value: 1e-4, scientific: !1 },
          m: { name: "m", value: 1e-6, scientific: !0 },
          u: { name: "u", value: 1e-12, scientific: !0 },
          n: { name: "n", value: 1e-18, scientific: !0 },
          p: { name: "p", value: 1e-24, scientific: !0 },
          f: { name: "f", value: 1e-30, scientific: !0 },
          a: { name: "a", value: 1e-36, scientific: !0 },
          z: { name: "z", value: 1e-42, scientific: !0 },
          y: { name: "y", value: 1e-48, scientific: !0 },
        },
        CUBIC: {
          "": { name: "", value: 1, scientific: !0 },
          da: { name: "da", value: 1e3, scientific: !1 },
          h: { name: "h", value: 1e6, scientific: !1 },
          k: { name: "k", value: 1e9, scientific: !0 },
          M: { name: "M", value: 1e18, scientific: !0 },
          G: { name: "G", value: 1e27, scientific: !0 },
          T: { name: "T", value: 1e36, scientific: !0 },
          P: { name: "P", value: 1e45, scientific: !0 },
          E: { name: "E", value: 1e54, scientific: !0 },
          Z: { name: "Z", value: 1e63, scientific: !0 },
          Y: { name: "Y", value: 1e72, scientific: !0 },
          d: { name: "d", value: 0.001, scientific: !1 },
          c: { name: "c", value: 1e-6, scientific: !1 },
          m: { name: "m", value: 1e-9, scientific: !0 },
          u: { name: "u", value: 1e-18, scientific: !0 },
          n: { name: "n", value: 1e-27, scientific: !0 },
          p: { name: "p", value: 1e-36, scientific: !0 },
          f: { name: "f", value: 1e-45, scientific: !0 },
          a: { name: "a", value: 1e-54, scientific: !0 },
          z: { name: "z", value: 1e-63, scientific: !0 },
          y: { name: "y", value: 1e-72, scientific: !0 },
        },
        BINARY_SHORT_SI: {
          "": { name: "", value: 1, scientific: !0 },
          k: { name: "k", value: 1e3, scientific: !0 },
          M: { name: "M", value: 1e6, scientific: !0 },
          G: { name: "G", value: 1e9, scientific: !0 },
          T: { name: "T", value: 1e12, scientific: !0 },
          P: { name: "P", value: 1e15, scientific: !0 },
          E: { name: "E", value: 1e18, scientific: !0 },
          Z: { name: "Z", value: 1e21, scientific: !0 },
          Y: { name: "Y", value: 1e24, scientific: !0 },
        },
        BINARY_SHORT_IEC: {
          "": { name: "", value: 1, scientific: !0 },
          Ki: { name: "Ki", value: 1024, scientific: !0 },
          Mi: { name: "Mi", value: Math.pow(1024, 2), scientific: !0 },
          Gi: { name: "Gi", value: Math.pow(1024, 3), scientific: !0 },
          Ti: { name: "Ti", value: Math.pow(1024, 4), scientific: !0 },
          Pi: { name: "Pi", value: Math.pow(1024, 5), scientific: !0 },
          Ei: { name: "Ei", value: Math.pow(1024, 6), scientific: !0 },
          Zi: { name: "Zi", value: Math.pow(1024, 7), scientific: !0 },
          Yi: { name: "Yi", value: Math.pow(1024, 8), scientific: !0 },
        },
        BINARY_LONG_SI: {
          "": { name: "", value: 1, scientific: !0 },
          kilo: { name: "kilo", value: 1e3, scientific: !0 },
          mega: { name: "mega", value: 1e6, scientific: !0 },
          giga: { name: "giga", value: 1e9, scientific: !0 },
          tera: { name: "tera", value: 1e12, scientific: !0 },
          peta: { name: "peta", value: 1e15, scientific: !0 },
          exa: { name: "exa", value: 1e18, scientific: !0 },
          zetta: { name: "zetta", value: 1e21, scientific: !0 },
          yotta: { name: "yotta", value: 1e24, scientific: !0 },
        },
        BINARY_LONG_IEC: {
          "": { name: "", value: 1, scientific: !0 },
          kibi: { name: "kibi", value: 1024, scientific: !0 },
          mebi: { name: "mebi", value: Math.pow(1024, 2), scientific: !0 },
          gibi: { name: "gibi", value: Math.pow(1024, 3), scientific: !0 },
          tebi: { name: "tebi", value: Math.pow(1024, 4), scientific: !0 },
          pebi: { name: "pebi", value: Math.pow(1024, 5), scientific: !0 },
          exi: { name: "exi", value: Math.pow(1024, 6), scientific: !0 },
          zebi: { name: "zebi", value: Math.pow(1024, 7), scientific: !0 },
          yobi: { name: "yobi", value: Math.pow(1024, 8), scientific: !0 },
        },
        BTU: {
          "": { name: "", value: 1, scientific: !0 },
          MM: { name: "MM", value: 1e6, scientific: !0 },
        },
      };
      (B.SHORTLONG = jr({}, B.SHORT, B.LONG)),
        (B.BINARY_SHORT = jr({}, B.BINARY_SHORT_SI, B.BINARY_SHORT_IEC)),
        (B.BINARY_LONG = jr({}, B.BINARY_LONG_SI, B.BINARY_LONG_IEC));
      var R = [
          "MASS",
          "LENGTH",
          "TIME",
          "CURRENT",
          "TEMPERATURE",
          "LUMINOUS_INTENSITY",
          "AMOUNT_OF_SUBSTANCE",
          "ANGLE",
          "BIT",
        ],
        T = {
          NONE: { dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0] },
          MASS: { dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0] },
          LENGTH: { dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0] },
          TIME: { dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0] },
          CURRENT: { dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0] },
          TEMPERATURE: { dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0] },
          LUMINOUS_INTENSITY: { dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0] },
          AMOUNT_OF_SUBSTANCE: { dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0] },
          FORCE: { dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0] },
          SURFACE: { dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0] },
          VOLUME: { dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0] },
          ENERGY: { dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0] },
          POWER: { dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0] },
          PRESSURE: { dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0] },
          ELECTRIC_CHARGE: { dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0] },
          ELECTRIC_CAPACITANCE: { dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0] },
          ELECTRIC_POTENTIAL: { dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0] },
          ELECTRIC_RESISTANCE: { dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0] },
          ELECTRIC_INDUCTANCE: { dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0] },
          ELECTRIC_CONDUCTANCE: { dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0] },
          MAGNETIC_FLUX: { dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0] },
          MAGNETIC_FLUX_DENSITY: { dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0] },
          FREQUENCY: { dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0] },
          ANGLE: { dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0] },
          BIT: { dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1] },
        };
      for (var P in T) ge(T, P) && (T[P].key = P);
      var W = {},
        J = {
          name: "",
          base: W,
          value: 1,
          offset: 0,
          dimensions: R.map((k) => 0),
        },
        G = {
          meter: {
            name: "meter",
            base: T.LENGTH,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          inch: {
            name: "inch",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.0254,
            offset: 0,
          },
          foot: {
            name: "foot",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.3048,
            offset: 0,
          },
          yard: {
            name: "yard",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.9144,
            offset: 0,
          },
          mile: {
            name: "mile",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 1609.344,
            offset: 0,
          },
          link: {
            name: "link",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.201168,
            offset: 0,
          },
          rod: {
            name: "rod",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 5.0292,
            offset: 0,
          },
          chain: {
            name: "chain",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 20.1168,
            offset: 0,
          },
          angstrom: {
            name: "angstrom",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 1e-10,
            offset: 0,
          },
          m: {
            name: "m",
            base: T.LENGTH,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          in: {
            name: "in",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.0254,
            offset: 0,
          },
          ft: {
            name: "ft",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.3048,
            offset: 0,
          },
          yd: {
            name: "yd",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.9144,
            offset: 0,
          },
          mi: {
            name: "mi",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 1609.344,
            offset: 0,
          },
          li: {
            name: "li",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 0.201168,
            offset: 0,
          },
          rd: {
            name: "rd",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 5.02921,
            offset: 0,
          },
          ch: {
            name: "ch",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 20.1168,
            offset: 0,
          },
          mil: {
            name: "mil",
            base: T.LENGTH,
            prefixes: B.NONE,
            value: 254e-7,
            offset: 0,
          },
          m2: {
            name: "m2",
            base: T.SURFACE,
            prefixes: B.SQUARED,
            value: 1,
            offset: 0,
          },
          sqin: {
            name: "sqin",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 64516e-8,
            offset: 0,
          },
          sqft: {
            name: "sqft",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 0.09290304,
            offset: 0,
          },
          sqyd: {
            name: "sqyd",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 0.83612736,
            offset: 0,
          },
          sqmi: {
            name: "sqmi",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 2589988110336e-6,
            offset: 0,
          },
          sqrd: {
            name: "sqrd",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 25.29295,
            offset: 0,
          },
          sqch: {
            name: "sqch",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 404.6873,
            offset: 0,
          },
          sqmil: {
            name: "sqmil",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 64516e-14,
            offset: 0,
          },
          acre: {
            name: "acre",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 4046.86,
            offset: 0,
          },
          hectare: {
            name: "hectare",
            base: T.SURFACE,
            prefixes: B.NONE,
            value: 1e4,
            offset: 0,
          },
          m3: {
            name: "m3",
            base: T.VOLUME,
            prefixes: B.CUBIC,
            value: 1,
            offset: 0,
          },
          L: {
            name: "L",
            base: T.VOLUME,
            prefixes: B.SHORT,
            value: 0.001,
            offset: 0,
          },
          l: {
            name: "l",
            base: T.VOLUME,
            prefixes: B.SHORT,
            value: 0.001,
            offset: 0,
          },
          litre: {
            name: "litre",
            base: T.VOLUME,
            prefixes: B.LONG,
            value: 0.001,
            offset: 0,
          },
          cuin: {
            name: "cuin",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 16387064e-12,
            offset: 0,
          },
          cuft: {
            name: "cuft",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.028316846592,
            offset: 0,
          },
          cuyd: {
            name: "cuyd",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.764554857984,
            offset: 0,
          },
          teaspoon: {
            name: "teaspoon",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 5e-6,
            offset: 0,
          },
          tablespoon: {
            name: "tablespoon",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 15e-6,
            offset: 0,
          },
          drop: {
            name: "drop",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 5e-8,
            offset: 0,
          },
          gtt: {
            name: "gtt",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 5e-8,
            offset: 0,
          },
          minim: {
            name: "minim",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 6161152e-14,
            offset: 0,
          },
          fluiddram: {
            name: "fluiddram",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 36966911e-13,
            offset: 0,
          },
          fluidounce: {
            name: "fluidounce",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 2957353e-11,
            offset: 0,
          },
          gill: {
            name: "gill",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0001182941,
            offset: 0,
          },
          cc: {
            name: "cc",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 1e-6,
            offset: 0,
          },
          cup: {
            name: "cup",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0002365882,
            offset: 0,
          },
          pint: {
            name: "pint",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0004731765,
            offset: 0,
          },
          quart: {
            name: "quart",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0009463529,
            offset: 0,
          },
          gallon: {
            name: "gallon",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.003785412,
            offset: 0,
          },
          beerbarrel: {
            name: "beerbarrel",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.1173478,
            offset: 0,
          },
          oilbarrel: {
            name: "oilbarrel",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.1589873,
            offset: 0,
          },
          hogshead: {
            name: "hogshead",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.238481,
            offset: 0,
          },
          fldr: {
            name: "fldr",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 36966911e-13,
            offset: 0,
          },
          floz: {
            name: "floz",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 2957353e-11,
            offset: 0,
          },
          gi: {
            name: "gi",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0001182941,
            offset: 0,
          },
          cp: {
            name: "cp",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0002365882,
            offset: 0,
          },
          pt: {
            name: "pt",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0004731765,
            offset: 0,
          },
          qt: {
            name: "qt",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.0009463529,
            offset: 0,
          },
          gal: {
            name: "gal",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.003785412,
            offset: 0,
          },
          bbl: {
            name: "bbl",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.1173478,
            offset: 0,
          },
          obl: {
            name: "obl",
            base: T.VOLUME,
            prefixes: B.NONE,
            value: 0.1589873,
            offset: 0,
          },
          g: {
            name: "g",
            base: T.MASS,
            prefixes: B.SHORT,
            value: 0.001,
            offset: 0,
          },
          gram: {
            name: "gram",
            base: T.MASS,
            prefixes: B.LONG,
            value: 0.001,
            offset: 0,
          },
          ton: {
            name: "ton",
            base: T.MASS,
            prefixes: B.SHORT,
            value: 907.18474,
            offset: 0,
          },
          t: {
            name: "t",
            base: T.MASS,
            prefixes: B.SHORT,
            value: 1e3,
            offset: 0,
          },
          tonne: {
            name: "tonne",
            base: T.MASS,
            prefixes: B.LONG,
            value: 1e3,
            offset: 0,
          },
          grain: {
            name: "grain",
            base: T.MASS,
            prefixes: B.NONE,
            value: 6479891e-11,
            offset: 0,
          },
          dram: {
            name: "dram",
            base: T.MASS,
            prefixes: B.NONE,
            value: 0.0017718451953125,
            offset: 0,
          },
          ounce: {
            name: "ounce",
            base: T.MASS,
            prefixes: B.NONE,
            value: 0.028349523125,
            offset: 0,
          },
          poundmass: {
            name: "poundmass",
            base: T.MASS,
            prefixes: B.NONE,
            value: 0.45359237,
            offset: 0,
          },
          hundredweight: {
            name: "hundredweight",
            base: T.MASS,
            prefixes: B.NONE,
            value: 45.359237,
            offset: 0,
          },
          stick: {
            name: "stick",
            base: T.MASS,
            prefixes: B.NONE,
            value: 0.115,
            offset: 0,
          },
          stone: {
            name: "stone",
            base: T.MASS,
            prefixes: B.NONE,
            value: 6.35029318,
            offset: 0,
          },
          gr: {
            name: "gr",
            base: T.MASS,
            prefixes: B.NONE,
            value: 6479891e-11,
            offset: 0,
          },
          dr: {
            name: "dr",
            base: T.MASS,
            prefixes: B.NONE,
            value: 0.0017718451953125,
            offset: 0,
          },
          oz: {
            name: "oz",
            base: T.MASS,
            prefixes: B.NONE,
            value: 0.028349523125,
            offset: 0,
          },
          lbm: {
            name: "lbm",
            base: T.MASS,
            prefixes: B.NONE,
            value: 0.45359237,
            offset: 0,
          },
          cwt: {
            name: "cwt",
            base: T.MASS,
            prefixes: B.NONE,
            value: 45.359237,
            offset: 0,
          },
          s: {
            name: "s",
            base: T.TIME,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          min: {
            name: "min",
            base: T.TIME,
            prefixes: B.NONE,
            value: 60,
            offset: 0,
          },
          h: {
            name: "h",
            base: T.TIME,
            prefixes: B.NONE,
            value: 3600,
            offset: 0,
          },
          second: {
            name: "second",
            base: T.TIME,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          sec: {
            name: "sec",
            base: T.TIME,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          minute: {
            name: "minute",
            base: T.TIME,
            prefixes: B.NONE,
            value: 60,
            offset: 0,
          },
          hour: {
            name: "hour",
            base: T.TIME,
            prefixes: B.NONE,
            value: 3600,
            offset: 0,
          },
          day: {
            name: "day",
            base: T.TIME,
            prefixes: B.NONE,
            value: 86400,
            offset: 0,
          },
          week: {
            name: "week",
            base: T.TIME,
            prefixes: B.NONE,
            value: 7 * 86400,
            offset: 0,
          },
          month: {
            name: "month",
            base: T.TIME,
            prefixes: B.NONE,
            value: 2629800,
            offset: 0,
          },
          year: {
            name: "year",
            base: T.TIME,
            prefixes: B.NONE,
            value: 31557600,
            offset: 0,
          },
          decade: {
            name: "decade",
            base: T.TIME,
            prefixes: B.NONE,
            value: 315576e3,
            offset: 0,
          },
          century: {
            name: "century",
            base: T.TIME,
            prefixes: B.NONE,
            value: 315576e4,
            offset: 0,
          },
          millennium: {
            name: "millennium",
            base: T.TIME,
            prefixes: B.NONE,
            value: 315576e5,
            offset: 0,
          },
          hertz: {
            name: "Hertz",
            base: T.FREQUENCY,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
            reciprocal: !0,
          },
          Hz: {
            name: "Hz",
            base: T.FREQUENCY,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
            reciprocal: !0,
          },
          rad: {
            name: "rad",
            base: T.ANGLE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          radian: {
            name: "radian",
            base: T.ANGLE,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          deg: {
            name: "deg",
            base: T.ANGLE,
            prefixes: B.SHORT,
            value: null,
            offset: 0,
          },
          degree: {
            name: "degree",
            base: T.ANGLE,
            prefixes: B.LONG,
            value: null,
            offset: 0,
          },
          grad: {
            name: "grad",
            base: T.ANGLE,
            prefixes: B.SHORT,
            value: null,
            offset: 0,
          },
          gradian: {
            name: "gradian",
            base: T.ANGLE,
            prefixes: B.LONG,
            value: null,
            offset: 0,
          },
          cycle: {
            name: "cycle",
            base: T.ANGLE,
            prefixes: B.NONE,
            value: null,
            offset: 0,
          },
          arcsec: {
            name: "arcsec",
            base: T.ANGLE,
            prefixes: B.NONE,
            value: null,
            offset: 0,
          },
          arcmin: {
            name: "arcmin",
            base: T.ANGLE,
            prefixes: B.NONE,
            value: null,
            offset: 0,
          },
          A: {
            name: "A",
            base: T.CURRENT,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          ampere: {
            name: "ampere",
            base: T.CURRENT,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          K: {
            name: "K",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1,
            offset: 0,
          },
          degC: {
            name: "degC",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1,
            offset: 273.15,
          },
          degF: {
            name: "degF",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1 / 1.8,
            offset: 459.67,
          },
          degR: {
            name: "degR",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1 / 1.8,
            offset: 0,
          },
          kelvin: {
            name: "kelvin",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1,
            offset: 0,
          },
          celsius: {
            name: "celsius",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1,
            offset: 273.15,
          },
          fahrenheit: {
            name: "fahrenheit",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1 / 1.8,
            offset: 459.67,
          },
          rankine: {
            name: "rankine",
            base: T.TEMPERATURE,
            prefixes: B.NONE,
            value: 1 / 1.8,
            offset: 0,
          },
          mol: {
            name: "mol",
            base: T.AMOUNT_OF_SUBSTANCE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          mole: {
            name: "mole",
            base: T.AMOUNT_OF_SUBSTANCE,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          cd: {
            name: "cd",
            base: T.LUMINOUS_INTENSITY,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          candela: {
            name: "candela",
            base: T.LUMINOUS_INTENSITY,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          N: {
            name: "N",
            base: T.FORCE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          newton: {
            name: "newton",
            base: T.FORCE,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          dyn: {
            name: "dyn",
            base: T.FORCE,
            prefixes: B.SHORT,
            value: 1e-5,
            offset: 0,
          },
          dyne: {
            name: "dyne",
            base: T.FORCE,
            prefixes: B.LONG,
            value: 1e-5,
            offset: 0,
          },
          lbf: {
            name: "lbf",
            base: T.FORCE,
            prefixes: B.NONE,
            value: 4.4482216152605,
            offset: 0,
          },
          poundforce: {
            name: "poundforce",
            base: T.FORCE,
            prefixes: B.NONE,
            value: 4.4482216152605,
            offset: 0,
          },
          kip: {
            name: "kip",
            base: T.FORCE,
            prefixes: B.LONG,
            value: 4448.2216,
            offset: 0,
          },
          kilogramforce: {
            name: "kilogramforce",
            base: T.FORCE,
            prefixes: B.NONE,
            value: 9.80665,
            offset: 0,
          },
          J: {
            name: "J",
            base: T.ENERGY,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          joule: {
            name: "joule",
            base: T.ENERGY,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          erg: {
            name: "erg",
            base: T.ENERGY,
            prefixes: B.NONE,
            value: 1e-7,
            offset: 0,
          },
          Wh: {
            name: "Wh",
            base: T.ENERGY,
            prefixes: B.SHORT,
            value: 3600,
            offset: 0,
          },
          BTU: {
            name: "BTU",
            base: T.ENERGY,
            prefixes: B.BTU,
            value: 1055.05585262,
            offset: 0,
          },
          eV: {
            name: "eV",
            base: T.ENERGY,
            prefixes: B.SHORT,
            value: 1602176565e-28,
            offset: 0,
          },
          electronvolt: {
            name: "electronvolt",
            base: T.ENERGY,
            prefixes: B.LONG,
            value: 1602176565e-28,
            offset: 0,
          },
          W: {
            name: "W",
            base: T.POWER,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          watt: {
            name: "watt",
            base: T.POWER,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          hp: {
            name: "hp",
            base: T.POWER,
            prefixes: B.NONE,
            value: 745.6998715386,
            offset: 0,
          },
          VAR: {
            name: "VAR",
            base: T.POWER,
            prefixes: B.SHORT,
            value: d.I,
            offset: 0,
          },
          VA: {
            name: "VA",
            base: T.POWER,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          Pa: {
            name: "Pa",
            base: T.PRESSURE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          psi: {
            name: "psi",
            base: T.PRESSURE,
            prefixes: B.NONE,
            value: 6894.75729276459,
            offset: 0,
          },
          atm: {
            name: "atm",
            base: T.PRESSURE,
            prefixes: B.NONE,
            value: 101325,
            offset: 0,
          },
          bar: {
            name: "bar",
            base: T.PRESSURE,
            prefixes: B.SHORTLONG,
            value: 1e5,
            offset: 0,
          },
          torr: {
            name: "torr",
            base: T.PRESSURE,
            prefixes: B.NONE,
            value: 133.322,
            offset: 0,
          },
          mmHg: {
            name: "mmHg",
            base: T.PRESSURE,
            prefixes: B.NONE,
            value: 133.322,
            offset: 0,
          },
          mmH2O: {
            name: "mmH2O",
            base: T.PRESSURE,
            prefixes: B.NONE,
            value: 9.80665,
            offset: 0,
          },
          cmH2O: {
            name: "cmH2O",
            base: T.PRESSURE,
            prefixes: B.NONE,
            value: 98.0665,
            offset: 0,
          },
          coulomb: {
            name: "coulomb",
            base: T.ELECTRIC_CHARGE,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          C: {
            name: "C",
            base: T.ELECTRIC_CHARGE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          farad: {
            name: "farad",
            base: T.ELECTRIC_CAPACITANCE,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          F: {
            name: "F",
            base: T.ELECTRIC_CAPACITANCE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          volt: {
            name: "volt",
            base: T.ELECTRIC_POTENTIAL,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          V: {
            name: "V",
            base: T.ELECTRIC_POTENTIAL,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          ohm: {
            name: "ohm",
            base: T.ELECTRIC_RESISTANCE,
            prefixes: B.SHORTLONG,
            value: 1,
            offset: 0,
          },
          henry: {
            name: "henry",
            base: T.ELECTRIC_INDUCTANCE,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          H: {
            name: "H",
            base: T.ELECTRIC_INDUCTANCE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          siemens: {
            name: "siemens",
            base: T.ELECTRIC_CONDUCTANCE,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          S: {
            name: "S",
            base: T.ELECTRIC_CONDUCTANCE,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          weber: {
            name: "weber",
            base: T.MAGNETIC_FLUX,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          Wb: {
            name: "Wb",
            base: T.MAGNETIC_FLUX,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          tesla: {
            name: "tesla",
            base: T.MAGNETIC_FLUX_DENSITY,
            prefixes: B.LONG,
            value: 1,
            offset: 0,
          },
          T: {
            name: "T",
            base: T.MAGNETIC_FLUX_DENSITY,
            prefixes: B.SHORT,
            value: 1,
            offset: 0,
          },
          b: {
            name: "b",
            base: T.BIT,
            prefixes: B.BINARY_SHORT,
            value: 1,
            offset: 0,
          },
          bits: {
            name: "bits",
            base: T.BIT,
            prefixes: B.BINARY_LONG,
            value: 1,
            offset: 0,
          },
          B: {
            name: "B",
            base: T.BIT,
            prefixes: B.BINARY_SHORT,
            value: 8,
            offset: 0,
          },
          bytes: {
            name: "bytes",
            base: T.BIT,
            prefixes: B.BINARY_LONG,
            value: 8,
            offset: 0,
          },
        },
        Y = {
          meters: "meter",
          inches: "inch",
          feet: "foot",
          yards: "yard",
          miles: "mile",
          links: "link",
          rods: "rod",
          chains: "chain",
          angstroms: "angstrom",
          lt: "l",
          litres: "litre",
          liter: "litre",
          liters: "litre",
          teaspoons: "teaspoon",
          tablespoons: "tablespoon",
          minims: "minim",
          fluiddrams: "fluiddram",
          fluidounces: "fluidounce",
          gills: "gill",
          cups: "cup",
          pints: "pint",
          quarts: "quart",
          gallons: "gallon",
          beerbarrels: "beerbarrel",
          oilbarrels: "oilbarrel",
          hogsheads: "hogshead",
          gtts: "gtt",
          grams: "gram",
          tons: "ton",
          tonnes: "tonne",
          grains: "grain",
          drams: "dram",
          ounces: "ounce",
          poundmasses: "poundmass",
          hundredweights: "hundredweight",
          sticks: "stick",
          lb: "lbm",
          lbs: "lbm",
          kips: "kip",
          kgf: "kilogramforce",
          acres: "acre",
          hectares: "hectare",
          sqfeet: "sqft",
          sqyard: "sqyd",
          sqmile: "sqmi",
          sqmiles: "sqmi",
          mmhg: "mmHg",
          mmh2o: "mmH2O",
          cmh2o: "cmH2O",
          seconds: "second",
          secs: "second",
          minutes: "minute",
          mins: "minute",
          hours: "hour",
          hr: "hour",
          hrs: "hour",
          days: "day",
          weeks: "week",
          months: "month",
          years: "year",
          decades: "decade",
          centuries: "century",
          millennia: "millennium",
          hertz: "hertz",
          radians: "radian",
          degrees: "degree",
          gradians: "gradian",
          cycles: "cycle",
          arcsecond: "arcsec",
          arcseconds: "arcsec",
          arcminute: "arcmin",
          arcminutes: "arcmin",
          BTUs: "BTU",
          watts: "watt",
          joules: "joule",
          amperes: "ampere",
          coulombs: "coulomb",
          volts: "volt",
          ohms: "ohm",
          farads: "farad",
          webers: "weber",
          teslas: "tesla",
          electronvolts: "electronvolt",
          moles: "mole",
          bit: "bits",
          byte: "bytes",
        };
      function re(k) {
        if (k.number === "BigNumber") {
          var Q = jc(N);
          (G.rad.value = new N(1)),
            (G.deg.value = Q.div(180)),
            (G.grad.value = Q.div(200)),
            (G.cycle.value = Q.times(2)),
            (G.arcsec.value = Q.div(648e3)),
            (G.arcmin.value = Q.div(10800));
        } else
          (G.rad.value = 1),
            (G.deg.value = Math.PI / 180),
            (G.grad.value = Math.PI / 200),
            (G.cycle.value = Math.PI * 2),
            (G.arcsec.value = Math.PI / 648e3),
            (G.arcmin.value = Math.PI / 10800);
        (G.radian.value = G.rad.value),
          (G.degree.value = G.deg.value),
          (G.gradian.value = G.grad.value);
      }
      re(t),
        r &&
          r("config", function (k, Q) {
            k.number !== Q.number && re(k);
          });
      var K = {
        si: {
          NONE: { unit: J, prefix: B.NONE[""] },
          LENGTH: { unit: G.m, prefix: B.SHORT[""] },
          MASS: { unit: G.g, prefix: B.SHORT.k },
          TIME: { unit: G.s, prefix: B.SHORT[""] },
          CURRENT: { unit: G.A, prefix: B.SHORT[""] },
          TEMPERATURE: { unit: G.K, prefix: B.SHORT[""] },
          LUMINOUS_INTENSITY: { unit: G.cd, prefix: B.SHORT[""] },
          AMOUNT_OF_SUBSTANCE: { unit: G.mol, prefix: B.SHORT[""] },
          ANGLE: { unit: G.rad, prefix: B.SHORT[""] },
          BIT: { unit: G.bits, prefix: B.SHORT[""] },
          FORCE: { unit: G.N, prefix: B.SHORT[""] },
          ENERGY: { unit: G.J, prefix: B.SHORT[""] },
          POWER: { unit: G.W, prefix: B.SHORT[""] },
          PRESSURE: { unit: G.Pa, prefix: B.SHORT[""] },
          ELECTRIC_CHARGE: { unit: G.C, prefix: B.SHORT[""] },
          ELECTRIC_CAPACITANCE: { unit: G.F, prefix: B.SHORT[""] },
          ELECTRIC_POTENTIAL: { unit: G.V, prefix: B.SHORT[""] },
          ELECTRIC_RESISTANCE: { unit: G.ohm, prefix: B.SHORT[""] },
          ELECTRIC_INDUCTANCE: { unit: G.H, prefix: B.SHORT[""] },
          ELECTRIC_CONDUCTANCE: { unit: G.S, prefix: B.SHORT[""] },
          MAGNETIC_FLUX: { unit: G.Wb, prefix: B.SHORT[""] },
          MAGNETIC_FLUX_DENSITY: { unit: G.T, prefix: B.SHORT[""] },
          FREQUENCY: { unit: G.Hz, prefix: B.SHORT[""] },
        },
      };
      (K.cgs = JSON.parse(JSON.stringify(K.si))),
        (K.cgs.LENGTH = { unit: G.m, prefix: B.SHORT.c }),
        (K.cgs.MASS = { unit: G.g, prefix: B.SHORT[""] }),
        (K.cgs.FORCE = { unit: G.dyn, prefix: B.SHORT[""] }),
        (K.cgs.ENERGY = { unit: G.erg, prefix: B.NONE[""] }),
        (K.us = JSON.parse(JSON.stringify(K.si))),
        (K.us.LENGTH = { unit: G.ft, prefix: B.NONE[""] }),
        (K.us.MASS = { unit: G.lbm, prefix: B.NONE[""] }),
        (K.us.TEMPERATURE = { unit: G.degF, prefix: B.NONE[""] }),
        (K.us.FORCE = { unit: G.lbf, prefix: B.NONE[""] }),
        (K.us.ENERGY = { unit: G.BTU, prefix: B.BTU[""] }),
        (K.us.POWER = { unit: G.hp, prefix: B.NONE[""] }),
        (K.us.PRESSURE = { unit: G.psi, prefix: B.NONE[""] }),
        (K.auto = JSON.parse(JSON.stringify(K.si)));
      var ie = K.auto;
      (h.setUnitSystem = function (k) {
        if (ge(K, k)) ie = K[k];
        else
          throw new Error(
            "Unit system " +
              k +
              " does not exist. Choices are: " +
              Object.keys(K).join(", ")
          );
      }),
        (h.getUnitSystem = function () {
          for (var k in K) if (ge(K, k) && K[k] === ie) return k;
        }),
        (h.typeConverters = {
          BigNumber: function (Q) {
            return new N(Q + "");
          },
          Fraction: function (Q) {
            return new g(Q);
          },
          Complex: function (Q) {
            return Q;
          },
          number: function (Q) {
            return Q;
          },
        }),
        (h._getNumberConverter = function (k) {
          if (!h.typeConverters[k])
            throw new TypeError('Unsupported type "' + k + '"');
          return h.typeConverters[k];
        });
      for (var te in G)
        if (ge(G, te)) {
          var oe = G[te];
          oe.dimensions = oe.base.dimensions;
        }
      for (var ee in Y)
        if (ge(Y, ee)) {
          var de = G[Y[ee]],
            xe = {};
          for (var ce in de) ge(de, ce) && (xe[ce] = de[ce]);
          (xe.name = ee), (G[ee] = xe);
        }
      h.isValidAlpha = function (Q) {
        return /^[a-zA-Z]$/.test(Q);
      };
      function he(k) {
        for (var Q = 0; Q < k.length; Q++) {
          if (((y = k.charAt(Q)), Q === 0 && !h.isValidAlpha(y)))
            throw new Error(
              'Invalid unit name (must begin with alpha character): "' + k + '"'
            );
          if (Q > 0 && !(h.isValidAlpha(y) || E(y)))
            throw new Error(
              'Invalid unit name (only alphanumeric characters are allowed): "' +
                k +
                '"'
            );
        }
      }
      return (
        (h.createUnit = function (k, Q) {
          if (typeof k != "object")
            throw new TypeError(
              "createUnit expects first parameter to be of type 'Object'"
            );
          if (Q && Q.override) {
            for (var V in k)
              if ((ge(k, V) && h.deleteUnit(V), k[V].aliases))
                for (var q = 0; q < k[V].aliases.length; q++)
                  h.deleteUnit(k[V].aliases[q]);
          }
          var X;
          for (var z in k) ge(k, z) && (X = h.createUnitSingle(z, k[z]));
          return X;
        }),
        (h.createUnitSingle = function (k, Q, V) {
          if (
            ((typeof Q == "undefined" || Q === null) && (Q = {}),
            typeof k != "string")
          )
            throw new TypeError(
              "createUnitSingle expects first parameter to be of type 'string'"
            );
          if (ge(G, k))
            throw new Error(
              'Cannot create unit "' +
                k +
                '": a unit with that name already exists'
            );
          he(k);
          var q = null,
            X = [],
            z = 0,
            U,
            j,
            H;
          if (Q && Q.type === "Unit") q = Q.clone();
          else if (typeof Q == "string") Q !== "" && (U = Q);
          else if (typeof Q == "object")
            (U = Q.definition),
              (j = Q.prefixes),
              (z = Q.offset),
              (H = Q.baseName),
              Q.aliases && (X = Q.aliases.valueOf());
          else
            throw new TypeError(
              'Cannot create unit "' +
                k +
                '" from "' +
                Q.toString() +
                '": expecting "string" or "Unit" or "Object"'
            );
          if (X) {
            for (var ae = 0; ae < X.length; ae++)
              if (ge(G, X[ae]))
                throw new Error(
                  'Cannot create alias "' +
                    X[ae] +
                    '": a unit with that name already exists'
                );
          }
          if (U && typeof U == "string" && !q)
            try {
              q = h.parse(U, { allowNoUnits: !0 });
            } catch (O) {
              throw (
                ((O.message =
                  'Could not create unit "' +
                  k +
                  '" from "' +
                  U +
                  '": ' +
                  O.message),
                O)
              );
            }
          else U && U.type === "Unit" && (q = U.clone());
          (X = X || []),
            (z = z || 0),
            j && j.toUpperCase
              ? (j = B[j.toUpperCase()] || B.NONE)
              : (j = B.NONE);
          var ue = {};
          if (q) {
            ue = {
              name: k,
              value: q.value,
              dimensions: q.dimensions.slice(0),
              prefixes: j,
              offset: z,
            };
            var we = !1;
            for (var Ge in T)
              if (ge(T, Ge)) {
                for (var ir = !0, Je = 0; Je < R.length; Je++)
                  if (
                    Math.abs(
                      (ue.dimensions[Je] || 0) - (T[Ge].dimensions[Je] || 0)
                    ) > 1e-12
                  ) {
                    ir = !1;
                    break;
                  }
                if (ir) {
                  (we = !0), (ue.base = T[Ge]);
                  break;
                }
              }
            if (!we) {
              H = H || k + "_STUFF";
              var at = { dimensions: q.dimensions.slice(0) };
              (at.key = H),
                (T[H] = at),
                (ie[H] = { unit: ue, prefix: B.NONE[""] }),
                (ue.base = T[H]);
            }
          } else {
            if (((H = H || k + "_STUFF"), R.indexOf(H) >= 0))
              throw new Error(
                'Cannot create new base unit "' +
                  k +
                  '": a base unit with that name already exists (and cannot be overridden)'
              );
            R.push(H);
            for (var ve in T) ge(T, ve) && (T[ve].dimensions[R.length - 1] = 0);
            for (var fe = { dimensions: [] }, pe = 0; pe < R.length; pe++)
              fe.dimensions[pe] = 0;
            (fe.dimensions[R.length - 1] = 1),
              (fe.key = H),
              (T[H] = fe),
              (ue = {
                name: k,
                value: 1,
                dimensions: T[H].dimensions.slice(0),
                prefixes: j,
                offset: z,
                base: T[H],
              }),
              (ie[H] = { unit: ue, prefix: B.NONE[""] });
          }
          h.UNITS[k] = ue;
          for (var Qr = 0; Qr < X.length; Qr++) {
            var Ft = X[Qr],
              qe = {};
            for (var en in ue) ge(ue, en) && (qe[en] = ue[en]);
            (qe.name = Ft), (h.UNITS[Ft] = qe);
          }
          return delete $.cache, new h(null, k);
        }),
        (h.deleteUnit = function (k) {
          delete h.UNITS[k];
        }),
        (h.PREFIXES = B),
        (h.BASE_DIMENSIONS = R),
        (h.BASE_UNITS = T),
        (h.UNIT_SYSTEMS = K),
        (h.UNITS = G),
        h
      );
    },
    { isClass: !0 }
  ),
  Pv = "unit",
  Y3 = ["typed", "Unit"],
  X3 = F(Pv, Y3, (e) => {
    var { typed: r, Unit: t } = e;
    return r(Pv, {
      Unit: function (i) {
        return i.clone();
      },
      string: function (i) {
        return t.isValuelessUnit(i)
          ? new t(null, i)
          : t.parse(i, { allowNoUnits: !0 });
      },
      "number | BigNumber | Fraction | Complex, string": function (i, a) {
        return new t(i, a);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  Lv = "sparse",
  j3 = ["typed", "SparseMatrix"],
  J3 = F(Lv, j3, (e) => {
    var { typed: r, SparseMatrix: t } = e;
    return r(Lv, {
      "": function () {
        return new t([]);
      },
      string: function (i) {
        return new t([], i);
      },
      "Array | Matrix": function (i) {
        return new t(i);
      },
      "Array | Matrix, string": function (i, a) {
        return new t(i, a);
      },
    });
  }),
  kv = "createUnit",
  K3 = ["typed", "Unit"],
  eO = F(kv, K3, (e) => {
    var { typed: r, Unit: t } = e;
    return r(kv, {
      "Object, Object": function (i, a) {
        return t.createUnit(i, a);
      },
      Object: function (i) {
        return t.createUnit(i, {});
      },
      "string, Unit | string | Object, Object": function (i, a, s) {
        var f = {};
        return (f[i] = a), t.createUnit(f, s);
      },
      "string, Unit | string | Object": function (i, a) {
        var s = {};
        return (s[i] = a), t.createUnit(s, {});
      },
      string: function (i) {
        var a = {};
        return (a[i] = {}), t.createUnit(a, {});
      },
    });
  }),
  Uv = "acos",
  rO = ["typed", "config", "Complex"],
  tO = F(Uv, rO, (e) => {
    var { typed: r, config: t, Complex: n } = e;
    return r(Uv, {
      number: function (a) {
        return (a >= -1 && a <= 1) || t.predictable
          ? Math.acos(a)
          : new n(a, 0).acos();
      },
      Complex: function (a) {
        return a.acos();
      },
      BigNumber: function (a) {
        return a.acos();
      },
      "Array | Matrix": function (a) {
        return ye(a, this);
      },
    });
  }),
  qv = "acosh",
  nO = ["typed", "config", "Complex"],
  iO = F(qv, nO, (e) => {
    var { typed: r, config: t, Complex: n } = e;
    return r(qv, {
      number: function (a) {
        return a >= 1 || t.predictable
          ? e1(a)
          : a <= -1
          ? new n(Math.log(Math.sqrt(a * a - 1) - a), Math.PI)
          : new n(a, 0).acosh();
      },
      Complex: function (a) {
        return a.acosh();
      },
      BigNumber: function (a) {
        return a.acosh();
      },
      "Array | Matrix": function (a) {
        return ye(a, this);
      },
    });
  }),
  Hv = "acot",
  aO = ["typed", "BigNumber"],
  oO = F(Hv, aO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(Hv, {
      number: r1,
      Complex: function (i) {
        return i.acot();
      },
      BigNumber: function (i) {
        return new t(1).div(i).atan();
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  Vv = "acoth",
  sO = ["typed", "config", "Complex", "BigNumber"],
  uO = F(Vv, sO, (e) => {
    var { typed: r, config: t, Complex: n, BigNumber: i } = e;
    return r(Vv, {
      number: function (s) {
        return s >= 1 || s <= -1 || t.predictable ? t1(s) : new n(s, 0).acoth();
      },
      Complex: function (s) {
        return s.acoth();
      },
      BigNumber: function (s) {
        return new i(1).div(s).atanh();
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
    });
  }),
  Gv = "acsc",
  lO = ["typed", "config", "Complex", "BigNumber"],
  cO = F(Gv, lO, (e) => {
    var { typed: r, config: t, Complex: n, BigNumber: i } = e;
    return r(Gv, {
      number: function (s) {
        return s <= -1 || s >= 1 || t.predictable ? n1(s) : new n(s, 0).acsc();
      },
      Complex: function (s) {
        return s.acsc();
      },
      BigNumber: function (s) {
        return new i(1).div(s).asin();
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
    });
  }),
  Wv = "acsch",
  fO = ["typed", "BigNumber"],
  pO = F(Wv, fO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(Wv, {
      number: i1,
      Complex: function (i) {
        return i.acsch();
      },
      BigNumber: function (i) {
        return new t(1).div(i).asinh();
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  Zv = "asec",
  mO = ["typed", "config", "Complex", "BigNumber"],
  vO = F(Zv, mO, (e) => {
    var { typed: r, config: t, Complex: n, BigNumber: i } = e;
    return r(Zv, {
      number: function (s) {
        return s <= -1 || s >= 1 || t.predictable ? a1(s) : new n(s, 0).asec();
      },
      Complex: function (s) {
        return s.asec();
      },
      BigNumber: function (s) {
        return new i(1).div(s).acos();
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
    });
  }),
  Qv = "asech",
  dO = ["typed", "config", "Complex", "BigNumber"],
  hO = F(Qv, dO, (e) => {
    var { typed: r, config: t, Complex: n, BigNumber: i } = e;
    return r(Qv, {
      number: function (s) {
        if ((s <= 1 && s >= -1) || t.predictable) {
          var f = 1 / s;
          if (f > 0 || t.predictable) return o1(s);
          var l = Math.sqrt(f * f - 1);
          return new n(Math.log(l - f), Math.PI);
        }
        return new n(s, 0).asech();
      },
      Complex: function (s) {
        return s.asech();
      },
      BigNumber: function (s) {
        return new i(1).div(s).acosh();
      },
      "Array | Matrix": function (s) {
        return ye(s, this);
      },
    });
  }),
  Yv = "asin",
  gO = ["typed", "config", "Complex"],
  yO = F(Yv, gO, (e) => {
    var { typed: r, config: t, Complex: n } = e;
    return r(Yv, {
      number: function (a) {
        return (a >= -1 && a <= 1) || t.predictable
          ? Math.asin(a)
          : new n(a, 0).asin();
      },
      Complex: function (a) {
        return a.asin();
      },
      BigNumber: function (a) {
        return a.asin();
      },
      "Array | Matrix": function (a) {
        return ye(a, this);
      },
    });
  }),
  xO = "asinh",
  wO = ["typed"],
  bO = F(xO, wO, (e) => {
    var { typed: r } = e;
    return r("asinh", {
      number: s1,
      Complex: function (n) {
        return n.asinh();
      },
      BigNumber: function (n) {
        return n.asinh();
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  NO = "atan",
  MO = ["typed"],
  SO = F(NO, MO, (e) => {
    var { typed: r } = e;
    return r("atan", {
      number: function (n) {
        return Math.atan(n);
      },
      Complex: function (n) {
        return n.atan();
      },
      BigNumber: function (n) {
        return n.atan();
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Xv = "atan2",
  AO = ["typed", "matrix", "equalScalar", "BigNumber", "DenseMatrix"],
  EO = F(Xv, AO, (e) => {
    var {
        typed: r,
        matrix: t,
        equalScalar: n,
        BigNumber: i,
        DenseMatrix: a,
      } = e,
      s = Et({ typed: r, equalScalar: n }),
      f = Lr({ typed: r }),
      l = b1({ typed: r, equalScalar: n }),
      p = Sr({ typed: r, equalScalar: n }),
      u = xr({ typed: r, DenseMatrix: a }),
      o = Xe({ typed: r }),
      c = ke({ typed: r });
    return r(Xv, {
      "number, number": Math.atan2,
      "BigNumber, BigNumber": function (v, d) {
        return i.atan2(v, d);
      },
      "SparseMatrix, SparseMatrix": function (v, d) {
        return l(v, d, this, !1);
      },
      "SparseMatrix, DenseMatrix": function (v, d) {
        return s(d, v, this, !0);
      },
      "DenseMatrix, SparseMatrix": function (v, d) {
        return f(v, d, this, !1);
      },
      "DenseMatrix, DenseMatrix": function (v, d) {
        return o(v, d, this);
      },
      "Array, Array": function (v, d) {
        return this(t(v), t(d)).valueOf();
      },
      "Array, Matrix": function (v, d) {
        return this(t(v), d);
      },
      "Matrix, Array": function (v, d) {
        return this(v, t(d));
      },
      "SparseMatrix, number | BigNumber": function (v, d) {
        return p(v, d, this, !1);
      },
      "DenseMatrix, number | BigNumber": function (v, d) {
        return c(v, d, this, !1);
      },
      "number | BigNumber, SparseMatrix": function (v, d) {
        return u(d, v, this, !0);
      },
      "number | BigNumber, DenseMatrix": function (v, d) {
        return c(d, v, this, !0);
      },
      "Array, number | BigNumber": function (v, d) {
        return c(t(v), d, this, !1).valueOf();
      },
      "number | BigNumber, Array": function (v, d) {
        return c(t(d), v, this, !0).valueOf();
      },
    });
  }),
  jv = "atanh",
  CO = ["typed", "config", "Complex"],
  OO = F(jv, CO, (e) => {
    var { typed: r, config: t, Complex: n } = e;
    return r(jv, {
      number: function (a) {
        return (a <= 1 && a >= -1) || t.predictable
          ? u1(a)
          : new n(a, 0).atanh();
      },
      Complex: function (a) {
        return a.atanh();
      },
      BigNumber: function (a) {
        return a.atanh();
      },
      "Array | Matrix": function (a) {
        return ye(a, this);
      },
    });
  }),
  Jv = "cos",
  TO = ["typed"],
  DO = F(Jv, TO, (e) => {
    var { typed: r } = e;
    return r(Jv, {
      number: Math.cos,
      Complex: function (n) {
        return n.cos();
      },
      BigNumber: function (n) {
        return n.cos();
      },
      Unit: function (n) {
        if (!n.hasBase(n.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function cos is no angle");
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  Kv = "cosh",
  _O = ["typed"],
  BO = F(Kv, _O, (e) => {
    var { typed: r } = e;
    return r(Kv, {
      number: jb,
      Complex: function (n) {
        return n.cosh();
      },
      BigNumber: function (n) {
        return n.cosh();
      },
      Unit: function (n) {
        if (!n.hasBase(n.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function cosh is no angle");
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  ed = "cot",
  IO = ["typed", "BigNumber"],
  $O = F(ed, IO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(ed, {
      number: l1,
      Complex: function (i) {
        return i.cot();
      },
      BigNumber: function (i) {
        return new t(1).div(i.tan());
      },
      Unit: function (i) {
        if (!i.hasBase(i.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function cot is no angle");
        return this(i.value);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  rd = "coth",
  zO = ["typed", "BigNumber"],
  RO = F(rd, zO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(rd, {
      number: c1,
      Complex: function (i) {
        return i.coth();
      },
      BigNumber: function (i) {
        return new t(1).div(i.tanh());
      },
      Unit: function (i) {
        if (!i.hasBase(i.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function coth is no angle");
        return this(i.value);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  td = "csc",
  FO = ["typed", "BigNumber"],
  PO = F(td, FO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(td, {
      number: f1,
      Complex: function (i) {
        return i.csc();
      },
      BigNumber: function (i) {
        return new t(1).div(i.sin());
      },
      Unit: function (i) {
        if (!i.hasBase(i.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function csc is no angle");
        return this(i.value);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  nd = "csch",
  LO = ["typed", "BigNumber"],
  kO = F(nd, LO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(nd, {
      number: p1,
      Complex: function (i) {
        return i.csch();
      },
      BigNumber: function (i) {
        return new t(1).div(i.sinh());
      },
      Unit: function (i) {
        if (!i.hasBase(i.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function csch is no angle");
        return this(i.value);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  id = "sec",
  UO = ["typed", "BigNumber"],
  qO = F(id, UO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(id, {
      number: m1,
      Complex: function (i) {
        return i.sec();
      },
      BigNumber: function (i) {
        return new t(1).div(i.cos());
      },
      Unit: function (i) {
        if (!i.hasBase(i.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function sec is no angle");
        return this(i.value);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  ad = "sech",
  HO = ["typed", "BigNumber"],
  VO = F(ad, HO, (e) => {
    var { typed: r, BigNumber: t } = e;
    return r(ad, {
      number: v1,
      Complex: function (i) {
        return i.sech();
      },
      BigNumber: function (i) {
        return new t(1).div(i.cosh());
      },
      Unit: function (i) {
        if (!i.hasBase(i.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function sech is no angle");
        return this(i.value);
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  od = "sin",
  GO = ["typed"],
  WO = F(od, GO, (e) => {
    var { typed: r } = e;
    return r(od, {
      number: Math.sin,
      Complex: function (n) {
        return n.sin();
      },
      BigNumber: function (n) {
        return n.sin();
      },
      Unit: function (n) {
        if (!n.hasBase(n.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function sin is no angle");
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  sd = "sinh",
  ZO = ["typed"],
  QO = F(sd, ZO, (e) => {
    var { typed: r } = e;
    return r(sd, {
      number: d1,
      Complex: function (n) {
        return n.sinh();
      },
      BigNumber: function (n) {
        return n.sinh();
      },
      Unit: function (n) {
        if (!n.hasBase(n.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function sinh is no angle");
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  ud = "tan",
  YO = ["typed"],
  XO = F(ud, YO, (e) => {
    var { typed: r } = e;
    return r(ud, {
      number: Math.tan,
      Complex: function (n) {
        return n.tan();
      },
      BigNumber: function (n) {
        return n.tan();
      },
      Unit: function (n) {
        if (!n.hasBase(n.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function tan is no angle");
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  jO = "tanh",
  JO = ["typed"],
  KO = F(jO, JO, (e) => {
    var { typed: r } = e;
    return r("tanh", {
      number: Kb,
      Complex: function (n) {
        return n.tanh();
      },
      BigNumber: function (n) {
        return n.tanh();
      },
      Unit: function (n) {
        if (!n.hasBase(n.constructor.BASE_UNITS.ANGLE))
          throw new TypeError("Unit in function tanh is no angle");
        return this(n.value);
      },
      "Array | Matrix": function (n) {
        return ye(n, this);
      },
    });
  }),
  ld = "setCartesian",
  e4 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"],
  r4 = F(ld, e4, (e) => {
    var {
      typed: r,
      size: t,
      subset: n,
      compareNatural: i,
      Index: a,
      DenseMatrix: s,
    } = e;
    return r(ld, {
      "Array | Matrix, Array | Matrix": function (l, p) {
        var u = [];
        if (n(t(l), new a(0)) !== 0 && n(t(p), new a(0)) !== 0) {
          var o = Re(Array.isArray(l) ? l : l.toArray()).sort(i),
            c = Re(Array.isArray(p) ? p : p.toArray()).sort(i);
          u = [];
          for (var m = 0; m < o.length; m++)
            for (var v = 0; v < c.length; v++) u.push([o[m], c[v]]);
        }
        return Array.isArray(l) && Array.isArray(p) ? u : new s(u);
      },
    });
  }),
  cd = "setDifference",
  t4 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"],
  n4 = F(cd, t4, (e) => {
    var {
      typed: r,
      size: t,
      subset: n,
      compareNatural: i,
      Index: a,
      DenseMatrix: s,
    } = e;
    return r(cd, {
      "Array | Matrix, Array | Matrix": function (l, p) {
        var u;
        if (n(t(l), new a(0)) === 0) u = [];
        else {
          if (n(t(p), new a(0)) === 0) return Re(l.toArray());
          var o = ki(Re(Array.isArray(l) ? l : l.toArray()).sort(i)),
            c = ki(Re(Array.isArray(p) ? p : p.toArray()).sort(i));
          u = [];
          for (var m, v = 0; v < o.length; v++) {
            m = !1;
            for (var d = 0; d < c.length; d++)
              if (
                i(o[v].value, c[d].value) === 0 &&
                o[v].identifier === c[d].identifier
              ) {
                m = !0;
                break;
              }
            m || u.push(o[v]);
          }
        }
        return Array.isArray(l) && Array.isArray(p) ? ps(u) : new s(ps(u));
      },
    });
  }),
  fd = "setDistinct",
  i4 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"],
  a4 = F(fd, i4, (e) => {
    var {
      typed: r,
      size: t,
      subset: n,
      compareNatural: i,
      Index: a,
      DenseMatrix: s,
    } = e;
    return r(fd, {
      "Array | Matrix": function (l) {
        var p;
        if (n(t(l), new a(0)) === 0) p = [];
        else {
          var u = Re(Array.isArray(l) ? l : l.toArray()).sort(i);
          (p = []), p.push(u[0]);
          for (var o = 1; o < u.length; o++)
            i(u[o], u[o - 1]) !== 0 && p.push(u[o]);
        }
        return Array.isArray(l) ? p : new s(p);
      },
    });
  }),
  pd = "setIntersect",
  o4 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"],
  s4 = F(pd, o4, (e) => {
    var {
      typed: r,
      size: t,
      subset: n,
      compareNatural: i,
      Index: a,
      DenseMatrix: s,
    } = e;
    return r(pd, {
      "Array | Matrix, Array | Matrix": function (l, p) {
        var u;
        if (n(t(l), new a(0)) === 0 || n(t(p), new a(0)) === 0) u = [];
        else {
          var o = ki(Re(Array.isArray(l) ? l : l.toArray()).sort(i)),
            c = ki(Re(Array.isArray(p) ? p : p.toArray()).sort(i));
          u = [];
          for (var m = 0; m < o.length; m++)
            for (var v = 0; v < c.length; v++)
              if (
                i(o[m].value, c[v].value) === 0 &&
                o[m].identifier === c[v].identifier
              ) {
                u.push(o[m]);
                break;
              }
        }
        return Array.isArray(l) && Array.isArray(p) ? ps(u) : new s(ps(u));
      },
    });
  }),
  md = "setIsSubset",
  u4 = ["typed", "size", "subset", "compareNatural", "Index"],
  l4 = F(md, u4, (e) => {
    var { typed: r, size: t, subset: n, compareNatural: i, Index: a } = e;
    return r(md, {
      "Array | Matrix, Array | Matrix": function (f, l) {
        if (n(t(f), new a(0)) === 0) return !0;
        if (n(t(l), new a(0)) === 0) return !1;
        for (
          var p = ki(Re(Array.isArray(f) ? f : f.toArray()).sort(i)),
            u = ki(Re(Array.isArray(l) ? l : l.toArray()).sort(i)),
            o,
            c = 0;
          c < p.length;
          c++
        ) {
          o = !1;
          for (var m = 0; m < u.length; m++)
            if (
              i(p[c].value, u[m].value) === 0 &&
              p[c].identifier === u[m].identifier
            ) {
              o = !0;
              break;
            }
          if (o === !1) return !1;
        }
        return !0;
      },
    });
  }),
  vd = "setMultiplicity",
  c4 = ["typed", "size", "subset", "compareNatural", "Index"],
  f4 = F(vd, c4, (e) => {
    var { typed: r, size: t, subset: n, compareNatural: i, Index: a } = e;
    return r(vd, {
      "number | BigNumber | Fraction | Complex, Array | Matrix": function (
        f,
        l
      ) {
        if (n(t(l), new a(0)) === 0) return 0;
        for (
          var p = Re(Array.isArray(l) ? l : l.toArray()), u = 0, o = 0;
          o < p.length;
          o++
        )
          i(p[o], f) === 0 && u++;
        return u;
      },
    });
  }),
  dd = "setPowerset",
  p4 = ["typed", "size", "subset", "compareNatural", "Index"],
  m4 = F(dd, p4, (e) => {
    var { typed: r, size: t, subset: n, compareNatural: i, Index: a } = e;
    return r(dd, {
      "Array | Matrix": function (p) {
        if (n(t(p), new a(0)) === 0) return [];
        for (
          var u = Re(Array.isArray(p) ? p : p.toArray()).sort(i), o = [], c = 0;
          c.toString(2).length <= u.length;

        )
          o.push(s(u, c.toString(2).split("").reverse())), c++;
        return f(o);
      },
    });
    function s(l, p) {
      for (var u = [], o = 0; o < p.length; o++) p[o] === "1" && u.push(l[o]);
      return u;
    }
    function f(l) {
      for (var p = [], u = l.length - 1; u > 0; u--)
        for (var o = 0; o < u; o++)
          l[o].length > l[o + 1].length &&
            ((p = l[o]), (l[o] = l[o + 1]), (l[o + 1] = p));
      return l;
    }
  }),
  hd = "setSize",
  v4 = ["typed", "compareNatural"],
  d4 = F(hd, v4, (e) => {
    var { typed: r, compareNatural: t } = e;
    return r(hd, {
      "Array | Matrix": function (i) {
        return Array.isArray(i) ? Re(i).length : Re(i.toArray()).length;
      },
      "Array | Matrix, boolean": function (i, a) {
        if (a === !1 || i.length === 0)
          return Array.isArray(i) ? Re(i).length : Re(i.toArray()).length;
        for (
          var s = Re(Array.isArray(i) ? i : i.toArray()).sort(t), f = 1, l = 1;
          l < s.length;
          l++
        )
          t(s[l], s[l - 1]) !== 0 && f++;
        return f;
      },
    });
  }),
  gd = "setSymDifference",
  h4 = ["typed", "size", "concat", "subset", "setDifference", "Index"],
  g4 = F(gd, h4, (e) => {
    var {
      typed: r,
      size: t,
      concat: n,
      subset: i,
      setDifference: a,
      Index: s,
    } = e;
    return r(gd, {
      "Array | Matrix, Array | Matrix": function (l, p) {
        if (i(t(l), new s(0)) === 0) return Re(p);
        if (i(t(p), new s(0)) === 0) return Re(l);
        var u = Re(l),
          o = Re(p);
        return n(a(u, o), a(o, u));
      },
    });
  }),
  yd = "setUnion",
  y4 = [
    "typed",
    "size",
    "concat",
    "subset",
    "setIntersect",
    "setSymDifference",
    "Index",
  ],
  x4 = F(yd, y4, (e) => {
    var {
      typed: r,
      size: t,
      concat: n,
      subset: i,
      setIntersect: a,
      setSymDifference: s,
      Index: f,
    } = e;
    return r(yd, {
      "Array | Matrix, Array | Matrix": function (p, u) {
        if (i(t(p), new f(0)) === 0) return Re(u);
        if (i(t(u), new f(0)) === 0) return Re(p);
        var o = Re(p),
          c = Re(u);
        return n(s(o, c), a(o, c));
      },
    });
  }),
  xd = "add",
  w4 = [
    "typed",
    "matrix",
    "addScalar",
    "equalScalar",
    "DenseMatrix",
    "SparseMatrix",
  ],
  b4 = F(xd, w4, (e) => {
    var {
        typed: r,
        matrix: t,
        addScalar: n,
        equalScalar: i,
        DenseMatrix: a,
        SparseMatrix: s,
      } = e,
      f = $n({ typed: r }),
      l = Zc({ typed: r, equalScalar: i }),
      p = ri({ typed: r, DenseMatrix: a }),
      u = Xe({ typed: r }),
      o = ke({ typed: r });
    return r(
      xd,
      Pc(
        {
          "DenseMatrix, DenseMatrix": function (m, v) {
            return u(m, v, n);
          },
          "DenseMatrix, SparseMatrix": function (m, v) {
            return f(m, v, n, !1);
          },
          "SparseMatrix, DenseMatrix": function (m, v) {
            return f(v, m, n, !0);
          },
          "SparseMatrix, SparseMatrix": function (m, v) {
            return l(m, v, n);
          },
          "Array, Array": function (m, v) {
            return this(t(m), t(v)).valueOf();
          },
          "Array, Matrix": function (m, v) {
            return this(t(m), v);
          },
          "Matrix, Array": function (m, v) {
            return this(m, t(v));
          },
          "DenseMatrix, any": function (m, v) {
            return o(m, v, n, !1);
          },
          "SparseMatrix, any": function (m, v) {
            return p(m, v, n, !1);
          },
          "any, DenseMatrix": function (m, v) {
            return o(v, m, n, !0);
          },
          "any, SparseMatrix": function (m, v) {
            return p(v, m, n, !0);
          },
          "Array, any": function (m, v) {
            return o(t(m), v, n, !1).valueOf();
          },
          "any, Array": function (m, v) {
            return o(t(v), m, n, !0).valueOf();
          },
          "any, any": n,
          "any, any, ...any": function (m, v, d) {
            for (var N = this(m, v), g = 0; g < d.length; g++)
              N = this(N, d[g]);
            return N;
          },
        },
        n.signatures
      )
    );
  }),
  wd = "hypot",
  N4 = [
    "typed",
    "abs",
    "addScalar",
    "divideScalar",
    "multiplyScalar",
    "sqrt",
    "smaller",
    "isPositive",
  ],
  M4 = F(wd, N4, (e) => {
    var {
      typed: r,
      abs: t,
      addScalar: n,
      divideScalar: i,
      multiplyScalar: a,
      sqrt: s,
      smaller: f,
      isPositive: l,
    } = e;
    return r(wd, {
      "... number | BigNumber": p,
      Array: function (o) {
        return this.apply(this, Re(o));
      },
      Matrix: function (o) {
        return this.apply(this, Re(o.toArray()));
      },
    });
    function p(u) {
      for (var o = 0, c = 0, m = 0; m < u.length; m++) {
        var v = t(u[m]);
        f(c, v)
          ? ((o = a(o, a(i(c, v), i(c, v)))), (o = n(o, 1)), (c = v))
          : (o = n(o, l(v) ? a(i(v, c), i(v, c)) : v));
      }
      return a(c, s(o));
    }
  }),
  bd = "norm",
  S4 = [
    "typed",
    "abs",
    "add",
    "pow",
    "conj",
    "sqrt",
    "multiply",
    "equalScalar",
    "larger",
    "smaller",
    "matrix",
    "ctranspose",
    "eigs",
  ],
  A4 = F(bd, S4, (e) => {
    var {
      typed: r,
      abs: t,
      add: n,
      pow: i,
      conj: a,
      sqrt: s,
      multiply: f,
      equalScalar: l,
      larger: p,
      smaller: u,
      matrix: o,
      ctranspose: c,
      eigs: m,
    } = e;
    return r(bd, {
      number: Math.abs,
      Complex: function (S) {
        return S.abs();
      },
      BigNumber: function (S) {
        return S.abs();
      },
      boolean: function (S) {
        return Math.abs(S);
      },
      Array: function (S) {
        return y(o(S), 2);
      },
      Matrix: function (S) {
        return y(S, 2);
      },
      "number | Complex | BigNumber | boolean, number | BigNumber | string":
        function (S) {
          return this(S);
        },
      "Array, number | BigNumber | string": function (S, E) {
        return y(o(S), E);
      },
      "Matrix, number | BigNumber | string": function (S, E) {
        return y(S, E);
      },
    });
    function v(A) {
      var S = 0;
      return (
        A.forEach(function (E) {
          var M = t(E);
          p(M, S) && (S = M);
        }, !0),
        S
      );
    }
    function d(A) {
      var S;
      return (
        A.forEach(function (E) {
          var M = t(E);
          (!S || u(M, S)) && (S = M);
        }, !0),
        S || 0
      );
    }
    function N(A, S) {
      if (S === Number.POSITIVE_INFINITY || S === "inf") return v(A);
      if (S === Number.NEGATIVE_INFINITY || S === "-inf") return d(A);
      if (S === "fro") return y(A, 2);
      if (typeof S == "number" && !isNaN(S)) {
        if (!l(S, 0)) {
          var E = 0;
          return (
            A.forEach(function (M) {
              E = n(i(t(M), S), E);
            }, !0),
            i(E, 1 / S)
          );
        }
        return Number.POSITIVE_INFINITY;
      }
      throw new Error("Unsupported parameter value");
    }
    function g(A) {
      var S = 0;
      return (
        A.forEach(function (E, M) {
          S = n(S, f(E, a(E)));
        }),
        t(s(S))
      );
    }
    function w(A) {
      var S = [],
        E = 0;
      return (
        A.forEach(function (M, _) {
          var C = _[1],
            I = n(S[C] || 0, t(M));
          p(I, E) && (E = I), (S[C] = I);
        }, !0),
        E
      );
    }
    function h(A) {
      var S = A.size();
      if (S[0] !== S[1]) throw new RangeError("Invalid matrix dimensions");
      var E = c(A),
        M = f(E, A),
        _ = m(M).values.toArray(),
        C = _[_.length - 1];
      return t(s(C));
    }
    function x(A) {
      var S = [],
        E = 0;
      return (
        A.forEach(function (M, _) {
          var C = _[0],
            I = n(S[C] || 0, t(M));
          p(I, E) && (E = I), (S[C] = I);
        }, !0),
        E
      );
    }
    function b(A, S) {
      if (S === 1) return w(A);
      if (S === Number.POSITIVE_INFINITY || S === "inf") return x(A);
      if (S === "fro") return g(A);
      if (S === 2) return h(A);
      throw new Error("Unsupported parameter value " + S);
    }
    function y(A, S) {
      var E = A.size();
      if (E.length === 1) return N(A, S);
      if (E.length === 2) {
        if (E[0] && E[1]) return b(A, S);
        throw new RangeError("Invalid matrix dimensions");
      }
    }
  }),
  Nd = "dot",
  E4 = ["typed", "addScalar", "multiplyScalar", "conj", "size"],
  C4 = F(Nd, E4, (e) => {
    var { typed: r, addScalar: t, multiplyScalar: n, conj: i, size: a } = e;
    return r(Nd, {
      "Array | DenseMatrix, Array | DenseMatrix": f,
      "SparseMatrix, SparseMatrix": l,
    });
    function s(u, o) {
      var c = p(u),
        m = p(o),
        v,
        d;
      if (c.length === 1) v = c[0];
      else if (c.length === 2 && c[1] === 1) v = c[0];
      else
        throw new RangeError(
          "Expected a column vector, instead got a matrix of size (" +
            c.join(", ") +
            ")"
        );
      if (m.length === 1) d = m[0];
      else if (m.length === 2 && m[1] === 1) d = m[0];
      else
        throw new RangeError(
          "Expected a column vector, instead got a matrix of size (" +
            m.join(", ") +
            ")"
        );
      if (v !== d)
        throw new RangeError(
          "Vectors must have equal length (" + v + " != " + d + ")"
        );
      if (v === 0)
        throw new RangeError(
          "Cannot calculate the dot product of empty vectors"
        );
      return v;
    }
    function f(u, o) {
      var c = s(u, o),
        m = Ae(u) ? u._data : u,
        v = Ae(u) ? u._datatype : void 0,
        d = Ae(o) ? o._data : o,
        N = Ae(o) ? o._datatype : void 0,
        g = p(u).length === 2,
        w = p(o).length === 2,
        h = t,
        x = n;
      if (v && N && v === N && typeof v == "string") {
        var b = v;
        (h = r.find(t, [b, b])), (x = r.find(n, [b, b]));
      }
      if (!g && !w) {
        for (var y = x(i(m[0]), d[0]), A = 1; A < c; A++)
          y = h(y, x(i(m[A]), d[A]));
        return y;
      }
      if (!g && w) {
        for (var S = x(i(m[0]), d[0][0]), E = 1; E < c; E++)
          S = h(S, x(i(m[E]), d[E][0]));
        return S;
      }
      if (g && !w) {
        for (var M = x(i(m[0][0]), d[0]), _ = 1; _ < c; _++)
          M = h(M, x(i(m[_][0]), d[_]));
        return M;
      }
      if (g && w) {
        for (var C = x(i(m[0][0]), d[0][0]), I = 1; I < c; I++)
          C = h(C, x(i(m[I][0]), d[I][0]));
        return C;
      }
    }
    function l(u, o) {
      s(u, o);
      for (
        var c = u._index,
          m = u._values,
          v = o._index,
          d = o._values,
          N = 0,
          g = t,
          w = n,
          h = 0,
          x = 0;
        h < c.length && x < v.length;

      ) {
        var b = c[h],
          y = v[x];
        if (b < y) {
          h++;
          continue;
        }
        if (b > y) {
          x++;
          continue;
        }
        b === y && ((N = g(N, w(m[h], d[x]))), h++, x++);
      }
      return N;
    }
    function p(u) {
      return Ae(u) ? u.size() : a(u);
    }
  }),
  O4 = "trace",
  T4 = ["typed", "matrix", "add"],
  D4 = F(O4, T4, (e) => {
    var { typed: r, matrix: t, add: n } = e;
    return r("trace", {
      Array: function (f) {
        return i(t(f));
      },
      SparseMatrix: a,
      DenseMatrix: i,
      any: Me,
    });
    function i(s) {
      var f = s._size,
        l = s._data;
      switch (f.length) {
        case 1:
          if (f[0] === 1) return Me(l[0]);
          throw new RangeError("Matrix must be square (size: " + _e(f) + ")");
        case 2: {
          var p = f[0],
            u = f[1];
          if (p === u) {
            for (var o = 0, c = 0; c < p; c++) o = n(o, l[c][c]);
            return o;
          } else
            throw new RangeError("Matrix must be square (size: " + _e(f) + ")");
        }
        default:
          throw new RangeError(
            "Matrix must be two dimensional (size: " + _e(f) + ")"
          );
      }
    }
    function a(s) {
      var f = s._values,
        l = s._index,
        p = s._ptr,
        u = s._size,
        o = u[0],
        c = u[1];
      if (o === c) {
        var m = 0;
        if (f.length > 0)
          for (var v = 0; v < c; v++)
            for (var d = p[v], N = p[v + 1], g = d; g < N; g++) {
              var w = l[g];
              if (w === v) {
                m = n(m, f[g]);
                break;
              }
              if (w > v) break;
            }
        return m;
      }
      throw new RangeError("Matrix must be square (size: " + _e(u) + ")");
    }
  }),
  Md = "index",
  _4 = ["typed", "Index"],
  B4 = F(Md, _4, (e) => {
    var { typed: r, Index: t } = e;
    return r(Md, {
      "...number | string | BigNumber | Range | Array | Matrix": function (i) {
        var a = i.map(function (f) {
            return Be(f)
              ? f.toNumber()
              : Array.isArray(f) || Ae(f)
              ? f.map(function (l) {
                  return Be(l) ? l.toNumber() : l;
                })
              : f;
          }),
          s = new t();
        return t.apply(s, a), s;
      },
    });
  }),
  $1 = new Set(["end"]),
  I4 = "Node",
  $4 = ["mathWithTransform"],
  z4 = F(
    I4,
    $4,
    (e) => {
      var { mathWithTransform: r } = e;
      function t() {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
      }
      (t.prototype.evaluate = function (i) {
        return this.compile().evaluate(i);
      }),
        (t.prototype.type = "Node"),
        (t.prototype.isNode = !0),
        (t.prototype.comment = ""),
        (t.prototype.compile = function () {
          var i = this._compile(r, {}),
            a = {},
            s = null;
          function f(l) {
            var p = Hc(l);
            return n(p), i(p, a, s);
          }
          return { evaluate: f };
        }),
        (t.prototype._compile = function (i, a) {
          throw new Error(
            "Method _compile should be implemented by type " + this.type
          );
        }),
        (t.prototype.forEach = function (i) {
          throw new Error("Cannot run forEach on a Node interface");
        }),
        (t.prototype.map = function (i) {
          throw new Error("Cannot run map on a Node interface");
        }),
        (t.prototype._ifNode = function (i) {
          if (!Le(i))
            throw new TypeError("Callback function must return a Node");
          return i;
        }),
        (t.prototype.traverse = function (i) {
          i(this, null, null);
          function a(s, f) {
            s.forEach(function (l, p, u) {
              f(l, p, u), a(l, f);
            });
          }
          a(this, i);
        }),
        (t.prototype.transform = function (i) {
          function a(s, f, l) {
            var p = i(s, f, l);
            return p !== s ? p : s.map(a);
          }
          return a(this, null, null);
        }),
        (t.prototype.filter = function (i) {
          var a = [];
          return (
            this.traverse(function (s, f, l) {
              i(s, f, l) && a.push(s);
            }),
            a
          );
        }),
        (t.prototype.clone = function () {
          throw new Error("Cannot clone a Node interface");
        }),
        (t.prototype.cloneDeep = function () {
          return this.map(function (i) {
            return i.cloneDeep();
          });
        }),
        (t.prototype.equals = function (i) {
          return i ? Va(this, i) : !1;
        }),
        (t.prototype.toString = function (i) {
          var a = this._getCustomString(i);
          return typeof a != "undefined" ? a : this._toString(i);
        }),
        (t.prototype.toJSON = function () {
          throw new Error(
            "Cannot serialize object: toJSON not implemented by " + this.type
          );
        }),
        (t.prototype.toHTML = function (i) {
          var a = this._getCustomString(i);
          return typeof a != "undefined" ? a : this.toHTML(i);
        }),
        (t.prototype._toString = function () {
          throw new Error("_toString not implemented for " + this.type);
        }),
        (t.prototype.toTex = function (i) {
          var a = this._getCustomString(i);
          return typeof a != "undefined" ? a : this._toTex(i);
        }),
        (t.prototype._toTex = function (i) {
          throw new Error("_toTex not implemented for " + this.type);
        }),
        (t.prototype._getCustomString = function (i) {
          if (i && typeof i == "object")
            switch (typeof i.handler) {
              case "object":
              case "undefined":
                return;
              case "function":
                return i.handler(this, i);
              default:
                throw new TypeError("Object or function expected as callback");
            }
        }),
        (t.prototype.getIdentifier = function () {
          return this.type;
        }),
        (t.prototype.getContent = function () {
          return this;
        });
      function n(i) {
        for (var a of [...$1])
          if (i.has(a))
            throw new Error(
              'Scope contains an illegal symbol, "' +
                a +
                '" is a reserved keyword'
            );
      }
      return t;
    },
    { isClass: !0, isNode: !0 }
  );
function kr(e) {
  return e && e.isIndexError
    ? new vt(e.index + 1, e.min + 1, e.max !== void 0 ? e.max + 1 : void 0)
    : e;
}
function z1(e) {
  var { subset: r } = e;
  return function (n, i) {
    try {
      if (Array.isArray(n)) return r(n, i);
      if (n && typeof n.subset == "function") return n.subset(i);
      if (typeof n == "string") return r(n, i);
      if (typeof n == "object") {
        if (!i.isObjectProperty())
          throw new TypeError(
            "Cannot apply a numeric index as object property"
          );
        return mt(n, i.getObjectProperty());
      } else
        throw new TypeError("Cannot apply index: unsupported type of object");
    } catch (a) {
      throw kr(a);
    }
  };
}
var R4 = "AccessorNode",
  F4 = ["subset", "Node"],
  P4 = F(
    R4,
    F4,
    (e) => {
      var { subset: r, Node: t } = e,
        n = z1({ subset: r });
      function i(s, f) {
        if (!(this instanceof i))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (!Le(s)) throw new TypeError('Node expected for parameter "object"');
        if (!Kn(f))
          throw new TypeError('IndexNode expected for parameter "index"');
        (this.object = s || null),
          (this.index = f),
          Object.defineProperty(this, "name", {
            get: function () {
              return this.index
                ? this.index.isObjectProperty()
                  ? this.index.getObjectProperty()
                  : ""
                : this.object.name || "";
            }.bind(this),
            set: function () {
              throw new Error("Cannot assign a new name, name is read-only");
            },
          });
      }
      (i.prototype = new t()),
        (i.prototype.type = "AccessorNode"),
        (i.prototype.isAccessorNode = !0),
        (i.prototype._compile = function (s, f) {
          var l = this.object._compile(s, f),
            p = this.index._compile(s, f);
          if (this.index.isObjectProperty()) {
            var u = this.index.getObjectProperty();
            return function (c, m, v) {
              return mt(l(c, m, v), u);
            };
          } else
            return function (c, m, v) {
              var d = l(c, m, v),
                N = p(c, m, d);
              return n(d, N);
            };
        }),
        (i.prototype.forEach = function (s) {
          s(this.object, "object", this), s(this.index, "index", this);
        }),
        (i.prototype.map = function (s) {
          return new i(
            this._ifNode(s(this.object, "object", this)),
            this._ifNode(s(this.index, "index", this))
          );
        }),
        (i.prototype.clone = function () {
          return new i(this.object, this.index);
        }),
        (i.prototype._toString = function (s) {
          var f = this.object.toString(s);
          return (
            a(this.object) && (f = "(" + f + ")"), f + this.index.toString(s)
          );
        }),
        (i.prototype.toHTML = function (s) {
          var f = this.object.toHTML(s);
          return (
            a(this.object) &&
              (f =
                '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                f +
                '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            f + this.index.toHTML(s)
          );
        }),
        (i.prototype._toTex = function (s) {
          var f = this.object.toTex(s);
          return (
            a(this.object) && (f = "\\left(' + object + '\\right)"),
            f + this.index.toTex(s)
          );
        }),
        (i.prototype.toJSON = function () {
          return {
            mathjs: "AccessorNode",
            object: this.object,
            index: this.index,
          };
        }),
        (i.fromJSON = function (s) {
          return new i(s.object, s.index);
        });
      function a(s) {
        return !(Sn(s) || Xr(s) || Ve(s) || An(s) || eo(s) || Yi(s) || gr(s));
      }
      return i;
    },
    { isClass: !0, isNode: !0 }
  ),
  L4 = "ArrayNode",
  k4 = ["Node"],
  U4 = F(
    L4,
    k4,
    (e) => {
      var { Node: r } = e;
      function t(n) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (
          ((this.items = n || []),
          !Array.isArray(this.items) || !this.items.every(Le))
        )
          throw new TypeError("Array containing Nodes expected");
      }
      return (
        (t.prototype = new r()),
        (t.prototype.type = "ArrayNode"),
        (t.prototype.isArrayNode = !0),
        (t.prototype._compile = function (n, i) {
          var a = Zt(this.items, function (l) {
              return l._compile(n, i);
            }),
            s = n.config.matrix !== "Array";
          if (s) {
            var f = n.matrix;
            return function (p, u, o) {
              return f(
                Zt(a, function (c) {
                  return c(p, u, o);
                })
              );
            };
          } else
            return function (p, u, o) {
              return Zt(a, function (c) {
                return c(p, u, o);
              });
            };
        }),
        (t.prototype.forEach = function (n) {
          for (var i = 0; i < this.items.length; i++) {
            var a = this.items[i];
            n(a, "items[" + i + "]", this);
          }
        }),
        (t.prototype.map = function (n) {
          for (var i = [], a = 0; a < this.items.length; a++)
            i[a] = this._ifNode(n(this.items[a], "items[" + a + "]", this));
          return new t(i);
        }),
        (t.prototype.clone = function () {
          return new t(this.items.slice(0));
        }),
        (t.prototype._toString = function (n) {
          var i = this.items.map(function (a) {
            return a.toString(n);
          });
          return "[" + i.join(", ") + "]";
        }),
        (t.prototype.toJSON = function () {
          return { mathjs: "ArrayNode", items: this.items };
        }),
        (t.fromJSON = function (n) {
          return new t(n.items);
        }),
        (t.prototype.toHTML = function (n) {
          var i = this.items.map(function (a) {
            return a.toHTML(n);
          });
          return (
            '<span class="math-parenthesis math-square-parenthesis">[</span>' +
            i.join('<span class="math-separator">,</span>') +
            '<span class="math-parenthesis math-square-parenthesis">]</span>'
          );
        }),
        (t.prototype._toTex = function (n) {
          function i(a, s) {
            var f = a.some(Xr) && !a.every(Xr),
              l = s || f,
              p = l ? "&" : "\\\\",
              u = a
                .map(function (o) {
                  return o.items ? i(o.items, !s) : o.toTex(n);
                })
                .join(p);
            return f || !l || (l && !s)
              ? "\\begin{bmatrix}" + u + "\\end{bmatrix}"
              : u;
          }
          return i(this.items, !1);
        }),
        t
      );
    },
    { isClass: !0, isNode: !0 }
  );
function q4(e) {
  var { subset: r, matrix: t } = e;
  return function (i, a, s) {
    try {
      if (Array.isArray(i)) return t(i).subset(a, s).valueOf();
      if (i && typeof i.subset == "function") return i.subset(a, s);
      if (typeof i == "string") return r(i, a, s);
      if (typeof i == "object") {
        if (!a.isObjectProperty())
          throw TypeError("Cannot apply a numeric index as object property");
        return Ui(i, a.getObjectProperty(), s), i;
      } else
        throw new TypeError("Cannot apply index: unsupported type of object");
    } catch (f) {
      throw kr(f);
    }
  };
}
var Dt = [
  { AssignmentNode: {}, FunctionAssignmentNode: {} },
  {
    ConditionalNode: {
      latexLeftParens: !1,
      latexRightParens: !1,
      latexParens: !1,
    },
  },
  { "OperatorNode:or": { associativity: "left", associativeWith: [] } },
  { "OperatorNode:xor": { associativity: "left", associativeWith: [] } },
  { "OperatorNode:and": { associativity: "left", associativeWith: [] } },
  { "OperatorNode:bitOr": { associativity: "left", associativeWith: [] } },
  { "OperatorNode:bitXor": { associativity: "left", associativeWith: [] } },
  { "OperatorNode:bitAnd": { associativity: "left", associativeWith: [] } },
  {
    "OperatorNode:equal": { associativity: "left", associativeWith: [] },
    "OperatorNode:unequal": { associativity: "left", associativeWith: [] },
    "OperatorNode:smaller": { associativity: "left", associativeWith: [] },
    "OperatorNode:larger": { associativity: "left", associativeWith: [] },
    "OperatorNode:smallerEq": { associativity: "left", associativeWith: [] },
    "OperatorNode:largerEq": { associativity: "left", associativeWith: [] },
    RelationalNode: { associativity: "left", associativeWith: [] },
  },
  {
    "OperatorNode:leftShift": { associativity: "left", associativeWith: [] },
    "OperatorNode:rightArithShift": {
      associativity: "left",
      associativeWith: [],
    },
    "OperatorNode:rightLogShift": {
      associativity: "left",
      associativeWith: [],
    },
  },
  { "OperatorNode:to": { associativity: "left", associativeWith: [] } },
  { RangeNode: {} },
  {
    "OperatorNode:add": {
      associativity: "left",
      associativeWith: ["OperatorNode:add", "OperatorNode:subtract"],
    },
    "OperatorNode:subtract": { associativity: "left", associativeWith: [] },
  },
  {
    "OperatorNode:multiply": {
      associativity: "left",
      associativeWith: [
        "OperatorNode:multiply",
        "OperatorNode:divide",
        "Operator:dotMultiply",
        "Operator:dotDivide",
      ],
    },
    "OperatorNode:divide": {
      associativity: "left",
      associativeWith: [],
      latexLeftParens: !1,
      latexRightParens: !1,
      latexParens: !1,
    },
    "OperatorNode:dotMultiply": {
      associativity: "left",
      associativeWith: [
        "OperatorNode:multiply",
        "OperatorNode:divide",
        "OperatorNode:dotMultiply",
        "OperatorNode:doDivide",
      ],
    },
    "OperatorNode:dotDivide": { associativity: "left", associativeWith: [] },
    "OperatorNode:mod": { associativity: "left", associativeWith: [] },
  },
  {
    "OperatorNode:unaryPlus": { associativity: "right" },
    "OperatorNode:unaryMinus": { associativity: "right" },
    "OperatorNode:bitNot": { associativity: "right" },
    "OperatorNode:not": { associativity: "right" },
  },
  {
    "OperatorNode:pow": {
      associativity: "right",
      associativeWith: [],
      latexRightParens: !1,
    },
    "OperatorNode:dotPow": { associativity: "right", associativeWith: [] },
  },
  { "OperatorNode:factorial": { associativity: "left" } },
  { "OperatorNode:transpose": { associativity: "left" } },
];
function Ze(e, r) {
  var t = e;
  r !== "keep" && (t = e.getContent());
  for (var n = t.getIdentifier(), i = 0; i < Dt.length; i++)
    if (n in Dt[i]) return i;
  return null;
}
function sa(e, r) {
  var t = e;
  r !== "keep" && (t = e.getContent());
  var n = t.getIdentifier(),
    i = Ze(t, r);
  if (i === null) return null;
  var a = Dt[i][n];
  if (ge(a, "associativity")) {
    if (a.associativity === "left") return "left";
    if (a.associativity === "right") return "right";
    throw Error(
      "'" + n + "' has the invalid associativity '" + a.associativity + "'."
    );
  }
  return null;
}
function Bu(e, r, t) {
  var n = t !== "keep" ? e.getContent() : e,
    i = t !== "keep" ? e.getContent() : r,
    a = n.getIdentifier(),
    s = i.getIdentifier(),
    f = Ze(n, t);
  if (f === null) return null;
  var l = Dt[f][a];
  if (ge(l, "associativeWith") && l.associativeWith instanceof Array) {
    for (var p = 0; p < l.associativeWith.length; p++)
      if (l.associativeWith[p] === s) return !0;
    return !1;
  }
  return null;
}
var H4 = "AssignmentNode",
  V4 = ["subset", "?matrix", "Node"],
  G4 = F(
    H4,
    V4,
    (e) => {
      var { subset: r, matrix: t, Node: n } = e,
        i = z1({ subset: r }),
        a = q4({ subset: r, matrix: t });
      function s(l, p, u) {
        if (!(this instanceof s))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (
          ((this.object = l),
          (this.index = u ? p : null),
          (this.value = u || p),
          !gr(l) && !Sn(l))
        )
          throw new TypeError(
            'SymbolNode or AccessorNode expected as "object"'
          );
        if (gr(l) && l.name === "end")
          throw new Error('Cannot assign to symbol "end"');
        if (this.index && !Kn(this.index))
          throw new TypeError('IndexNode expected as "index"');
        if (!Le(this.value)) throw new TypeError('Node expected as "value"');
        Object.defineProperty(this, "name", {
          get: function () {
            return this.index
              ? this.index.isObjectProperty()
                ? this.index.getObjectProperty()
                : ""
              : this.object.name || "";
          }.bind(this),
          set: function () {
            throw new Error("Cannot assign a new name, name is read-only");
          },
        });
      }
      (s.prototype = new n()),
        (s.prototype.type = "AssignmentNode"),
        (s.prototype.isAssignmentNode = !0),
        (s.prototype._compile = function (l, p) {
          var u = this.object._compile(l, p),
            o = this.index ? this.index._compile(l, p) : null,
            c = this.value._compile(l, p),
            m = this.object.name;
          if (this.index)
            if (this.index.isObjectProperty()) {
              var v = this.index.getObjectProperty();
              return function (h, x, b) {
                var y = u(h, x, b),
                  A = c(h, x, b);
                return Ui(y, v, A), A;
              };
            } else {
              if (gr(this.object))
                return function (h, x, b) {
                  var y = u(h, x, b),
                    A = c(h, x, b),
                    S = o(h, x, y);
                  return h.set(m, a(y, S, A)), A;
                };
              var d = this.object.object._compile(l, p);
              if (this.object.index.isObjectProperty()) {
                var N = this.object.index.getObjectProperty();
                return function (h, x, b) {
                  var y = d(h, x, b),
                    A = mt(y, N),
                    S = o(h, x, A),
                    E = c(h, x, b);
                  return Ui(y, N, a(A, S, E)), E;
                };
              } else {
                var g = this.object.index._compile(l, p);
                return function (h, x, b) {
                  var y = d(h, x, b),
                    A = g(h, x, y),
                    S = i(y, A),
                    E = o(h, x, S),
                    M = c(h, x, b);
                  return a(y, A, a(S, E, M)), M;
                };
              }
            }
          else {
            if (!gr(this.object))
              throw new TypeError("SymbolNode expected as object");
            return function (h, x, b) {
              var y = c(h, x, b);
              return h.set(m, y), y;
            };
          }
        }),
        (s.prototype.forEach = function (l) {
          l(this.object, "object", this),
            this.index && l(this.index, "index", this),
            l(this.value, "value", this);
        }),
        (s.prototype.map = function (l) {
          var p = this._ifNode(l(this.object, "object", this)),
            u = this.index ? this._ifNode(l(this.index, "index", this)) : null,
            o = this._ifNode(l(this.value, "value", this));
          return new s(p, u, o);
        }),
        (s.prototype.clone = function () {
          return new s(this.object, this.index, this.value);
        });
      function f(l, p) {
        p || (p = "keep");
        var u = Ze(l, p),
          o = Ze(l.value, p);
        return p === "all" || (o !== null && o <= u);
      }
      return (
        (s.prototype._toString = function (l) {
          var p = this.object.toString(l),
            u = this.index ? this.index.toString(l) : "",
            o = this.value.toString(l);
          return (
            f(this, l && l.parenthesis) && (o = "(" + o + ")"),
            p + u + " = " + o
          );
        }),
        (s.prototype.toJSON = function () {
          return {
            mathjs: "AssignmentNode",
            object: this.object,
            index: this.index,
            value: this.value,
          };
        }),
        (s.fromJSON = function (l) {
          return new s(l.object, l.index, l.value);
        }),
        (s.prototype.toHTML = function (l) {
          var p = this.object.toHTML(l),
            u = this.index ? this.index.toHTML(l) : "",
            o = this.value.toHTML(l);
          return (
            f(this, l && l.parenthesis) &&
              (o =
                '<span class="math-paranthesis math-round-parenthesis">(</span>' +
                o +
                '<span class="math-paranthesis math-round-parenthesis">)</span>'),
            p +
              u +
              '<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' +
              o
          );
        }),
        (s.prototype._toTex = function (l) {
          var p = this.object.toTex(l),
            u = this.index ? this.index.toTex(l) : "",
            o = this.value.toTex(l);
          return (
            f(this, l && l.parenthesis) &&
              (o = "\\left(".concat(o, "\\right)")),
            p + u + ":=" + o
          );
        }),
        s
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  W4 = "BlockNode",
  Z4 = ["ResultSet", "Node"],
  Q4 = F(
    W4,
    Z4,
    (e) => {
      var { ResultSet: r, Node: t } = e;
      function n(i) {
        if (!(this instanceof n))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (!Array.isArray(i)) throw new Error("Array expected");
        this.blocks = i.map(function (a) {
          var s = a && a.node,
            f = a && a.visible !== void 0 ? a.visible : !0;
          if (!Le(s)) throw new TypeError('Property "node" must be a Node');
          if (typeof f != "boolean")
            throw new TypeError('Property "visible" must be a boolean');
          return { node: s, visible: f };
        });
      }
      return (
        (n.prototype = new t()),
        (n.prototype.type = "BlockNode"),
        (n.prototype.isBlockNode = !0),
        (n.prototype._compile = function (i, a) {
          var s = Zt(this.blocks, function (f) {
            return { evaluate: f.node._compile(i, a), visible: f.visible };
          });
          return function (l, p, u) {
            var o = [];
            return (
              Us(s, function (m) {
                var v = m.evaluate(l, p, u);
                m.visible && o.push(v);
              }),
              new r(o)
            );
          };
        }),
        (n.prototype.forEach = function (i) {
          for (var a = 0; a < this.blocks.length; a++)
            i(this.blocks[a].node, "blocks[" + a + "].node", this);
        }),
        (n.prototype.map = function (i) {
          for (var a = [], s = 0; s < this.blocks.length; s++) {
            var f = this.blocks[s],
              l = this._ifNode(i(f.node, "blocks[" + s + "].node", this));
            a[s] = { node: l, visible: f.visible };
          }
          return new n(a);
        }),
        (n.prototype.clone = function () {
          var i = this.blocks.map(function (a) {
            return { node: a.node, visible: a.visible };
          });
          return new n(i);
        }),
        (n.prototype._toString = function (i) {
          return this.blocks.map(function (a) {
            return a.node.toString(i) + (a.visible ? "" : ";");
          }).join(`
`);
        }),
        (n.prototype.toJSON = function () {
          return { mathjs: "BlockNode", blocks: this.blocks };
        }),
        (n.fromJSON = function (i) {
          return new n(i.blocks);
        }),
        (n.prototype.toHTML = function (i) {
          return this.blocks
            .map(function (a) {
              return (
                a.node.toHTML(i) +
                (a.visible ? "" : '<span class="math-separator">;</span>')
              );
            })
            .join('<span class="math-separator"><br /></span>');
        }),
        (n.prototype._toTex = function (i) {
          return this.blocks.map(function (a) {
            return a.node.toTex(i) + (a.visible ? "" : ";");
          }).join(`\\;\\;
`);
        }),
        n
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  Y4 = "ConditionalNode",
  X4 = ["Node"],
  j4 = F(
    Y4,
    X4,
    (e) => {
      var { Node: r } = e;
      function t(i, a, s) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (!Le(i)) throw new TypeError("Parameter condition must be a Node");
        if (!Le(a)) throw new TypeError("Parameter trueExpr must be a Node");
        if (!Le(s)) throw new TypeError("Parameter falseExpr must be a Node");
        (this.condition = i), (this.trueExpr = a), (this.falseExpr = s);
      }
      (t.prototype = new r()),
        (t.prototype.type = "ConditionalNode"),
        (t.prototype.isConditionalNode = !0),
        (t.prototype._compile = function (i, a) {
          var s = this.condition._compile(i, a),
            f = this.trueExpr._compile(i, a),
            l = this.falseExpr._compile(i, a);
          return function (u, o, c) {
            return n(s(u, o, c)) ? f(u, o, c) : l(u, o, c);
          };
        }),
        (t.prototype.forEach = function (i) {
          i(this.condition, "condition", this),
            i(this.trueExpr, "trueExpr", this),
            i(this.falseExpr, "falseExpr", this);
        }),
        (t.prototype.map = function (i) {
          return new t(
            this._ifNode(i(this.condition, "condition", this)),
            this._ifNode(i(this.trueExpr, "trueExpr", this)),
            this._ifNode(i(this.falseExpr, "falseExpr", this))
          );
        }),
        (t.prototype.clone = function () {
          return new t(this.condition, this.trueExpr, this.falseExpr);
        }),
        (t.prototype._toString = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = Ze(this, a),
            f = this.condition.toString(i),
            l = Ze(this.condition, a);
          (a === "all" ||
            this.condition.type === "OperatorNode" ||
            (l !== null && l <= s)) &&
            (f = "(" + f + ")");
          var p = this.trueExpr.toString(i),
            u = Ze(this.trueExpr, a);
          (a === "all" ||
            this.trueExpr.type === "OperatorNode" ||
            (u !== null && u <= s)) &&
            (p = "(" + p + ")");
          var o = this.falseExpr.toString(i),
            c = Ze(this.falseExpr, a);
          return (
            (a === "all" ||
              this.falseExpr.type === "OperatorNode" ||
              (c !== null && c <= s)) &&
              (o = "(" + o + ")"),
            f + " ? " + p + " : " + o
          );
        }),
        (t.prototype.toJSON = function () {
          return {
            mathjs: "ConditionalNode",
            condition: this.condition,
            trueExpr: this.trueExpr,
            falseExpr: this.falseExpr,
          };
        }),
        (t.fromJSON = function (i) {
          return new t(i.condition, i.trueExpr, i.falseExpr);
        }),
        (t.prototype.toHTML = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = Ze(this, a),
            f = this.condition.toHTML(i),
            l = Ze(this.condition, a);
          (a === "all" ||
            this.condition.type === "OperatorNode" ||
            (l !== null && l <= s)) &&
            (f =
              '<span class="math-parenthesis math-round-parenthesis">(</span>' +
              f +
              '<span class="math-parenthesis math-round-parenthesis">)</span>');
          var p = this.trueExpr.toHTML(i),
            u = Ze(this.trueExpr, a);
          (a === "all" ||
            this.trueExpr.type === "OperatorNode" ||
            (u !== null && u <= s)) &&
            (p =
              '<span class="math-parenthesis math-round-parenthesis">(</span>' +
              p +
              '<span class="math-parenthesis math-round-parenthesis">)</span>');
          var o = this.falseExpr.toHTML(i),
            c = Ze(this.falseExpr, a);
          return (
            (a === "all" ||
              this.falseExpr.type === "OperatorNode" ||
              (c !== null && c <= s)) &&
              (o =
                '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                o +
                '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            f +
              '<span class="math-operator math-conditional-operator">?</span>' +
              p +
              '<span class="math-operator math-conditional-operator">:</span>' +
              o
          );
        }),
        (t.prototype._toTex = function (i) {
          return (
            "\\begin{cases} {" +
            this.trueExpr.toTex(i) +
            "}, &\\quad{\\text{if }\\;" +
            this.condition.toTex(i) +
            "}\\\\{" +
            this.falseExpr.toTex(i) +
            "}, &\\quad{\\text{otherwise}}\\end{cases}"
          );
        });
      function n(i) {
        if (
          typeof i == "number" ||
          typeof i == "boolean" ||
          typeof i == "string"
        )
          return !!i;
        if (i) {
          if (Be(i)) return !i.isZero();
          if (Nt(i)) return !!(i.re || i.im);
          if (jn(i)) return !!i.value;
        }
        if (i == null) return !1;
        throw new TypeError('Unsupported type of condition "' + Ye(i) + '"');
      }
      return t;
    },
    { isClass: !0, isNode: !0 }
  ),
  Ll =
    Object.assign ||
    function (e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = arguments[r];
        for (var n in t)
          Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
      }
      return e;
    },
  J4 = {
    "{": "\\{",
    "}": "\\}",
    "\\": "\\textbackslash{}",
    "#": "\\#",
    $: "\\$",
    "%": "\\%",
    "&": "\\&",
    "^": "\\textasciicircum{}",
    _: "\\_",
    "~": "\\textasciitilde{}",
  },
  K4 = {
    "\u2013": "\\--",
    "\u2014": "\\---",
    " ": "~",
    "	": "\\qquad{}",
    "\r\n": "\\newline{}",
    "\n": "\\newline{}",
  },
  eT = function (r, t) {
    return Ll({}, r, t);
  },
  rT = function (e) {
    for (
      var r =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        t = r.preserveFormatting,
        n = t === void 0 ? !1 : t,
        i = r.escapeMapFn,
        a = i === void 0 ? eT : i,
        s = String(e),
        f = "",
        l = a(Ll({}, J4), n ? Ll({}, K4) : {}),
        p = Object.keys(l),
        u = function () {
          var c = !1;
          p.forEach(function (m, v) {
            c ||
              (s.length >= m.length &&
                s.slice(0, m.length) === m &&
                ((f += l[p[v]]), (s = s.slice(m.length, s.length)), (c = !0)));
          }),
            c || ((f += s.slice(0, 1)), (s = s.slice(1, s.length)));
        };
      s;

    )
      u();
    return f;
  },
  tT = rT,
  kl = {
    Alpha: "A",
    alpha: "\\alpha",
    Beta: "B",
    beta: "\\beta",
    Gamma: "\\Gamma",
    gamma: "\\gamma",
    Delta: "\\Delta",
    delta: "\\delta",
    Epsilon: "E",
    epsilon: "\\epsilon",
    varepsilon: "\\varepsilon",
    Zeta: "Z",
    zeta: "\\zeta",
    Eta: "H",
    eta: "\\eta",
    Theta: "\\Theta",
    theta: "\\theta",
    vartheta: "\\vartheta",
    Iota: "I",
    iota: "\\iota",
    Kappa: "K",
    kappa: "\\kappa",
    varkappa: "\\varkappa",
    Lambda: "\\Lambda",
    lambda: "\\lambda",
    Mu: "M",
    mu: "\\mu",
    Nu: "N",
    nu: "\\nu",
    Xi: "\\Xi",
    xi: "\\xi",
    Omicron: "O",
    omicron: "o",
    Pi: "\\Pi",
    pi: "\\pi",
    varpi: "\\varpi",
    Rho: "P",
    rho: "\\rho",
    varrho: "\\varrho",
    Sigma: "\\Sigma",
    sigma: "\\sigma",
    varsigma: "\\varsigma",
    Tau: "T",
    tau: "\\tau",
    Upsilon: "\\Upsilon",
    upsilon: "\\upsilon",
    Phi: "\\Phi",
    phi: "\\phi",
    varphi: "\\varphi",
    Chi: "X",
    chi: "\\chi",
    Psi: "\\Psi",
    psi: "\\psi",
    Omega: "\\Omega",
    omega: "\\omega",
    true: "\\mathrm{True}",
    false: "\\mathrm{False}",
    i: "i",
    inf: "\\infty",
    Inf: "\\infty",
    infinity: "\\infty",
    Infinity: "\\infty",
    oo: "\\infty",
    lim: "\\lim",
    undefined: "\\mathbf{?}",
  },
  Pe = {
    transpose: "^\\top",
    ctranspose: "^H",
    factorial: "!",
    pow: "^",
    dotPow: ".^\\wedge",
    unaryPlus: "+",
    unaryMinus: "-",
    bitNot: "\\~",
    not: "\\neg",
    multiply: "\\cdot",
    divide: "\\frac",
    dotMultiply: ".\\cdot",
    dotDivide: ".:",
    mod: "\\mod",
    add: "+",
    subtract: "-",
    to: "\\rightarrow",
    leftShift: "<<",
    rightArithShift: ">>",
    rightLogShift: ">>>",
    equal: "=",
    unequal: "\\neq",
    smaller: "<",
    larger: ">",
    smallerEq: "\\leq",
    largerEq: "\\geq",
    bitAnd: "\\&",
    bitXor: "\\underline{|}",
    bitOr: "|",
    and: "\\wedge",
    xor: "\\veebar",
    or: "\\vee",
  },
  Sd = {
    abs: { 1: "\\left|${args[0]}\\right|" },
    add: { 2: "\\left(${args[0]}".concat(Pe.add, "${args[1]}\\right)") },
    cbrt: { 1: "\\sqrt[3]{${args[0]}}" },
    ceil: { 1: "\\left\\lceil${args[0]}\\right\\rceil" },
    cube: { 1: "\\left(${args[0]}\\right)^3" },
    divide: { 2: "\\frac{${args[0]}}{${args[1]}}" },
    dotDivide: {
      2: "\\left(${args[0]}".concat(Pe.dotDivide, "${args[1]}\\right)"),
    },
    dotMultiply: {
      2: "\\left(${args[0]}".concat(Pe.dotMultiply, "${args[1]}\\right)"),
    },
    dotPow: { 2: "\\left(${args[0]}".concat(Pe.dotPow, "${args[1]}\\right)") },
    exp: { 1: "\\exp\\left(${args[0]}\\right)" },
    expm1: "\\left(e".concat(Pe.pow, "{${args[0]}}-1\\right)"),
    fix: { 1: "\\mathrm{${name}}\\left(${args[0]}\\right)" },
    floor: { 1: "\\left\\lfloor${args[0]}\\right\\rfloor" },
    gcd: "\\gcd\\left(${args}\\right)",
    hypot: "\\hypot\\left(${args}\\right)",
    log: {
      1: "\\ln\\left(${args[0]}\\right)",
      2: "\\log_{${args[1]}}\\left(${args[0]}\\right)",
    },
    log10: { 1: "\\log_{10}\\left(${args[0]}\\right)" },
    log1p: {
      1: "\\ln\\left(${args[0]}+1\\right)",
      2: "\\log_{${args[1]}}\\left(${args[0]}+1\\right)",
    },
    log2: "\\log_{2}\\left(${args[0]}\\right)",
    mod: { 2: "\\left(${args[0]}".concat(Pe.mod, "${args[1]}\\right)") },
    multiply: {
      2: "\\left(${args[0]}".concat(Pe.multiply, "${args[1]}\\right)"),
    },
    norm: { 1: "\\left\\|${args[0]}\\right\\|", 2: void 0 },
    nthRoot: { 2: "\\sqrt[${args[1]}]{${args[0]}}" },
    nthRoots: { 2: "\\{y : $y^{args[1]} = {${args[0]}}\\}" },
    pow: { 2: "\\left(${args[0]}\\right)".concat(Pe.pow, "{${args[1]}}") },
    round: { 1: "\\left\\lfloor${args[0]}\\right\\rceil", 2: void 0 },
    sign: { 1: "\\mathrm{${name}}\\left(${args[0]}\\right)" },
    sqrt: { 1: "\\sqrt{${args[0]}}" },
    square: { 1: "\\left(${args[0]}\\right)^2" },
    subtract: {
      2: "\\left(${args[0]}".concat(Pe.subtract, "${args[1]}\\right)"),
    },
    unaryMinus: { 1: "".concat(Pe.unaryMinus, "\\left(${args[0]}\\right)") },
    unaryPlus: { 1: "".concat(Pe.unaryPlus, "\\left(${args[0]}\\right)") },
    bitAnd: { 2: "\\left(${args[0]}".concat(Pe.bitAnd, "${args[1]}\\right)") },
    bitNot: { 1: Pe.bitNot + "\\left(${args[0]}\\right)" },
    bitOr: { 2: "\\left(${args[0]}".concat(Pe.bitOr, "${args[1]}\\right)") },
    bitXor: { 2: "\\left(${args[0]}".concat(Pe.bitXor, "${args[1]}\\right)") },
    leftShift: {
      2: "\\left(${args[0]}".concat(Pe.leftShift, "${args[1]}\\right)"),
    },
    rightArithShift: {
      2: "\\left(${args[0]}".concat(Pe.rightArithShift, "${args[1]}\\right)"),
    },
    rightLogShift: {
      2: "\\left(${args[0]}".concat(Pe.rightLogShift, "${args[1]}\\right)"),
    },
    bellNumbers: { 1: "\\mathrm{B}_{${args[0]}}" },
    catalan: { 1: "\\mathrm{C}_{${args[0]}}" },
    stirlingS2: { 2: "\\mathrm{S}\\left(${args}\\right)" },
    arg: { 1: "\\arg\\left(${args[0]}\\right)" },
    conj: { 1: "\\left(${args[0]}\\right)^*" },
    im: { 1: "\\Im\\left\\lbrace${args[0]}\\right\\rbrace" },
    re: { 1: "\\Re\\left\\lbrace${args[0]}\\right\\rbrace" },
    and: { 2: "\\left(${args[0]}".concat(Pe.and, "${args[1]}\\right)") },
    not: { 1: Pe.not + "\\left(${args[0]}\\right)" },
    or: { 2: "\\left(${args[0]}".concat(Pe.or, "${args[1]}\\right)") },
    xor: { 2: "\\left(${args[0]}".concat(Pe.xor, "${args[1]}\\right)") },
    cross: { 2: "\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)" },
    ctranspose: { 1: "\\left(${args[0]}\\right)".concat(Pe.ctranspose) },
    det: { 1: "\\det\\left(${args[0]}\\right)" },
    dot: { 2: "\\left(${args[0]}\\cdot${args[1]}\\right)" },
    expm: { 1: "\\exp\\left(${args[0]}\\right)" },
    inv: { 1: "\\left(${args[0]}\\right)^{-1}" },
    pinv: { 1: "\\left(${args[0]}\\right)^{+}" },
    sqrtm: { 1: "{${args[0]}}".concat(Pe.pow, "{\\frac{1}{2}}") },
    trace: { 1: "\\mathrm{tr}\\left(${args[0]}\\right)" },
    transpose: { 1: "\\left(${args[0]}\\right)".concat(Pe.transpose) },
    combinations: { 2: "\\binom{${args[0]}}{${args[1]}}" },
    combinationsWithRep: {
      2: "\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)",
    },
    factorial: { 1: "\\left(${args[0]}\\right)".concat(Pe.factorial) },
    gamma: { 1: "\\Gamma\\left(${args[0]}\\right)" },
    lgamma: { 1: "\\ln\\Gamma\\left(${args[0]}\\right)" },
    equal: { 2: "\\left(${args[0]}".concat(Pe.equal, "${args[1]}\\right)") },
    larger: { 2: "\\left(${args[0]}".concat(Pe.larger, "${args[1]}\\right)") },
    largerEq: {
      2: "\\left(${args[0]}".concat(Pe.largerEq, "${args[1]}\\right)"),
    },
    smaller: {
      2: "\\left(${args[0]}".concat(Pe.smaller, "${args[1]}\\right)"),
    },
    smallerEq: {
      2: "\\left(${args[0]}".concat(Pe.smallerEq, "${args[1]}\\right)"),
    },
    unequal: {
      2: "\\left(${args[0]}".concat(Pe.unequal, "${args[1]}\\right)"),
    },
    erf: { 1: "erf\\left(${args[0]}\\right)" },
    max: "\\max\\left(${args}\\right)",
    min: "\\min\\left(${args}\\right)",
    variance: "\\mathrm{Var}\\left(${args}\\right)",
    acos: { 1: "\\cos^{-1}\\left(${args[0]}\\right)" },
    acosh: { 1: "\\cosh^{-1}\\left(${args[0]}\\right)" },
    acot: { 1: "\\cot^{-1}\\left(${args[0]}\\right)" },
    acoth: { 1: "\\coth^{-1}\\left(${args[0]}\\right)" },
    acsc: { 1: "\\csc^{-1}\\left(${args[0]}\\right)" },
    acsch: { 1: "\\mathrm{csch}^{-1}\\left(${args[0]}\\right)" },
    asec: { 1: "\\sec^{-1}\\left(${args[0]}\\right)" },
    asech: { 1: "\\mathrm{sech}^{-1}\\left(${args[0]}\\right)" },
    asin: { 1: "\\sin^{-1}\\left(${args[0]}\\right)" },
    asinh: { 1: "\\sinh^{-1}\\left(${args[0]}\\right)" },
    atan: { 1: "\\tan^{-1}\\left(${args[0]}\\right)" },
    atan2: { 2: "\\mathrm{atan2}\\left(${args}\\right)" },
    atanh: { 1: "\\tanh^{-1}\\left(${args[0]}\\right)" },
    cos: { 1: "\\cos\\left(${args[0]}\\right)" },
    cosh: { 1: "\\cosh\\left(${args[0]}\\right)" },
    cot: { 1: "\\cot\\left(${args[0]}\\right)" },
    coth: { 1: "\\coth\\left(${args[0]}\\right)" },
    csc: { 1: "\\csc\\left(${args[0]}\\right)" },
    csch: { 1: "\\mathrm{csch}\\left(${args[0]}\\right)" },
    sec: { 1: "\\sec\\left(${args[0]}\\right)" },
    sech: { 1: "\\mathrm{sech}\\left(${args[0]}\\right)" },
    sin: { 1: "\\sin\\left(${args[0]}\\right)" },
    sinh: { 1: "\\sinh\\left(${args[0]}\\right)" },
    tan: { 1: "\\tan\\left(${args[0]}\\right)" },
    tanh: { 1: "\\tanh\\left(${args[0]}\\right)" },
    to: { 2: "\\left(${args[0]}".concat(Pe.to, "${args[1]}\\right)") },
    numeric: function (r, t) {
      return r.args[0].toTex();
    },
    number: {
      0: "0",
      1: "\\left(${args[0]}\\right)",
      2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)",
    },
    string: {
      0: '\\mathtt{""}',
      1: "\\mathrm{string}\\left(${args[0]}\\right)",
    },
    bignumber: { 0: "0", 1: "\\left(${args[0]}\\right)" },
    complex: {
      0: "0",
      1: "\\left(${args[0]}\\right)",
      2: "\\left(\\left(${args[0]}\\right)+".concat(
        kl.i,
        "\\cdot\\left(${args[1]}\\right)\\right)"
      ),
    },
    matrix: {
      0: "\\begin{bmatrix}\\end{bmatrix}",
      1: "\\left(${args[0]}\\right)",
      2: "\\left(${args[0]}\\right)",
    },
    sparse: {
      0: "\\begin{bsparse}\\end{bsparse}",
      1: "\\left(${args[0]}\\right)",
    },
    unit: {
      1: "\\left(${args[0]}\\right)",
      2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)",
    },
  },
  nT = "\\mathrm{${name}}\\left(${args}\\right)",
  Ad = { deg: "^\\circ" };
function Ul(e) {
  return tT(e, { preserveFormatting: !0 });
}
function R1(e, r) {
  return (
    (r = typeof r == "undefined" ? !1 : r),
    r
      ? ge(Ad, e)
        ? Ad[e]
        : "\\mathrm{" + Ul(e) + "}"
      : ge(kl, e)
      ? kl[e]
      : Ul(e)
  );
}
var iT = "ConstantNode",
  aT = ["Node"],
  oT = F(
    iT,
    aT,
    (e) => {
      var { Node: r } = e;
      function t(n) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        this.value = n;
      }
      return (
        (t.prototype = new r()),
        (t.prototype.type = "ConstantNode"),
        (t.prototype.isConstantNode = !0),
        (t.prototype._compile = function (n, i) {
          var a = this.value;
          return function () {
            return a;
          };
        }),
        (t.prototype.forEach = function (n) {}),
        (t.prototype.map = function (n) {
          return this.clone();
        }),
        (t.prototype.clone = function () {
          return new t(this.value);
        }),
        (t.prototype._toString = function (n) {
          return _e(this.value, n);
        }),
        (t.prototype.toHTML = function (n) {
          var i = this._toString(n);
          switch (Ye(this.value)) {
            case "number":
            case "BigNumber":
            case "Fraction":
              return '<span class="math-number">' + i + "</span>";
            case "string":
              return '<span class="math-string">' + i + "</span>";
            case "boolean":
              return '<span class="math-boolean">' + i + "</span>";
            case "null":
              return '<span class="math-null-symbol">' + i + "</span>";
            case "undefined":
              return '<span class="math-undefined">' + i + "</span>";
            default:
              return '<span class="math-symbol">' + i + "</span>";
          }
        }),
        (t.prototype.toJSON = function () {
          return { mathjs: "ConstantNode", value: this.value };
        }),
        (t.fromJSON = function (n) {
          return new t(n.value);
        }),
        (t.prototype._toTex = function (n) {
          var i = this._toString(n);
          switch (Ye(this.value)) {
            case "string":
              return "\\mathtt{" + Ul(i) + "}";
            case "number":
            case "BigNumber":
              {
                if (!isFinite(this.value))
                  return this.value.valueOf() < 0 ? "-\\infty" : "\\infty";
                var a = i.toLowerCase().indexOf("e");
                if (a !== -1)
                  return (
                    i.substring(0, a) + "\\cdot10^{" + i.substring(a + 1) + "}"
                  );
              }
              return i;
            case "Fraction":
              return this.value.toLatex();
            default:
              return i;
          }
        }),
        t
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  sT = "FunctionAssignmentNode",
  uT = ["typed", "Node"],
  lT = F(
    sT,
    uT,
    (e) => {
      var { typed: r, Node: t } = e;
      function n(a, s, f) {
        if (!(this instanceof n))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (typeof a != "string")
          throw new TypeError('String expected for parameter "name"');
        if (!Array.isArray(s))
          throw new TypeError(
            'Array containing strings or objects expected for parameter "params"'
          );
        if (!Le(f)) throw new TypeError('Node expected for parameter "expr"');
        if ($1.has(a))
          throw new Error(
            'Illegal function name, "' + a + '" is a reserved keyword'
          );
        (this.name = a),
          (this.params = s.map(function (l) {
            return (l && l.name) || l;
          })),
          (this.types = s.map(function (l) {
            return (l && l.type) || "any";
          })),
          (this.expr = f);
      }
      (n.prototype = new t()),
        (n.prototype.type = "FunctionAssignmentNode"),
        (n.prototype.isFunctionAssignmentNode = !0),
        (n.prototype._compile = function (a, s) {
          var f = Object.create(s);
          Us(this.params, function (m) {
            f[m] = !0;
          });
          var l = this.expr._compile(a, f),
            p = this.name,
            u = this.params,
            o = bp(this.types, ","),
            c = p + "(" + bp(this.params, ", ") + ")";
          return function (v, d, N) {
            var g = {};
            g[o] = function () {
              for (var h = Object.create(d), x = 0; x < u.length; x++)
                h[u[x]] = arguments[x];
              return l(v, h, N);
            };
            var w = r(p, g);
            return (w.syntax = c), v.set(p, w), w;
          };
        }),
        (n.prototype.forEach = function (a) {
          a(this.expr, "expr", this);
        }),
        (n.prototype.map = function (a) {
          var s = this._ifNode(a(this.expr, "expr", this));
          return new n(this.name, this.params.slice(0), s);
        }),
        (n.prototype.clone = function () {
          return new n(this.name, this.params.slice(0), this.expr);
        });
      function i(a, s) {
        var f = Ze(a, s),
          l = Ze(a.expr, s);
        return s === "all" || (l !== null && l <= f);
      }
      return (
        (n.prototype._toString = function (a) {
          var s = a && a.parenthesis ? a.parenthesis : "keep",
            f = this.expr.toString(a);
          return (
            i(this, s) && (f = "(" + f + ")"),
            this.name + "(" + this.params.join(", ") + ") = " + f
          );
        }),
        (n.prototype.toJSON = function () {
          var a = this.types;
          return {
            mathjs: "FunctionAssignmentNode",
            name: this.name,
            params: this.params.map(function (s, f) {
              return { name: s, type: a[f] };
            }),
            expr: this.expr,
          };
        }),
        (n.fromJSON = function (a) {
          return new n(a.name, a.params, a.expr);
        }),
        (n.prototype.toHTML = function (a) {
          for (
            var s = a && a.parenthesis ? a.parenthesis : "keep", f = [], l = 0;
            l < this.params.length;
            l++
          )
            f.push(
              '<span class="math-symbol math-parameter">' +
                ut(this.params[l]) +
                "</span>"
            );
          var p = this.expr.toHTML(a);
          return (
            i(this, s) &&
              (p =
                '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                p +
                '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            '<span class="math-function">' +
              ut(this.name) +
              '</span><span class="math-parenthesis math-round-parenthesis">(</span>' +
              f.join('<span class="math-separator">,</span>') +
              '<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' +
              p
          );
        }),
        (n.prototype._toTex = function (a) {
          var s = a && a.parenthesis ? a.parenthesis : "keep",
            f = this.expr.toTex(a);
          return (
            i(this, s) && (f = "\\left(".concat(f, "\\right)")),
            "\\mathrm{" +
              this.name +
              "}\\left(" +
              this.params.map(R1).join(",") +
              "\\right):=" +
              f
          );
        }),
        n
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  cT = "IndexNode",
  fT = ["Node", "size"],
  pT = F(
    cT,
    fT,
    (e) => {
      var { Node: r, size: t } = e;
      function n(i, a) {
        if (!(this instanceof n))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (
          ((this.dimensions = i),
          (this.dotNotation = a || !1),
          !Array.isArray(i) || !i.every(Le))
        )
          throw new TypeError(
            'Array containing Nodes expected for parameter "dimensions"'
          );
        if (this.dotNotation && !this.isObjectProperty())
          throw new Error("dotNotation only applicable for object properties");
      }
      return (
        (n.prototype = new r()),
        (n.prototype.type = "IndexNode"),
        (n.prototype.isIndexNode = !0),
        (n.prototype._compile = function (i, a) {
          var s = Zt(this.dimensions, function (l, p) {
              var u =
                l.filter((m) => m.isSymbolNode && m.name === "end").length > 0;
              if (u) {
                var o = Object.create(a);
                o.end = !0;
                var c = l._compile(i, o);
                return function (v, d, N) {
                  if (!Ae(N) && !He(N) && !$r(N))
                    throw new TypeError(
                      'Cannot resolve "end": context must be a Matrix, Array, or string but is ' +
                        Ye(N)
                    );
                  var g = t(N).valueOf(),
                    w = Object.create(d);
                  return (w.end = g[p]), c(v, w, N);
                };
              } else return l._compile(i, a);
            }),
            f = mt(i, "index");
          return function (p, u, o) {
            var c = Zt(s, function (m) {
              return m(p, u, o);
            });
            return f(...c);
          };
        }),
        (n.prototype.forEach = function (i) {
          for (var a = 0; a < this.dimensions.length; a++)
            i(this.dimensions[a], "dimensions[" + a + "]", this);
        }),
        (n.prototype.map = function (i) {
          for (var a = [], s = 0; s < this.dimensions.length; s++)
            a[s] = this._ifNode(
              i(this.dimensions[s], "dimensions[" + s + "]", this)
            );
          return new n(a, this.dotNotation);
        }),
        (n.prototype.clone = function () {
          return new n(this.dimensions.slice(0), this.dotNotation);
        }),
        (n.prototype.isObjectProperty = function () {
          return (
            this.dimensions.length === 1 &&
            Ve(this.dimensions[0]) &&
            typeof this.dimensions[0].value == "string"
          );
        }),
        (n.prototype.getObjectProperty = function () {
          return this.isObjectProperty() ? this.dimensions[0].value : null;
        }),
        (n.prototype._toString = function (i) {
          return this.dotNotation
            ? "." + this.getObjectProperty()
            : "[" + this.dimensions.join(", ") + "]";
        }),
        (n.prototype.toJSON = function () {
          return {
            mathjs: "IndexNode",
            dimensions: this.dimensions,
            dotNotation: this.dotNotation,
          };
        }),
        (n.fromJSON = function (i) {
          return new n(i.dimensions, i.dotNotation);
        }),
        (n.prototype.toHTML = function (i) {
          for (var a = [], s = 0; s < this.dimensions.length; s++)
            a[s] = this.dimensions[s].toHTML();
          return this.dotNotation
            ? '<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">' +
                ut(this.getObjectProperty()) +
                "</span>"
            : '<span class="math-parenthesis math-square-parenthesis">[</span>' +
                a.join('<span class="math-separator">,</span>') +
                '<span class="math-parenthesis math-square-parenthesis">]</span>';
        }),
        (n.prototype._toTex = function (i) {
          var a = this.dimensions.map(function (s) {
            return s.toTex(i);
          });
          return this.dotNotation
            ? "." + this.getObjectProperty()
            : "_{" + a.join(",") + "}";
        }),
        n
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  mT = "ObjectNode",
  vT = ["Node"],
  dT = F(
    mT,
    vT,
    (e) => {
      var { Node: r } = e;
      function t(n) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (
          ((this.properties = n || {}),
          n &&
            (typeof n != "object" ||
              !Object.keys(n).every(function (i) {
                return Le(n[i]);
              })))
        )
          throw new TypeError("Object containing Nodes expected");
      }
      return (
        (t.prototype = new r()),
        (t.prototype.type = "ObjectNode"),
        (t.prototype.isObjectNode = !0),
        (t.prototype._compile = function (n, i) {
          var a = {};
          for (var s in this.properties)
            if (ge(this.properties, s)) {
              var f = bo(s),
                l = JSON.parse(f);
              if (!kc(this.properties, l))
                throw new Error('No access to property "' + l + '"');
              a[l] = this.properties[s]._compile(n, i);
            }
          return function (u, o, c) {
            var m = {};
            for (var v in a) ge(a, v) && (m[v] = a[v](u, o, c));
            return m;
          };
        }),
        (t.prototype.forEach = function (n) {
          for (var i in this.properties)
            ge(this.properties, i) &&
              n(this.properties[i], "properties[" + bo(i) + "]", this);
        }),
        (t.prototype.map = function (n) {
          var i = {};
          for (var a in this.properties)
            ge(this.properties, a) &&
              (i[a] = this._ifNode(
                n(this.properties[a], "properties[" + bo(a) + "]", this)
              ));
          return new t(i);
        }),
        (t.prototype.clone = function () {
          var n = {};
          for (var i in this.properties)
            ge(this.properties, i) && (n[i] = this.properties[i]);
          return new t(n);
        }),
        (t.prototype._toString = function (n) {
          var i = [];
          for (var a in this.properties)
            ge(this.properties, a) &&
              i.push(bo(a) + ": " + this.properties[a].toString(n));
          return "{" + i.join(", ") + "}";
        }),
        (t.prototype.toJSON = function () {
          return { mathjs: "ObjectNode", properties: this.properties };
        }),
        (t.fromJSON = function (n) {
          return new t(n.properties);
        }),
        (t.prototype.toHTML = function (n) {
          var i = [];
          for (var a in this.properties)
            ge(this.properties, a) &&
              i.push(
                '<span class="math-symbol math-property">' +
                  ut(a) +
                  '</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>' +
                  this.properties[a].toHTML(n)
              );
          return (
            '<span class="math-parenthesis math-curly-parenthesis">{</span>' +
            i.join('<span class="math-separator">,</span>') +
            '<span class="math-parenthesis math-curly-parenthesis">}</span>'
          );
        }),
        (t.prototype._toTex = function (n) {
          var i = [];
          for (var a in this.properties)
            ge(this.properties, a) &&
              i.push(
                "\\mathbf{" + a + ":} & " + this.properties[a].toTex(n) + "\\\\"
              );
          return "\\left\\{\\begin{array}{ll}".concat(
            i.join(`
`),
            "\\end{array}\\right\\}"
          );
        }),
        t
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  hT = "OperatorNode",
  gT = ["Node"],
  yT = F(
    hT,
    gT,
    (e) => {
      var { Node: r } = e;
      function t(i, a, s, f, l) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (typeof i != "string")
          throw new TypeError('string expected for parameter "op"');
        if (typeof a != "string")
          throw new TypeError('string expected for parameter "fn"');
        if (!Array.isArray(s) || !s.every(Le))
          throw new TypeError(
            'Array containing Nodes expected for parameter "args"'
          );
        (this.implicit = f === !0),
          (this.isPercentage = l === !0),
          (this.op = i),
          (this.fn = a),
          (this.args = s || []);
      }
      (t.prototype = new r()),
        (t.prototype.type = "OperatorNode"),
        (t.prototype.isOperatorNode = !0),
        (t.prototype._compile = function (i, a) {
          if (typeof this.fn != "string" || !Uc(i, this.fn))
            throw i[this.fn]
              ? new Error('No access to function "' + this.fn + '"')
              : new Error(
                  "Function " +
                    this.fn +
                    ' missing in provided namespace "math"'
                );
          var s = mt(i, this.fn),
            f = Zt(this.args, function (o) {
              return o._compile(i, a);
            });
          if (f.length === 1) {
            var l = f[0];
            return function (c, m, v) {
              return s(l(c, m, v));
            };
          } else if (f.length === 2) {
            var p = f[0],
              u = f[1];
            return function (c, m, v) {
              return s(p(c, m, v), u(c, m, v));
            };
          } else
            return function (c, m, v) {
              return s.apply(
                null,
                Zt(f, function (d) {
                  return d(c, m, v);
                })
              );
            };
        }),
        (t.prototype.forEach = function (i) {
          for (var a = 0; a < this.args.length; a++)
            i(this.args[a], "args[" + a + "]", this);
        }),
        (t.prototype.map = function (i) {
          for (var a = [], s = 0; s < this.args.length; s++)
            a[s] = this._ifNode(i(this.args[s], "args[" + s + "]", this));
          return new t(this.op, this.fn, a, this.implicit, this.isPercentage);
        }),
        (t.prototype.clone = function () {
          return new t(
            this.op,
            this.fn,
            this.args.slice(0),
            this.implicit,
            this.isPercentage
          );
        }),
        (t.prototype.isUnary = function () {
          return this.args.length === 1;
        }),
        (t.prototype.isBinary = function () {
          return this.args.length === 2;
        });
      function n(i, a, s, f, l) {
        var p = Ze(i, a),
          u = sa(i, a);
        if (
          a === "all" ||
          (f.length > 2 &&
            i.getIdentifier() !== "OperatorNode:add" &&
            i.getIdentifier() !== "OperatorNode:multiply")
        )
          return f.map(function (S) {
            switch (S.getContent().type) {
              case "ArrayNode":
              case "ConstantNode":
              case "SymbolNode":
              case "ParenthesisNode":
                return !1;
              default:
                return !0;
            }
          });
        var o;
        switch (f.length) {
          case 0:
            o = [];
            break;
          case 1:
            {
              var c = Ze(f[0], a);
              if (l && c !== null) {
                var m, v;
                if (
                  (a === "keep"
                    ? ((m = f[0].getIdentifier()), (v = i.getIdentifier()))
                    : ((m = f[0].getContent().getIdentifier()),
                      (v = i.getContent().getIdentifier())),
                  Dt[p][v].latexLeftParens === !1)
                ) {
                  o = [!1];
                  break;
                }
                if (Dt[c][m].latexParens === !1) {
                  o = [!1];
                  break;
                }
              }
              if (c === null) {
                o = [!1];
                break;
              }
              if (c <= p) {
                o = [!0];
                break;
              }
              o = [!1];
            }
            break;
          case 2:
            {
              var d,
                N = Ze(f[0], a),
                g = Bu(i, f[0], a);
              N === null
                ? (d = !1)
                : (N === p && u === "right" && !g) || N < p
                ? (d = !0)
                : (d = !1);
              var w,
                h = Ze(f[1], a),
                x = Bu(i, f[1], a);
              if (
                (h === null
                  ? (w = !1)
                  : (h === p && u === "left" && !x) || h < p
                  ? (w = !0)
                  : (w = !1),
                l)
              ) {
                var b, y, A;
                a === "keep"
                  ? ((b = i.getIdentifier()),
                    (y = i.args[0].getIdentifier()),
                    (A = i.args[1].getIdentifier()))
                  : ((b = i.getContent().getIdentifier()),
                    (y = i.args[0].getContent().getIdentifier()),
                    (A = i.args[1].getContent().getIdentifier())),
                  N !== null &&
                    (Dt[p][b].latexLeftParens === !1 && (d = !1),
                    Dt[N][y].latexParens === !1 && (d = !1)),
                  h !== null &&
                    (Dt[p][b].latexRightParens === !1 && (w = !1),
                    Dt[h][A].latexParens === !1 && (w = !1));
              }
              o = [d, w];
            }
            break;
          default:
            (i.getIdentifier() === "OperatorNode:add" ||
              i.getIdentifier() === "OperatorNode:multiply") &&
              (o = f.map(function (S) {
                var E = Ze(S, a),
                  M = Bu(i, S, a),
                  _ = sa(S, a);
                return E === null ? !1 : p === E && u === _ && !M ? !0 : E < p;
              }));
            break;
        }
        return (
          f.length >= 2 &&
            i.getIdentifier() === "OperatorNode:multiply" &&
            i.implicit &&
            a === "auto" &&
            s === "hide" &&
            (o = f.map(function (S, E) {
              var M = S.getIdentifier() === "ParenthesisNode";
              return !!(o[E] || M);
            })),
          o
        );
      }
      return (
        (t.prototype._toString = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = i && i.implicit ? i.implicit : "hide",
            f = this.args,
            l = n(this, a, s, f, !1);
          if (f.length === 1) {
            var p = sa(this, a),
              u = f[0].toString(i);
            l[0] && (u = "(" + u + ")");
            var o = /[a-zA-Z]+/.test(this.op);
            return p === "right"
              ? this.op + (o ? " " : "") + u
              : p === "left"
              ? u + (o ? " " : "") + this.op
              : u + this.op;
          } else if (f.length === 2) {
            var c = f[0].toString(i),
              m = f[1].toString(i);
            return (
              l[0] && (c = "(" + c + ")"),
              l[1] && (m = "(" + m + ")"),
              this.implicit &&
              this.getIdentifier() === "OperatorNode:multiply" &&
              s === "hide"
                ? c + " " + m
                : c + " " + this.op + " " + m
            );
          } else if (
            f.length > 2 &&
            (this.getIdentifier() === "OperatorNode:add" ||
              this.getIdentifier() === "OperatorNode:multiply")
          ) {
            var v = f.map(function (d, N) {
              return (d = d.toString(i)), l[N] && (d = "(" + d + ")"), d;
            });
            return this.implicit &&
              this.getIdentifier() === "OperatorNode:multiply" &&
              s === "hide"
              ? v.join(" ")
              : v.join(" " + this.op + " ");
          } else return this.fn + "(" + this.args.join(", ") + ")";
        }),
        (t.prototype.toJSON = function () {
          return {
            mathjs: "OperatorNode",
            op: this.op,
            fn: this.fn,
            args: this.args,
            implicit: this.implicit,
            isPercentage: this.isPercentage,
          };
        }),
        (t.fromJSON = function (i) {
          return new t(i.op, i.fn, i.args, i.implicit, i.isPercentage);
        }),
        (t.prototype.toHTML = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = i && i.implicit ? i.implicit : "hide",
            f = this.args,
            l = n(this, a, s, f, !1);
          if (f.length === 1) {
            var p = sa(this, a),
              u = f[0].toHTML(i);
            return (
              l[0] &&
                (u =
                  '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                  u +
                  '<span class="math-parenthesis math-round-parenthesis">)</span>'),
              p === "right"
                ? '<span class="math-operator math-unary-operator math-lefthand-unary-operator">' +
                  ut(this.op) +
                  "</span>" +
                  u
                : u +
                  '<span class="math-operator math-unary-operator math-righthand-unary-operator">' +
                  ut(this.op) +
                  "</span>"
            );
          } else if (f.length === 2) {
            var o = f[0].toHTML(i),
              c = f[1].toHTML(i);
            return (
              l[0] &&
                (o =
                  '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                  o +
                  '<span class="math-parenthesis math-round-parenthesis">)</span>'),
              l[1] &&
                (c =
                  '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                  c +
                  '<span class="math-parenthesis math-round-parenthesis">)</span>'),
              this.implicit &&
              this.getIdentifier() === "OperatorNode:multiply" &&
              s === "hide"
                ? o +
                  '<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>' +
                  c
                : o +
                  '<span class="math-operator math-binary-operator math-explicit-binary-operator">' +
                  ut(this.op) +
                  "</span>" +
                  c
            );
          } else {
            var m = f.map(function (v, d) {
              return (
                (v = v.toHTML(i)),
                l[d] &&
                  (v =
                    '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                    v +
                    '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                v
              );
            });
            return f.length > 2 &&
              (this.getIdentifier() === "OperatorNode:add" ||
                this.getIdentifier() === "OperatorNode:multiply")
              ? this.implicit &&
                this.getIdentifier() === "OperatorNode:multiply" &&
                s === "hide"
                ? m.join(
                    '<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'
                  )
                : m.join(
                    '<span class="math-operator math-binary-operator math-explicit-binary-operator">' +
                      ut(this.op) +
                      "</span>"
                  )
              : '<span class="math-function">' +
                  ut(this.fn) +
                  '</span><span class="math-paranthesis math-round-parenthesis">(</span>' +
                  m.join('<span class="math-separator">,</span>') +
                  '<span class="math-paranthesis math-round-parenthesis">)</span>';
          }
        }),
        (t.prototype._toTex = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = i && i.implicit ? i.implicit : "hide",
            f = this.args,
            l = n(this, a, s, f, !0),
            p = Pe[this.fn];
          if (((p = typeof p == "undefined" ? this.op : p), f.length === 1)) {
            var u = sa(this, a),
              o = f[0].toTex(i);
            return (
              l[0] && (o = "\\left(".concat(o, "\\right)")),
              u === "right" ? p + o : o + p
            );
          } else if (f.length === 2) {
            var c = f[0],
              m = c.toTex(i);
            l[0] && (m = "\\left(".concat(m, "\\right)"));
            var v = f[1],
              d = v.toTex(i);
            l[1] && (d = "\\left(".concat(d, "\\right)"));
            var N;
            switch (
              (a === "keep"
                ? (N = c.getIdentifier())
                : (N = c.getContent().getIdentifier()),
              this.getIdentifier())
            ) {
              case "OperatorNode:divide":
                return p + "{" + m + "}{" + d + "}";
              case "OperatorNode:pow":
                switch (((m = "{" + m + "}"), (d = "{" + d + "}"), N)) {
                  case "ConditionalNode":
                  case "OperatorNode:divide":
                    m = "\\left(".concat(m, "\\right)");
                }
                break;
              case "OperatorNode:multiply":
                if (this.implicit && s === "hide") return m + "~" + d;
            }
            return m + p + d;
          } else if (
            f.length > 2 &&
            (this.getIdentifier() === "OperatorNode:add" ||
              this.getIdentifier() === "OperatorNode:multiply")
          ) {
            var g = f.map(function (w, h) {
              return (
                (w = w.toTex(i)),
                l[h] && (w = "\\left(".concat(w, "\\right)")),
                w
              );
            });
            return this.getIdentifier() === "OperatorNode:multiply" &&
              this.implicit
              ? g.join("~")
              : g.join(p);
          } else
            return (
              "\\mathrm{" +
              this.fn +
              "}\\left(" +
              f
                .map(function (w) {
                  return w.toTex(i);
                })
                .join(",") +
              "\\right)"
            );
        }),
        (t.prototype.getIdentifier = function () {
          return this.type + ":" + this.fn;
        }),
        t
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  xT = "ParenthesisNode",
  wT = ["Node"],
  bT = F(
    xT,
    wT,
    (e) => {
      var { Node: r } = e;
      function t(n) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (!Le(n))
          throw new TypeError('Node expected for parameter "content"');
        this.content = n;
      }
      return (
        (t.prototype = new r()),
        (t.prototype.type = "ParenthesisNode"),
        (t.prototype.isParenthesisNode = !0),
        (t.prototype._compile = function (n, i) {
          return this.content._compile(n, i);
        }),
        (t.prototype.getContent = function () {
          return this.content.getContent();
        }),
        (t.prototype.forEach = function (n) {
          n(this.content, "content", this);
        }),
        (t.prototype.map = function (n) {
          var i = n(this.content, "content", this);
          return new t(i);
        }),
        (t.prototype.clone = function () {
          return new t(this.content);
        }),
        (t.prototype._toString = function (n) {
          return !n || (n && !n.parenthesis) || (n && n.parenthesis === "keep")
            ? "(" + this.content.toString(n) + ")"
            : this.content.toString(n);
        }),
        (t.prototype.toJSON = function () {
          return { mathjs: "ParenthesisNode", content: this.content };
        }),
        (t.fromJSON = function (n) {
          return new t(n.content);
        }),
        (t.prototype.toHTML = function (n) {
          return !n || (n && !n.parenthesis) || (n && n.parenthesis === "keep")
            ? '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                this.content.toHTML(n) +
                '<span class="math-parenthesis math-round-parenthesis">)</span>'
            : this.content.toHTML(n);
        }),
        (t.prototype._toTex = function (n) {
          return !n || (n && !n.parenthesis) || (n && n.parenthesis === "keep")
            ? "\\left(".concat(this.content.toTex(n), "\\right)")
            : this.content.toTex(n);
        }),
        t
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  NT = "RangeNode",
  MT = ["Node"],
  ST = F(
    NT,
    MT,
    (e) => {
      var { Node: r } = e;
      function t(i, a, s) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (!Le(i)) throw new TypeError("Node expected");
        if (!Le(a)) throw new TypeError("Node expected");
        if (s && !Le(s)) throw new TypeError("Node expected");
        if (arguments.length > 3) throw new Error("Too many arguments");
        (this.start = i), (this.end = a), (this.step = s || null);
      }
      (t.prototype = new r()),
        (t.prototype.type = "RangeNode"),
        (t.prototype.isRangeNode = !0),
        (t.prototype.needsEnd = function () {
          var i = this.filter(function (a) {
            return gr(a) && a.name === "end";
          });
          return i.length > 0;
        }),
        (t.prototype._compile = function (i, a) {
          var s = i.range,
            f = this.start._compile(i, a),
            l = this.end._compile(i, a);
          if (this.step) {
            var p = this.step._compile(i, a);
            return function (o, c, m) {
              return s(f(o, c, m), l(o, c, m), p(o, c, m));
            };
          } else
            return function (o, c, m) {
              return s(f(o, c, m), l(o, c, m));
            };
        }),
        (t.prototype.forEach = function (i) {
          i(this.start, "start", this),
            i(this.end, "end", this),
            this.step && i(this.step, "step", this);
        }),
        (t.prototype.map = function (i) {
          return new t(
            this._ifNode(i(this.start, "start", this)),
            this._ifNode(i(this.end, "end", this)),
            this.step && this._ifNode(i(this.step, "step", this))
          );
        }),
        (t.prototype.clone = function () {
          return new t(this.start, this.end, this.step && this.step);
        });
      function n(i, a) {
        var s = Ze(i, a),
          f = {},
          l = Ze(i.start, a);
        if (((f.start = (l !== null && l <= s) || a === "all"), i.step)) {
          var p = Ze(i.step, a);
          f.step = (p !== null && p <= s) || a === "all";
        }
        var u = Ze(i.end, a);
        return (f.end = (u !== null && u <= s) || a === "all"), f;
      }
      return (
        (t.prototype._toString = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = n(this, a),
            f,
            l = this.start.toString(i);
          if ((s.start && (l = "(" + l + ")"), (f = l), this.step)) {
            var p = this.step.toString(i);
            s.step && (p = "(" + p + ")"), (f += ":" + p);
          }
          var u = this.end.toString(i);
          return s.end && (u = "(" + u + ")"), (f += ":" + u), f;
        }),
        (t.prototype.toJSON = function () {
          return {
            mathjs: "RangeNode",
            start: this.start,
            end: this.end,
            step: this.step,
          };
        }),
        (t.fromJSON = function (i) {
          return new t(i.start, i.end, i.step);
        }),
        (t.prototype.toHTML = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = n(this, a),
            f,
            l = this.start.toHTML(i);
          if (
            (s.start &&
              (l =
                '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                l +
                '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            (f = l),
            this.step)
          ) {
            var p = this.step.toHTML(i);
            s.step &&
              (p =
                '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                p +
                '<span class="math-parenthesis math-round-parenthesis">)</span>'),
              (f +=
                '<span class="math-operator math-range-operator">:</span>' + p);
          }
          var u = this.end.toHTML(i);
          return (
            s.end &&
              (u =
                '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                u +
                '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            (f +=
              '<span class="math-operator math-range-operator">:</span>' + u),
            f
          );
        }),
        (t.prototype._toTex = function (i) {
          var a = i && i.parenthesis ? i.parenthesis : "keep",
            s = n(this, a),
            f = this.start.toTex(i);
          if ((s.start && (f = "\\left(".concat(f, "\\right)")), this.step)) {
            var l = this.step.toTex(i);
            s.step && (l = "\\left(".concat(l, "\\right)")), (f += ":" + l);
          }
          var p = this.end.toTex(i);
          return (
            s.end && (p = "\\left(".concat(p, "\\right)")), (f += ":" + p), f
          );
        }),
        t
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  AT = "RelationalNode",
  ET = ["Node"],
  CT = F(
    AT,
    ET,
    (e) => {
      var { Node: r } = e;
      function t(n, i) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (!Array.isArray(n))
          throw new TypeError("Parameter conditionals must be an array");
        if (!Array.isArray(i))
          throw new TypeError("Parameter params must be an array");
        if (n.length !== i.length - 1)
          throw new TypeError(
            "Parameter params must contain exactly one more element than parameter conditionals"
          );
        (this.conditionals = n), (this.params = i);
      }
      return (
        (t.prototype = new r()),
        (t.prototype.type = "RelationalNode"),
        (t.prototype.isRelationalNode = !0),
        (t.prototype._compile = function (n, i) {
          var a = this,
            s = this.params.map((f) => f._compile(n, i));
          return function (l, p, u) {
            for (
              var o, c = s[0](l, p, u), m = 0;
              m < a.conditionals.length;
              m++
            ) {
              (o = c), (c = s[m + 1](l, p, u));
              var v = mt(n, a.conditionals[m]);
              if (!v(o, c)) return !1;
            }
            return !0;
          };
        }),
        (t.prototype.forEach = function (n) {
          this.params.forEach((i, a) => n(i, "params[" + a + "]", this), this);
        }),
        (t.prototype.map = function (n) {
          return new t(
            this.conditionals.slice(),
            this.params.map(
              (i, a) => this._ifNode(n(i, "params[" + a + "]", this)),
              this
            )
          );
        }),
        (t.prototype.clone = function () {
          return new t(this.conditionals, this.params);
        }),
        (t.prototype._toString = function (n) {
          for (
            var i = n && n.parenthesis ? n.parenthesis : "keep",
              a = Ze(this, i),
              s = this.params.map(function (u, o) {
                var c = Ze(u, i);
                return i === "all" || (c !== null && c <= a)
                  ? "(" + u.toString(n) + ")"
                  : u.toString(n);
              }),
              f = {
                equal: "==",
                unequal: "!=",
                smaller: "<",
                larger: ">",
                smallerEq: "<=",
                largerEq: ">=",
              },
              l = s[0],
              p = 0;
            p < this.conditionals.length;
            p++
          )
            l += " " + f[this.conditionals[p]] + " " + s[p + 1];
          return l;
        }),
        (t.prototype.toJSON = function () {
          return {
            mathjs: "RelationalNode",
            conditionals: this.conditionals,
            params: this.params,
          };
        }),
        (t.fromJSON = function (n) {
          return new t(n.conditionals, n.params);
        }),
        (t.prototype.toHTML = function (n) {
          for (
            var i = n && n.parenthesis ? n.parenthesis : "keep",
              a = Ze(this, i),
              s = this.params.map(function (u, o) {
                var c = Ze(u, i);
                return i === "all" || (c !== null && c <= a)
                  ? '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                      u.toHTML(n) +
                      '<span class="math-parenthesis math-round-parenthesis">)</span>'
                  : u.toHTML(n);
              }),
              f = {
                equal: "==",
                unequal: "!=",
                smaller: "<",
                larger: ">",
                smallerEq: "<=",
                largerEq: ">=",
              },
              l = s[0],
              p = 0;
            p < this.conditionals.length;
            p++
          )
            l +=
              '<span class="math-operator math-binary-operator math-explicit-binary-operator">' +
              ut(f[this.conditionals[p]]) +
              "</span>" +
              s[p + 1];
          return l;
        }),
        (t.prototype._toTex = function (n) {
          for (
            var i = n && n.parenthesis ? n.parenthesis : "keep",
              a = Ze(this, i),
              s = this.params.map(function (p, u) {
                var o = Ze(p, i);
                return i === "all" || (o !== null && o <= a)
                  ? "\\left(" + p.toTex(n) + "\right)"
                  : p.toTex(n);
              }),
              f = s[0],
              l = 0;
            l < this.conditionals.length;
            l++
          )
            f += Pe[this.conditionals[l]] + s[l + 1];
          return f;
        }),
        t
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  OT = "SymbolNode",
  TT = ["math", "?Unit", "Node"],
  DT = F(
    OT,
    TT,
    (e) => {
      var { math: r, Unit: t, Node: n } = e;
      function i(s) {
        return t ? t.isValuelessUnit(s) : !1;
      }
      function a(s) {
        if (!(this instanceof a))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (typeof s != "string")
          throw new TypeError('String expected for parameter "name"');
        this.name = s;
      }
      return (
        (a.prototype = new n()),
        (a.prototype.type = "SymbolNode"),
        (a.prototype.isSymbolNode = !0),
        (a.prototype._compile = function (s, f) {
          var l = this.name;
          if (f[l] === !0)
            return function (u, o, c) {
              return o[l];
            };
          if (l in s)
            return function (u, o, c) {
              return u.has(l) ? u.get(l) : mt(s, l);
            };
          var p = i(l);
          return function (u, o, c) {
            return u.has(l)
              ? u.get(l)
              : p
              ? new t(null, l)
              : a.onUndefinedSymbol(l);
          };
        }),
        (a.prototype.forEach = function (s) {}),
        (a.prototype.map = function (s) {
          return this.clone();
        }),
        (a.onUndefinedSymbol = function (s) {
          throw new Error("Undefined symbol " + s);
        }),
        (a.prototype.clone = function () {
          return new a(this.name);
        }),
        (a.prototype._toString = function (s) {
          return this.name;
        }),
        (a.prototype.toHTML = function (s) {
          var f = ut(this.name);
          return f === "true" || f === "false"
            ? '<span class="math-symbol math-boolean">' + f + "</span>"
            : f === "i"
            ? '<span class="math-symbol math-imaginary-symbol">' + f + "</span>"
            : f === "Infinity"
            ? '<span class="math-symbol math-infinity-symbol">' + f + "</span>"
            : f === "NaN"
            ? '<span class="math-symbol math-nan-symbol">' + f + "</span>"
            : f === "null"
            ? '<span class="math-symbol math-null-symbol">' + f + "</span>"
            : f === "undefined"
            ? '<span class="math-symbol math-undefined-symbol">' + f + "</span>"
            : '<span class="math-symbol">' + f + "</span>";
        }),
        (a.prototype.toJSON = function () {
          return { mathjs: "SymbolNode", name: this.name };
        }),
        (a.fromJSON = function (s) {
          return new a(s.name);
        }),
        (a.prototype._toTex = function (s) {
          var f = !1;
          typeof r[this.name] == "undefined" && i(this.name) && (f = !0);
          var l = R1(this.name, f);
          return l[0] === "\\" ? l : " " + l;
        }),
        a
      );
    },
    { isClass: !0, isNode: !0 }
  );
function da(e) {
  for (
    var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), n = 1;
    n < r;
    n++
  )
    t[n - 1] = arguments[n];
  return typeof e.createSubScope == "function"
    ? Mp(e.createSubScope(), ...t)
    : Mp(Ht(), e, ...t);
}
var _T = "FunctionNode",
  BT = ["math", "Node", "SymbolNode"],
  IT = F(
    _T,
    BT,
    (e) => {
      var { math: r, Node: t, SymbolNode: n } = e;
      function i(p, u) {
        if (!(this instanceof i))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if ((typeof p == "string" && (p = new n(p)), !Le(p)))
          throw new TypeError('Node expected as parameter "fn"');
        if (!Array.isArray(u) || !u.every(Le))
          throw new TypeError(
            'Array containing Nodes expected for parameter "args"'
          );
        (this.fn = p),
          (this.args = u || []),
          Object.defineProperty(this, "name", {
            get: function () {
              return this.fn.name || "";
            }.bind(this),
            set: function () {
              throw new Error("Cannot assign a new name, name is read-only");
            },
          });
      }
      (i.prototype = new t()),
        (i.prototype.type = "FunctionNode"),
        (i.prototype.isFunctionNode = !0);
      var a = (p) => _e(p, { truncate: 78 });
      (i.prototype._compile = function (p, u) {
        if (!(this instanceof i)) throw new TypeError("No valid FunctionNode");
        var o = this.args.map((S) => S._compile(p, u));
        if (gr(this.fn)) {
          var c = this.fn.name;
          if (u[c]) {
            var g = this.args;
            return function (E, M, _) {
              var C = M[c];
              if (typeof C != "function")
                throw new TypeError(
                  "Argument '"
                    .concat(c, "' was not a function; received: ")
                    .concat(a(C))
                );
              if (C.rawArgs) return C(g, p, da(E, M), E);
              var I = o.map((L) => L(E, M, _));
              return C.apply(C, I);
            };
          } else {
            var m = c in p ? mt(p, c) : void 0,
              v = typeof m == "function" && m.rawArgs === !0,
              d = (S) => {
                var E;
                if (S.has(c)) E = S.get(c);
                else if (c in p) E = mt(p, c);
                else return i.onUndefinedFunction(c);
                if (typeof E == "function") return E;
                throw new TypeError(
                  "'"
                    .concat(
                      c,
                      `' is not a function; its value is:
  `
                    )
                    .concat(a(E))
                );
              };
            if (v) {
              var N = this.args;
              return function (E, M, _) {
                var C = d(E);
                return C(N, p, da(E, M), E);
              };
            } else
              switch (o.length) {
                case 0:
                  return function (E, M, _) {
                    var C = d(E);
                    return C();
                  };
                case 1:
                  return function (E, M, _) {
                    var C = d(E),
                      I = o[0];
                    return C(I(E, M, _));
                  };
                case 2:
                  return function (E, M, _) {
                    var C = d(E),
                      I = o[0],
                      L = o[1];
                    return C(I(E, M, _), L(E, M, _));
                  };
                default:
                  return function (E, M, _) {
                    var C = d(E),
                      I = o.map((L) => L(E, M, _));
                    return C(...I);
                  };
              }
          }
        } else if (
          Sn(this.fn) &&
          Kn(this.fn.index) &&
          this.fn.index.isObjectProperty()
        ) {
          var w = this.fn.object._compile(p, u),
            h = this.fn.index.getObjectProperty(),
            x = this.args;
          return function (E, M, _) {
            var C = w(E, M, _);
            fN(C, h);
            var I = C[h] && C[h].rawArgs;
            if (I) return C[h](x, p, da(E, M), E);
            var L = o.map(($) => $(E, M, _));
            return C[h].apply(C, L);
          };
        } else {
          var b = this.fn.toString(),
            y = this.fn._compile(p, u),
            A = this.args;
          return function (E, M, _) {
            var C = y(E, M, _);
            if (typeof C != "function")
              throw new TypeError(
                "Expression '".concat(
                  b,
                  "' did not evaluate to a function; value is:"
                ) +
                  `
  `.concat(a(C))
              );
            if (C.rawArgs) return C(A, p, da(E, M), E);
            var I = o.map((L) => L(E, M, _));
            return C.apply(C, I);
          };
        }
      }),
        (i.prototype.forEach = function (p) {
          p(this.fn, "fn", this);
          for (var u = 0; u < this.args.length; u++)
            p(this.args[u], "args[" + u + "]", this);
        }),
        (i.prototype.map = function (p) {
          for (
            var u = this._ifNode(p(this.fn, "fn", this)), o = [], c = 0;
            c < this.args.length;
            c++
          )
            o[c] = this._ifNode(p(this.args[c], "args[" + c + "]", this));
          return new i(u, o);
        }),
        (i.prototype.clone = function () {
          return new i(this.fn, this.args.slice(0));
        }),
        (i.onUndefinedFunction = function (p) {
          throw new Error("Undefined function " + p);
        });
      var s = i.prototype.toString;
      (i.prototype.toString = function (p) {
        var u,
          o = this.fn.toString(p);
        return (
          p &&
            typeof p.handler == "object" &&
            ge(p.handler, o) &&
            (u = p.handler[o](this, p)),
          typeof u != "undefined" ? u : s.call(this, p)
        );
      }),
        (i.prototype._toString = function (p) {
          var u = this.args.map(function (c) {
              return c.toString(p);
            }),
            o = Qi(this.fn)
              ? "(" + this.fn.toString(p) + ")"
              : this.fn.toString(p);
          return o + "(" + u.join(", ") + ")";
        }),
        (i.prototype.toJSON = function () {
          return { mathjs: "FunctionNode", fn: this.fn, args: this.args };
        }),
        (i.fromJSON = function (p) {
          return new i(p.fn, p.args);
        }),
        (i.prototype.toHTML = function (p) {
          var u = this.args.map(function (o) {
            return o.toHTML(p);
          });
          return (
            '<span class="math-function">' +
            ut(this.fn) +
            '</span><span class="math-paranthesis math-round-parenthesis">(</span>' +
            u.join('<span class="math-separator">,</span>') +
            '<span class="math-paranthesis math-round-parenthesis">)</span>'
          );
        });
      function f(p, u, o) {
        for (
          var c = "",
            m = /\$(?:\{([a-z_][a-z_0-9]*)(?:\[([0-9]+)\])?\}|\$)/gi,
            v = 0,
            d;
          (d = m.exec(p)) !== null;

        )
          if (((c += p.substring(v, d.index)), (v = d.index), d[0] === "$$"))
            (c += "$"), v++;
          else {
            v += d[0].length;
            var N = u[d[1]];
            if (!N)
              throw new ReferenceError(
                "Template: Property " + d[1] + " does not exist."
              );
            if (d[2] === void 0)
              switch (typeof N) {
                case "string":
                  c += N;
                  break;
                case "object":
                  if (Le(N)) c += N.toTex(o);
                  else if (Array.isArray(N))
                    c += N.map(function (g, w) {
                      if (Le(g)) return g.toTex(o);
                      throw new TypeError(
                        "Template: " + d[1] + "[" + w + "] is not a Node."
                      );
                    }).join(",");
                  else
                    throw new TypeError(
                      "Template: " +
                        d[1] +
                        " has to be a Node, String or array of Nodes"
                    );
                  break;
                default:
                  throw new TypeError(
                    "Template: " +
                      d[1] +
                      " has to be a Node, String or array of Nodes"
                  );
              }
            else if (Le(N[d[2]] && N[d[2]])) c += N[d[2]].toTex(o);
            else
              throw new TypeError(
                "Template: " + d[1] + "[" + d[2] + "] is not a Node."
              );
          }
        return (c += p.slice(v)), c;
      }
      var l = i.prototype.toTex;
      return (
        (i.prototype.toTex = function (p) {
          var u;
          return (
            p &&
              typeof p.handler == "object" &&
              ge(p.handler, this.name) &&
              (u = p.handler[this.name](this, p)),
            typeof u != "undefined" ? u : l.call(this, p)
          );
        }),
        (i.prototype._toTex = function (p) {
          var u = this.args.map(function (m) {
              return m.toTex(p);
            }),
            o;
          Sd[this.name] && (o = Sd[this.name]),
            r[this.name] &&
              (typeof r[this.name].toTex == "function" ||
                typeof r[this.name].toTex == "object" ||
                typeof r[this.name].toTex == "string") &&
              (o = r[this.name].toTex);
          var c;
          switch (typeof o) {
            case "function":
              c = o(this, p);
              break;
            case "string":
              c = f(o, this, p);
              break;
            case "object":
              switch (typeof o[u.length]) {
                case "function":
                  c = o[u.length](this, p);
                  break;
                case "string":
                  c = f(o[u.length], this, p);
                  break;
              }
          }
          return typeof c != "undefined" ? c : f(nT, this, p);
        }),
        (i.prototype.getIdentifier = function () {
          return this.type + ":" + this.name;
        }),
        i
      );
    },
    { isClass: !0, isNode: !0 }
  ),
  Ed = "parse",
  $T = [
    "typed",
    "numeric",
    "config",
    "AccessorNode",
    "ArrayNode",
    "AssignmentNode",
    "BlockNode",
    "ConditionalNode",
    "ConstantNode",
    "FunctionAssignmentNode",
    "FunctionNode",
    "IndexNode",
    "ObjectNode",
    "OperatorNode",
    "ParenthesisNode",
    "RangeNode",
    "RelationalNode",
    "SymbolNode",
  ],
  zT = F(Ed, $T, (e) => {
    var {
        typed: r,
        numeric: t,
        config: n,
        AccessorNode: i,
        ArrayNode: a,
        AssignmentNode: s,
        BlockNode: f,
        ConditionalNode: l,
        ConstantNode: p,
        FunctionAssignmentNode: u,
        FunctionNode: o,
        IndexNode: c,
        ObjectNode: m,
        OperatorNode: v,
        ParenthesisNode: d,
        RangeNode: N,
        RelationalNode: g,
        SymbolNode: w,
      } = e,
      h = r(Ed, {
        string: function (Z) {
          return P(Z, {});
        },
        "Array | Matrix": function (Z) {
          return x(Z, {});
        },
        "string, Object": function (Z, ne) {
          var me = ne.nodes !== void 0 ? ne.nodes : {};
          return P(Z, me);
        },
        "Array | Matrix, Object": x,
      });
    function x(O) {
      var Z =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        ne = Z.nodes !== void 0 ? Z.nodes : {};
      return ye(O, function (me) {
        if (typeof me != "string") throw new TypeError("String expected");
        return P(me, ne);
      });
    }
    var b = { NULL: 0, DELIMITER: 1, NUMBER: 2, SYMBOL: 3, UNKNOWN: 4 },
      y = {
        ",": !0,
        "(": !0,
        ")": !0,
        "[": !0,
        "]": !0,
        "{": !0,
        "}": !0,
        '"': !0,
        "'": !0,
        ";": !0,
        "+": !0,
        "-": !0,
        "*": !0,
        ".*": !0,
        "/": !0,
        "./": !0,
        "%": !0,
        "^": !0,
        ".^": !0,
        "~": !0,
        "!": !0,
        "&": !0,
        "|": !0,
        "^|": !0,
        "=": !0,
        ":": !0,
        "?": !0,
        "==": !0,
        "!=": !0,
        "<": !0,
        ">": !0,
        "<=": !0,
        ">=": !0,
        "<<": !0,
        ">>": !0,
        ">>>": !0,
      },
      A = { mod: !0, to: !0, in: !0, and: !0, xor: !0, or: !0, not: !0 },
      S = { true: !0, false: !1, null: null, undefined: void 0 },
      E = ["NaN", "Infinity"];
    function M() {
      return {
        extraNodes: {},
        expression: "",
        comment: "",
        index: 0,
        token: "",
        tokenType: b.NULL,
        nestingLevel: 0,
        conditionalLevel: null,
      };
    }
    function _(O, Z) {
      return O.expression.substr(O.index, Z);
    }
    function C(O) {
      return _(O, 1);
    }
    function I(O) {
      O.index++;
    }
    function L(O) {
      return O.expression.charAt(O.index - 1);
    }
    function $(O) {
      return O.expression.charAt(O.index + 1);
    }
    function D(O) {
      for (O.tokenType = b.NULL, O.token = "", O.comment = ""; ; ) {
        if (C(O) === "#")
          for (
            ;
            C(O) !==
              `
` && C(O) !== "";

          )
            (O.comment += C(O)), I(O);
        if (h.isWhitespace(C(O), O.nestingLevel)) I(O);
        else break;
      }
      if (C(O) === "") {
        O.tokenType = b.DELIMITER;
        return;
      }
      if (
        C(O) ===
          `
` &&
        !O.nestingLevel
      ) {
        (O.tokenType = b.DELIMITER), (O.token = C(O)), I(O);
        return;
      }
      var Z = C(O),
        ne = _(O, 2),
        me = _(O, 3);
      if (me.length === 3 && y[me]) {
        (O.tokenType = b.DELIMITER), (O.token = me), I(O), I(O), I(O);
        return;
      }
      if (ne.length === 2 && y[ne]) {
        (O.tokenType = b.DELIMITER), (O.token = ne), I(O), I(O);
        return;
      }
      if (y[Z]) {
        (O.tokenType = b.DELIMITER), (O.token = Z), I(O);
        return;
      }
      if (h.isDigitDot(Z)) {
        O.tokenType = b.NUMBER;
        var Te = _(O, 2);
        if (Te === "0b" || Te === "0o" || Te === "0x") {
          for (
            O.token += C(O), I(O), O.token += C(O), I(O);
            h.isHexDigit(C(O));

          )
            (O.token += C(O)), I(O);
          if (C(O) === ".")
            for (O.token += ".", I(O); h.isHexDigit(C(O)); )
              (O.token += C(O)), I(O);
          else if (C(O) === "i")
            for (O.token += "i", I(O); h.isDigit(C(O)); )
              (O.token += C(O)), I(O);
          return;
        }
        if (C(O) === ".") {
          if (((O.token += C(O)), I(O), !h.isDigit(C(O)))) {
            O.tokenType = b.DELIMITER;
            return;
          }
        } else {
          for (; h.isDigit(C(O)); ) (O.token += C(O)), I(O);
          h.isDecimalMark(C(O), $(O)) && ((O.token += C(O)), I(O));
        }
        for (; h.isDigit(C(O)); ) (O.token += C(O)), I(O);
        if (C(O) === "E" || C(O) === "e") {
          if (h.isDigit($(O)) || $(O) === "-" || $(O) === "+") {
            if (
              ((O.token += C(O)),
              I(O),
              (C(O) === "+" || C(O) === "-") && ((O.token += C(O)), I(O)),
              !h.isDigit(C(O)))
            )
              throw qe(O, 'Digit expected, got "' + C(O) + '"');
            for (; h.isDigit(C(O)); ) (O.token += C(O)), I(O);
            if (h.isDecimalMark(C(O), $(O)))
              throw qe(O, 'Digit expected, got "' + C(O) + '"');
          } else if ($(O) === ".")
            throw (I(O), qe(O, 'Digit expected, got "' + C(O) + '"'));
        }
        return;
      }
      if (h.isAlpha(C(O), L(O), $(O))) {
        for (; h.isAlpha(C(O), L(O), $(O)) || h.isDigit(C(O)); )
          (O.token += C(O)), I(O);
        ge(A, O.token) ? (O.tokenType = b.DELIMITER) : (O.tokenType = b.SYMBOL);
        return;
      }
      for (O.tokenType = b.UNKNOWN; C(O) !== ""; ) (O.token += C(O)), I(O);
      throw qe(O, 'Syntax error in part "' + O.token + '"');
    }
    function B(O) {
      do D(O);
      while (
        O.token ===
        `
`
      );
    }
    function R(O) {
      O.nestingLevel++;
    }
    function T(O) {
      O.nestingLevel--;
    }
    (h.isAlpha = function (Z, ne, me) {
      return (
        h.isValidLatinOrGreek(Z) ||
        h.isValidMathSymbol(Z, me) ||
        h.isValidMathSymbol(ne, Z)
      );
    }),
      (h.isValidLatinOrGreek = function (Z) {
        return /^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(Z);
      }),
      (h.isValidMathSymbol = function (Z, ne) {
        return (
          /^[\uD835]$/.test(Z) &&
          /^[\uDC00-\uDFFF]$/.test(ne) &&
          /^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(
            ne
          )
        );
      }),
      (h.isWhitespace = function (Z, ne) {
        return (
          Z === " " ||
          Z === "	" ||
          (Z ===
            `
` &&
            ne > 0)
        );
      }),
      (h.isDecimalMark = function (Z, ne) {
        return Z === "." && ne !== "/" && ne !== "*" && ne !== "^";
      }),
      (h.isDigitDot = function (Z) {
        return (Z >= "0" && Z <= "9") || Z === ".";
      }),
      (h.isDigit = function (Z) {
        return Z >= "0" && Z <= "9";
      }),
      (h.isHexDigit = function (Z) {
        return (
          (Z >= "0" && Z <= "9") ||
          (Z >= "a" && Z <= "f") ||
          (Z >= "A" && Z <= "F")
        );
      });
    function P(O, Z) {
      var ne = M();
      jr(ne, { expression: O, extraNodes: Z }), D(ne);
      var me = W(ne);
      if (ne.token !== "")
        throw ne.tokenType === b.DELIMITER
          ? en(ne, "Unexpected operator " + ne.token)
          : qe(ne, 'Unexpected part "' + ne.token + '"');
      return me;
    }
    function W(O) {
      var Z,
        ne = [],
        me;
      for (
        O.token !== "" &&
        O.token !==
          `
` &&
        O.token !== ";" &&
        ((Z = J(O)), (Z.comment = O.comment));
        O.token ===
          `
` || O.token === ";";

      )
        ne.length === 0 &&
          Z &&
          ((me = O.token !== ";"), ne.push({ node: Z, visible: me })),
          D(O),
          O.token !==
            `
` &&
            O.token !== ";" &&
            O.token !== "" &&
            ((Z = J(O)),
            (Z.comment = O.comment),
            (me = O.token !== ";"),
            ne.push({ node: Z, visible: me }));
      return ne.length > 0
        ? new f(ne)
        : (Z || ((Z = new p(void 0)), (Z.comment = O.comment)), Z);
    }
    function J(O) {
      var Z,
        ne,
        me,
        Te,
        ze = G(O);
      if (O.token === "=") {
        if (gr(ze))
          return (Z = ze.name), B(O), (me = J(O)), new s(new w(Z), me);
        if (Sn(ze)) return B(O), (me = J(O)), new s(ze.object, ze.index, me);
        if (
          An(ze) &&
          gr(ze.fn) &&
          ((Te = !0),
          (ne = []),
          (Z = ze.name),
          ze.args.forEach(function (pr, Ks) {
            gr(pr) ? (ne[Ks] = pr.name) : (Te = !1);
          }),
          Te)
        )
          return B(O), (me = J(O)), new u(Z, ne, me);
        throw qe(O, "Invalid left hand side of assignment operator =");
      }
      return ze;
    }
    function G(O) {
      for (var Z = Y(O); O.token === "?"; ) {
        var ne = O.conditionalLevel;
        (O.conditionalLevel = O.nestingLevel), B(O);
        var me = Z,
          Te = J(O);
        if (O.token !== ":")
          throw qe(O, "False part of conditional expression expected");
        (O.conditionalLevel = null), B(O);
        var ze = J(O);
        (Z = new l(me, Te, ze)), (O.conditionalLevel = ne);
      }
      return Z;
    }
    function Y(O) {
      for (var Z = re(O); O.token === "or"; )
        B(O), (Z = new v("or", "or", [Z, re(O)]));
      return Z;
    }
    function re(O) {
      for (var Z = K(O); O.token === "xor"; )
        B(O), (Z = new v("xor", "xor", [Z, K(O)]));
      return Z;
    }
    function K(O) {
      for (var Z = ie(O); O.token === "and"; )
        B(O), (Z = new v("and", "and", [Z, ie(O)]));
      return Z;
    }
    function ie(O) {
      for (var Z = te(O); O.token === "|"; )
        B(O), (Z = new v("|", "bitOr", [Z, te(O)]));
      return Z;
    }
    function te(O) {
      for (var Z = oe(O); O.token === "^|"; )
        B(O), (Z = new v("^|", "bitXor", [Z, oe(O)]));
      return Z;
    }
    function oe(O) {
      for (var Z = ee(O); O.token === "&"; )
        B(O), (Z = new v("&", "bitAnd", [Z, ee(O)]));
      return Z;
    }
    function ee(O) {
      for (
        var Z = [de(O)],
          ne = [],
          me = {
            "==": "equal",
            "!=": "unequal",
            "<": "smaller",
            ">": "larger",
            "<=": "smallerEq",
            ">=": "largerEq",
          };
        ge(me, O.token);

      ) {
        var Te = { name: O.token, fn: me[O.token] };
        ne.push(Te), B(O), Z.push(de(O));
      }
      return Z.length === 1
        ? Z[0]
        : Z.length === 2
        ? new v(ne[0].name, ne[0].fn, Z)
        : new g(
            ne.map((ze) => ze.fn),
            Z
          );
    }
    function de(O) {
      var Z, ne, me, Te;
      Z = xe(O);
      for (
        var ze = {
          "<<": "leftShift",
          ">>": "rightArithShift",
          ">>>": "rightLogShift",
        };
        ge(ze, O.token);

      )
        (ne = O.token),
          (me = ze[ne]),
          B(O),
          (Te = [Z, xe(O)]),
          (Z = new v(ne, me, Te));
      return Z;
    }
    function xe(O) {
      var Z, ne, me, Te;
      Z = ce(O);
      for (var ze = { to: "to", in: "to" }; ge(ze, O.token); )
        (ne = O.token),
          (me = ze[ne]),
          B(O),
          ne === "in" && O.token === ""
            ? (Z = new v("*", "multiply", [Z, new w("in")], !0))
            : ((Te = [Z, ce(O)]), (Z = new v(ne, me, Te)));
      return Z;
    }
    function ce(O) {
      var Z,
        ne = [];
      if (
        (O.token === ":" ? (Z = new p(1)) : (Z = he(O)),
        O.token === ":" && O.conditionalLevel !== O.nestingLevel)
      ) {
        for (ne.push(Z); O.token === ":" && ne.length < 3; )
          B(O),
            O.token === ")" ||
            O.token === "]" ||
            O.token === "," ||
            O.token === ""
              ? ne.push(new w("end"))
              : ne.push(he(O));
        ne.length === 3
          ? (Z = new N(ne[0], ne[2], ne[1]))
          : (Z = new N(ne[0], ne[1]));
      }
      return Z;
    }
    function he(O) {
      var Z, ne, me, Te;
      Z = k(O);
      for (var ze = { "+": "add", "-": "subtract" }; ge(ze, O.token); ) {
        (ne = O.token), (me = ze[ne]), B(O);
        var pr = k(O);
        pr.isPercentage
          ? (Te = [Z, new v("*", "multiply", [Z, pr])])
          : (Te = [Z, pr]),
          (Z = new v(ne, me, Te));
      }
      return Z;
    }
    function k(O) {
      var Z, ne, me, Te;
      (Z = Q(O)), (ne = Z);
      for (
        var ze = {
          "*": "multiply",
          ".*": "dotMultiply",
          "/": "divide",
          "./": "dotDivide",
        };
        ge(ze, O.token);

      )
        (me = O.token),
          (Te = ze[me]),
          B(O),
          (ne = Q(O)),
          (Z = new v(me, Te, [Z, ne]));
      return Z;
    }
    function Q(O) {
      var Z, ne;
      for (
        Z = V(O), ne = Z;
        O.tokenType === b.SYMBOL ||
        (O.token === "in" && Ve(Z)) ||
        (O.tokenType === b.NUMBER && !Ve(ne) && (!Ir(ne) || ne.op === "!")) ||
        O.token === "(";

      )
        (ne = V(O)), (Z = new v("*", "multiply", [Z, ne], !0));
      return Z;
    }
    function V(O) {
      for (var Z = q(O), ne = Z, me = []; O.token === "/" && Ve(ne); )
        if ((me.push(jr({}, O)), B(O), O.tokenType === b.NUMBER))
          if (
            (me.push(jr({}, O)),
            B(O),
            O.tokenType === b.SYMBOL || O.token === "(")
          )
            jr(O, me.pop()),
              me.pop(),
              (ne = q(O)),
              (Z = new v("/", "divide", [Z, ne]));
          else {
            me.pop(), jr(O, me.pop());
            break;
          }
        else {
          jr(O, me.pop());
          break;
        }
      return Z;
    }
    function q(O) {
      var Z, ne, me, Te;
      Z = X(O);
      for (var ze = { "%": "mod", mod: "mod" }; ge(ze, O.token); )
        (ne = O.token),
          (me = ze[ne]),
          B(O),
          ne === "%" && O.tokenType === b.DELIMITER && O.token !== "("
            ? (Z = new v("/", "divide", [Z, new p(100)], !1, !0))
            : ((Te = [Z, X(O)]), (Z = new v(ne, me, Te)));
      return Z;
    }
    function X(O) {
      var Z,
        ne,
        me,
        Te = { "-": "unaryMinus", "+": "unaryPlus", "~": "bitNot", not: "not" };
      return ge(Te, O.token)
        ? ((me = Te[O.token]),
          (Z = O.token),
          B(O),
          (ne = [X(O)]),
          new v(Z, me, ne))
        : z(O);
    }
    function z(O) {
      var Z, ne, me, Te;
      return (
        (Z = U(O)),
        (O.token === "^" || O.token === ".^") &&
          ((ne = O.token),
          (me = ne === "^" ? "pow" : "dotPow"),
          B(O),
          (Te = [Z, X(O)]),
          (Z = new v(ne, me, Te))),
        Z
      );
    }
    function U(O) {
      var Z, ne, me, Te;
      Z = j(O);
      for (var ze = { "!": "factorial", "'": "ctranspose" }; ge(ze, O.token); )
        (ne = O.token),
          (me = ze[ne]),
          D(O),
          (Te = [Z]),
          (Z = new v(ne, me, Te)),
          (Z = ae(O, Z));
      return Z;
    }
    function j(O) {
      var Z = [];
      if (O.tokenType === b.SYMBOL && ge(O.extraNodes, O.token)) {
        var ne = O.extraNodes[O.token];
        if ((D(O), O.token === "(")) {
          if (((Z = []), R(O), D(O), O.token !== ")"))
            for (Z.push(J(O)); O.token === ","; ) D(O), Z.push(J(O));
          if (O.token !== ")") throw qe(O, "Parenthesis ) expected");
          T(O), D(O);
        }
        return new ne(Z);
      }
      return H(O);
    }
    function H(O) {
      var Z, ne;
      return O.tokenType === b.SYMBOL ||
        (O.tokenType === b.DELIMITER && O.token in A)
        ? ((ne = O.token),
          D(O),
          ge(S, ne)
            ? (Z = new p(S[ne]))
            : E.indexOf(ne) !== -1
            ? (Z = new p(t(ne, "number")))
            : (Z = new w(ne)),
          (Z = ae(O, Z)),
          Z)
        : ue(O);
    }
    function ae(O, Z, ne) {
      for (
        var me;
        (O.token === "(" || O.token === "[" || O.token === ".") &&
        (!ne || ne.indexOf(O.token) !== -1);

      )
        if (((me = []), O.token === "("))
          if (gr(Z) || Sn(Z)) {
            if ((R(O), D(O), O.token !== ")"))
              for (me.push(J(O)); O.token === ","; ) D(O), me.push(J(O));
            if (O.token !== ")") throw qe(O, "Parenthesis ) expected");
            T(O), D(O), (Z = new o(Z, me));
          } else return Z;
        else if (O.token === "[") {
          if ((R(O), D(O), O.token !== "]"))
            for (me.push(J(O)); O.token === ","; ) D(O), me.push(J(O));
          if (O.token !== "]") throw qe(O, "Parenthesis ] expected");
          T(O), D(O), (Z = new i(Z, new c(me)));
        } else {
          if ((D(O), O.tokenType !== b.SYMBOL))
            throw qe(O, "Property name expected after dot");
          me.push(new p(O.token)), D(O);
          var Te = !0;
          Z = new i(Z, new c(me, Te));
        }
      return Z;
    }
    function ue(O) {
      var Z, ne;
      return O.token === '"'
        ? ((ne = ve(O)), (Z = new p(ne)), (Z = ae(O, Z)), Z)
        : fe(O);
    }
    function ve(O) {
      for (var Z = ""; C(O) !== "" && C(O) !== '"'; )
        C(O) === "\\" && ((Z += C(O)), I(O)), (Z += C(O)), I(O);
      if ((D(O), O.token !== '"')) throw qe(O, 'End of string " expected');
      return D(O), JSON.parse('"' + Z + '"');
    }
    function fe(O) {
      var Z, ne;
      return O.token === "'"
        ? ((ne = pe(O)), (Z = new p(ne)), (Z = ae(O, Z)), Z)
        : we(O);
    }
    function pe(O) {
      for (var Z = ""; C(O) !== "" && C(O) !== "'"; )
        C(O) === "\\" && ((Z += C(O)), I(O)), (Z += C(O)), I(O);
      if ((D(O), O.token !== "'")) throw qe(O, "End of string ' expected");
      return D(O), JSON.parse('"' + Z + '"');
    }
    function we(O) {
      var Z, ne, me, Te;
      if (O.token === "[") {
        if ((R(O), D(O), O.token !== "]")) {
          var ze = Ge(O);
          if (O.token === ";") {
            for (me = 1, ne = [ze]; O.token === ";"; )
              D(O), (ne[me] = Ge(O)), me++;
            if (O.token !== "]") throw qe(O, "End of matrix ] expected");
            T(O), D(O), (Te = ne[0].items.length);
            for (var pr = 1; pr < me; pr++)
              if (ne[pr].items.length !== Te)
                throw en(
                  O,
                  "Column dimensions mismatch (" +
                    ne[pr].items.length +
                    " !== " +
                    Te +
                    ")"
                );
            Z = new a(ne);
          } else {
            if (O.token !== "]") throw qe(O, "End of matrix ] expected");
            T(O), D(O), (Z = ze);
          }
        } else T(O), D(O), (Z = new a([]));
        return ae(O, Z);
      }
      return ir(O);
    }
    function Ge(O) {
      for (var Z = [J(O)], ne = 1; O.token === ","; )
        D(O), (Z[ne] = J(O)), ne++;
      return new a(Z);
    }
    function ir(O) {
      if (O.token === "{") {
        R(O);
        var Z,
          ne = {};
        do
          if ((D(O), O.token !== "}")) {
            if (O.token === '"') Z = ve(O);
            else if (O.token === "'") Z = pe(O);
            else if (
              O.tokenType === b.SYMBOL ||
              (O.tokenType === b.DELIMITER && O.token in A)
            )
              (Z = O.token), D(O);
            else throw qe(O, "Symbol or string expected as object key");
            if (O.token !== ":")
              throw qe(O, "Colon : expected after object key");
            D(O), (ne[Z] = J(O));
          }
        while (O.token === ",");
        if (O.token !== "}")
          throw qe(O, "Comma , or bracket } expected after object value");
        T(O), D(O);
        var me = new m(ne);
        return (me = ae(O, me)), me;
      }
      return Je(O);
    }
    function Je(O) {
      var Z;
      return O.tokenType === b.NUMBER
        ? ((Z = O.token), D(O), new p(t(Z, n.number)))
        : at(O);
    }
    function at(O) {
      var Z;
      if (O.token === "(") {
        if ((R(O), D(O), (Z = J(O)), O.token !== ")"))
          throw qe(O, "Parenthesis ) expected");
        return T(O), D(O), (Z = new d(Z)), (Z = ae(O, Z)), Z;
      }
      return Qr(O);
    }
    function Qr(O) {
      throw O.token === ""
        ? qe(O, "Unexpected end of expression")
        : qe(O, "Value expected");
    }
    function Ft(O) {
      return O.index - O.token.length + 1;
    }
    function qe(O, Z) {
      var ne = Ft(O),
        me = new SyntaxError(Z + " (char " + ne + ")");
      return (me.char = ne), me;
    }
    function en(O, Z) {
      var ne = Ft(O),
        me = new SyntaxError(Z + " (char " + ne + ")");
      return (me.char = ne), me;
    }
    return h;
  }),
  Cd = "compile",
  RT = ["typed", "parse"],
  FT = F(Cd, RT, (e) => {
    var { typed: r, parse: t } = e;
    return r(Cd, {
      string: function (i) {
        return t(i).compile();
      },
      "Array | Matrix": function (i) {
        return ye(i, function (a) {
          return t(a).compile();
        });
      },
    });
  }),
  Od = "evaluate",
  PT = ["typed", "parse"],
  LT = F(Od, PT, (e) => {
    var { typed: r, parse: t } = e;
    return r(Od, {
      string: function (i) {
        var a = Ht();
        return t(i).compile().evaluate(a);
      },
      "string, Map | Object": function (i, a) {
        return t(i).compile().evaluate(a);
      },
      "Array | Matrix": function (i) {
        var a = Ht();
        return ye(i, function (s) {
          return t(s).compile().evaluate(a);
        });
      },
      "Array | Matrix, Map | Object": function (i, a) {
        return ye(i, function (s) {
          return t(s).compile().evaluate(a);
        });
      },
    });
  }),
  kT = "Parser",
  UT = ["evaluate"],
  qT = F(
    kT,
    UT,
    (e) => {
      var { evaluate: r } = e;
      function t() {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        Object.defineProperty(this, "scope", { value: Ht(), writable: !1 });
      }
      return (
        (t.prototype.type = "Parser"),
        (t.prototype.isParser = !0),
        (t.prototype.evaluate = function (n) {
          return r(n, this.scope);
        }),
        (t.prototype.get = function (n) {
          if (this.scope.has(n)) return this.scope.get(n);
        }),
        (t.prototype.getAll = function () {
          return vN(this.scope);
        }),
        (t.prototype.getAllAsMap = function () {
          return this.scope;
        }),
        (t.prototype.set = function (n, i) {
          return this.scope.set(n, i), i;
        }),
        (t.prototype.remove = function (n) {
          this.scope.delete(n);
        }),
        (t.prototype.clear = function () {
          this.scope.clear();
        }),
        t
      );
    },
    { isClass: !0 }
  ),
  Td = "parser",
  HT = ["typed", "Parser"],
  VT = F(Td, HT, (e) => {
    var { typed: r, Parser: t } = e;
    return r(Td, {
      "": function () {
        return new t();
      },
    });
  }),
  Dd = "lup",
  GT = [
    "typed",
    "matrix",
    "abs",
    "addScalar",
    "divideScalar",
    "multiplyScalar",
    "subtract",
    "larger",
    "equalScalar",
    "unaryMinus",
    "DenseMatrix",
    "SparseMatrix",
    "Spa",
  ],
  WT = F(Dd, GT, (e) => {
    var {
      typed: r,
      matrix: t,
      abs: n,
      addScalar: i,
      divideScalar: a,
      multiplyScalar: s,
      subtract: f,
      larger: l,
      equalScalar: p,
      unaryMinus: u,
      DenseMatrix: o,
      SparseMatrix: c,
      Spa: m,
    } = e;
    return r(Dd, {
      DenseMatrix: function (g) {
        return v(g);
      },
      SparseMatrix: function (g) {
        return d(g);
      },
      Array: function (g) {
        var w = t(g),
          h = v(w);
        return { L: h.L.valueOf(), U: h.U.valueOf(), p: h.p };
      },
    });
    function v(N) {
      var g = N._size[0],
        w = N._size[1],
        h = Math.min(g, w),
        x = Me(N._data),
        b = [],
        y = [g, h],
        A = [],
        S = [h, w],
        E,
        M,
        _,
        C = [];
      for (E = 0; E < g; E++) C[E] = E;
      for (M = 0; M < w; M++) {
        if (M > 0)
          for (E = 0; E < g; E++) {
            var I = Math.min(E, M),
              L = 0;
            for (_ = 0; _ < I; _++) L = i(L, s(x[E][_], x[_][M]));
            x[E][M] = f(x[E][M], L);
          }
        var $ = M,
          D = 0,
          B = 0;
        for (E = M; E < g; E++) {
          var R = x[E][M],
            T = n(R);
          l(T, D) && (($ = E), (D = T), (B = R));
        }
        if (
          (M !== $ && ((C[M] = [C[$], (C[$] = C[M])][0]), o._swapRows(M, $, x)),
          M < g)
        )
          for (E = M + 1; E < g; E++) {
            var P = x[E][M];
            p(P, 0) || (x[E][M] = a(x[E][M], B));
          }
      }
      for (M = 0; M < w; M++)
        for (E = 0; E < g; E++) {
          if ((M === 0 && (E < w && (A[E] = []), (b[E] = [])), E < M)) {
            E < w && (A[E][M] = x[E][M]), M < g && (b[E][M] = 0);
            continue;
          }
          if (E === M) {
            E < w && (A[E][M] = x[E][M]), M < g && (b[E][M] = 1);
            continue;
          }
          E < w && (A[E][M] = 0), M < g && (b[E][M] = x[E][M]);
        }
      var W = new o({ data: b, size: y }),
        J = new o({ data: A, size: S }),
        G = [];
      for (E = 0, h = C.length; E < h; E++) G[C[E]] = E;
      return {
        L: W,
        U: J,
        p: G,
        toString: function () {
          return (
            "L: " +
            this.L.toString() +
            `
U: ` +
            this.U.toString() +
            `
P: ` +
            this.p
          );
        },
      };
    }
    function d(N) {
      var g = N._size[0],
        w = N._size[1],
        h = Math.min(g, w),
        x = N._values,
        b = N._index,
        y = N._ptr,
        A = [],
        S = [],
        E = [],
        M = [g, h],
        _ = [],
        C = [],
        I = [],
        L = [h, w],
        $,
        D,
        B,
        R = [],
        T = [];
      for ($ = 0; $ < g; $++) (R[$] = $), (T[$] = $);
      var P = function (G, Y) {
          var re = T[G],
            K = T[Y];
          (R[re] = Y), (R[K] = G), (T[G] = K), (T[Y] = re);
        },
        W = function () {
          var G = new m();
          D < g && (E.push(A.length), A.push(1), S.push(D)), I.push(_.length);
          var Y = y[D],
            re = y[D + 1];
          for (B = Y; B < re; B++) ($ = b[B]), G.set(R[$], x[B]);
          D > 0 &&
            G.forEach(0, D - 1, function (oe, ee) {
              c._forEachRow(oe, A, S, E, function (de, xe) {
                de > oe && G.accumulate(de, u(s(xe, ee)));
              });
            });
          var K = D,
            ie = G.get(D),
            te = n(ie);
          G.forEach(D + 1, g - 1, function (oe, ee) {
            var de = n(ee);
            l(de, te) && ((K = oe), (te = de), (ie = ee));
          }),
            D !== K &&
              (c._swapRows(D, K, M[1], A, S, E),
              c._swapRows(D, K, L[1], _, C, I),
              G.swap(D, K),
              P(D, K)),
            G.forEach(0, g - 1, function (oe, ee) {
              oe <= D
                ? (_.push(ee), C.push(oe))
                : ((ee = a(ee, ie)), p(ee, 0) || (A.push(ee), S.push(oe)));
            });
        };
      for (D = 0; D < w; D++) W();
      return (
        I.push(_.length),
        E.push(A.length),
        {
          L: new c({ values: A, index: S, ptr: E, size: M }),
          U: new c({ values: _, index: C, ptr: I, size: L }),
          p: R,
          toString: function () {
            return (
              "L: " +
              this.L.toString() +
              `
U: ` +
              this.U.toString() +
              `
P: ` +
              this.p
            );
          },
        }
      );
    }
  }),
  _d = "qr",
  ZT = [
    "typed",
    "matrix",
    "zeros",
    "identity",
    "isZero",
    "equal",
    "sign",
    "sqrt",
    "conj",
    "unaryMinus",
    "addScalar",
    "divideScalar",
    "multiplyScalar",
    "subtract",
    "complex",
  ],
  QT = F(_d, ZT, (e) => {
    var {
      typed: r,
      matrix: t,
      zeros: n,
      identity: i,
      isZero: a,
      equal: s,
      sign: f,
      sqrt: l,
      conj: p,
      unaryMinus: u,
      addScalar: o,
      divideScalar: c,
      multiplyScalar: m,
      subtract: v,
      complex: d,
    } = e;
    return jr(
      r(_d, {
        DenseMatrix: function (x) {
          return g(x);
        },
        SparseMatrix: function (x) {
          return w();
        },
        Array: function (x) {
          var b = t(x),
            y = g(b);
          return { Q: y.Q.valueOf(), R: y.R.valueOf() };
        },
      }),
      { _denseQRimpl: N }
    );
    function N(h) {
      var x = h._size[0],
        b = h._size[1],
        y = i([x], "dense"),
        A = y._data,
        S = h.clone(),
        E = S._data,
        M,
        _,
        C,
        I = n([x], "");
      for (C = 0; C < Math.min(b, x); ++C) {
        var L = E[C][C],
          $ = u(s(L, 0) ? 1 : f(L)),
          D = p($),
          B = 0;
        for (M = C; M < x; M++) B = o(B, m(E[M][C], p(E[M][C])));
        var R = m($, l(B));
        if (!a(R)) {
          var T = v(L, R);
          for (I[C] = 1, M = C + 1; M < x; M++) I[M] = c(E[M][C], T);
          var P = u(p(c(T, R))),
            W = void 0;
          for (_ = C; _ < b; _++) {
            for (W = 0, M = C; M < x; M++) W = o(W, m(p(I[M]), E[M][_]));
            for (W = m(W, P), M = C; M < x; M++)
              E[M][_] = m(v(E[M][_], m(I[M], W)), D);
          }
          for (M = 0; M < x; M++) {
            for (W = 0, _ = C; _ < x; _++) W = o(W, m(A[M][_], I[_]));
            for (W = m(W, P), _ = C; _ < x; ++_)
              A[M][_] = c(v(A[M][_], m(W, p(I[_]))), D);
          }
        }
      }
      return {
        Q: y,
        R: S,
        toString: function () {
          return (
            "Q: " +
            this.Q.toString() +
            `
R: ` +
            this.R.toString()
          );
        },
      };
    }
    function g(h) {
      var x = N(h),
        b = x.R._data;
      if (h._data.length > 0)
        for (
          var y = b[0][0].type === "Complex" ? d(0) : 0, A = 0;
          A < b.length;
          ++A
        )
          for (var S = 0; S < A && S < (b[0] || []).length; ++S) b[A][S] = y;
      return x;
    }
    function w(h) {
      throw new Error("qr not implemented for sparse matrices yet");
    }
  });
function YT(e, r, t, n) {
  for (
    var i = e._values,
      a = e._index,
      s = e._ptr,
      f = e._size,
      l = e._datatype,
      p = f[0],
      u = f[1],
      o = n && e._values ? [] : null,
      c = [],
      m = [],
      v = 0,
      d = 0;
    d < u;
    d++
  ) {
    m[d] = v;
    for (var N = t ? t[d] : d, g = s[N], w = s[N + 1], h = g; h < w; h++) {
      var x = r ? r[a[h]] : a[h];
      (c[v] = x), o && (o[v] = i[h]), v++;
    }
  }
  return (
    (m[u] = v),
    e.createSparseMatrix({
      values: o,
      index: c,
      ptr: m,
      size: [p, u],
      datatype: l,
    })
  );
}
function F1(e, r, t, n, i, a, s) {
  var f = 0;
  for (t[s] = e; f >= 0; ) {
    var l = t[s + f],
      p = t[n + l];
    p === -1
      ? (f--, (a[r++] = l))
      : ((t[n + l] = t[i + p]), ++f, (t[s + f] = p));
  }
  return r;
}
function XT(e, r) {
  if (!e) return null;
  var t = 0,
    n,
    i = [],
    a = [],
    s = 0,
    f = r,
    l = 2 * r;
  for (n = 0; n < r; n++) a[s + n] = -1;
  for (n = r - 1; n >= 0; n--)
    e[n] !== -1 && ((a[f + n] = a[s + e[n]]), (a[s + e[n]] = n));
  for (n = 0; n < r; n++) e[n] === -1 && (t = F1(n, t, a, s, f, i, l));
  return i;
}
function jT(e, r) {
  if (!e) return null;
  var t = e._index,
    n = e._ptr,
    i = e._size,
    a = i[0],
    s = i[1],
    f = [],
    l = [],
    p = 0,
    u = s,
    o,
    c;
  if (r) for (o = 0; o < a; o++) l[u + o] = -1;
  for (var m = 0; m < s; m++) {
    (f[m] = -1), (l[p + m] = -1);
    for (var v = n[m], d = n[m + 1], N = v; N < d; N++) {
      var g = t[N];
      for (o = r ? l[u + g] : g; o !== -1 && o < m; o = c)
        (c = l[p + o]), (l[p + o] = m), c === -1 && (f[o] = m);
      r && (l[u + g] = m);
    }
  }
  return f;
}
function JT(e, r, t) {
  for (
    var n = e._values,
      i = e._index,
      a = e._ptr,
      s = e._size,
      f = s[1],
      l = 0,
      p = 0;
    p < f;
    p++
  ) {
    var u = a[p];
    for (a[p] = l; u < a[p + 1]; u++)
      r(i[u], p, n ? n[u] : 1, t) && ((i[l] = i[u]), n && (n[l] = n[u]), l++);
  }
  return (
    (a[f] = l), i.splice(l, i.length - l), n && n.splice(l, n.length - l), l
  );
}
function on(e) {
  return -e - 2;
}
var KT = "csAmd",
  eD = ["add", "multiply", "transpose"],
  rD = F(KT, eD, (e) => {
    var { add: r, multiply: t, transpose: n } = e;
    return function (u, o) {
      if (!o || u <= 0 || u > 3) return null;
      var c = o._size,
        m = c[0],
        v = c[1],
        d = 0,
        N = Math.max(16, 10 * Math.sqrt(v));
      N = Math.min(v - 2, N);
      var g = i(u, o, m, v, N);
      JT(g, l, null);
      for (
        var w = g._index,
          h = g._ptr,
          x = h[v],
          b = [],
          y = [],
          A = 0,
          S = v + 1,
          E = 2 * (v + 1),
          M = 3 * (v + 1),
          _ = 4 * (v + 1),
          C = 5 * (v + 1),
          I = 6 * (v + 1),
          L = 7 * (v + 1),
          $ = b,
          D = a(v, h, y, A, M, $, E, L, S, I, _, C),
          B = s(v, h, y, C, _, I, N, S, M, $, E),
          R = 0,
          T,
          P,
          W,
          J,
          G,
          Y,
          re,
          K,
          ie,
          te,
          oe,
          ee,
          de,
          xe,
          ce,
          he;
        B < v;

      ) {
        for (W = -1; R < v && (W = y[M + R]) === -1; R++);
        y[E + W] !== -1 && ($[y[E + W]] = -1), (y[M + R] = y[E + W]);
        var k = y[_ + W],
          Q = y[S + W];
        B += Q;
        var V = 0;
        y[S + W] = -Q;
        var q = h[W],
          X = k === 0 ? q : x,
          z = X;
        for (J = 1; J <= k + 1; J++) {
          for (
            J > k
              ? ((Y = W), (re = q), (K = y[A + W] - k))
              : ((Y = w[q++]), (re = h[Y]), (K = y[A + Y])),
              G = 1;
            G <= K;
            G++
          )
            (T = w[re++]),
              !((ie = y[S + T]) <= 0) &&
                ((V += ie),
                (y[S + T] = -ie),
                (w[z++] = T),
                y[E + T] !== -1 && ($[y[E + T]] = $[T]),
                $[T] !== -1
                  ? (y[E + $[T]] = y[E + T])
                  : (y[M + y[C + T]] = y[E + T]));
          Y !== W && ((h[Y] = on(W)), (y[I + Y] = 0));
        }
        for (
          k !== 0 && (x = z),
            y[C + W] = V,
            h[W] = X,
            y[A + W] = z - X,
            y[_ + W] = -2,
            D = f(D, d, y, I, v),
            te = X;
          te < z;
          te++
        )
          if (((T = w[te]), !((oe = y[_ + T]) <= 0))) {
            ie = -y[S + T];
            var U = D - ie;
            for (q = h[T], ee = h[T] + oe - 1; q <= ee; q++)
              (Y = w[q]),
                y[I + Y] >= D
                  ? (y[I + Y] -= ie)
                  : y[I + Y] !== 0 && (y[I + Y] = y[C + Y] + U);
          }
        for (te = X; te < z; te++) {
          for (
            T = w[te],
              ee = h[T],
              de = ee + y[_ + T] - 1,
              xe = ee,
              ce = 0,
              he = 0,
              q = ee;
            q <= de;
            q++
          )
            if (((Y = w[q]), y[I + Y] !== 0)) {
              var j = y[I + Y] - D;
              j > 0
                ? ((he += j), (w[xe++] = Y), (ce += Y))
                : ((h[Y] = on(W)), (y[I + Y] = 0));
            }
          y[_ + T] = xe - ee + 1;
          var H = xe,
            ae = ee + y[A + T];
          for (q = de + 1; q < ae; q++) {
            P = w[q];
            var ue = y[S + P];
            ue <= 0 || ((he += ue), (w[xe++] = P), (ce += P));
          }
          he === 0
            ? ((h[T] = on(W)),
              (ie = -y[S + T]),
              (V -= ie),
              (Q += ie),
              (B += ie),
              (y[S + T] = 0),
              (y[_ + T] = -1))
            : ((y[C + T] = Math.min(y[C + T], he)),
              (w[xe] = w[H]),
              (w[H] = w[ee]),
              (w[ee] = W),
              (y[A + T] = xe - ee + 1),
              (ce = (ce < 0 ? -ce : ce) % v),
              (y[E + T] = y[L + ce]),
              (y[L + ce] = T),
              ($[T] = ce));
        }
        for (
          y[C + W] = V, d = Math.max(d, V), D = f(D + d, d, y, I, v), te = X;
          te < z;
          te++
        )
          if (((T = w[te]), !(y[S + T] >= 0)))
            for (
              ce = $[T], T = y[L + ce], y[L + ce] = -1;
              T !== -1 && y[E + T] !== -1;
              T = y[E + T], D++
            ) {
              for (
                K = y[A + T], oe = y[_ + T], q = h[T] + 1;
                q <= h[T] + K - 1;
                q++
              )
                y[I + w[q]] = D;
              var ve = T;
              for (P = y[E + T]; P !== -1; ) {
                var fe = y[A + P] === K && y[_ + P] === oe;
                for (q = h[P] + 1; fe && q <= h[P] + K - 1; q++)
                  y[I + w[q]] !== D && (fe = 0);
                fe
                  ? ((h[P] = on(T)),
                    (y[S + T] += y[S + P]),
                    (y[S + P] = 0),
                    (y[_ + P] = -1),
                    (P = y[E + P]),
                    (y[E + ve] = P))
                  : ((ve = P), (P = y[E + P]));
              }
            }
        for (q = X, te = X; te < z; te++)
          (T = w[te]),
            !((ie = -y[S + T]) <= 0) &&
              ((y[S + T] = ie),
              (he = y[C + T] + V - ie),
              (he = Math.min(he, v - B - ie)),
              y[M + he] !== -1 && ($[y[M + he]] = T),
              (y[E + T] = y[M + he]),
              ($[T] = -1),
              (y[M + he] = T),
              (R = Math.min(R, he)),
              (y[C + T] = he),
              (w[q++] = T));
        (y[S + W] = Q),
          (y[A + W] = q - X) === 0 && ((h[W] = -1), (y[I + W] = 0)),
          k !== 0 && (x = q);
      }
      for (T = 0; T < v; T++) h[T] = on(h[T]);
      for (P = 0; P <= v; P++) y[M + P] = -1;
      for (P = v; P >= 0; P--)
        y[S + P] > 0 || ((y[E + P] = y[M + h[P]]), (y[M + h[P]] = P));
      for (Y = v; Y >= 0; Y--)
        y[S + Y] <= 0 ||
          (h[Y] !== -1 && ((y[E + Y] = y[M + h[Y]]), (y[M + h[Y]] = Y)));
      for (W = 0, T = 0; T <= v; T++)
        h[T] === -1 && (W = F1(T, W, y, M, E, b, I));
      return b.splice(b.length - 1, 1), b;
    };
    function i(p, u, o, c, m) {
      var v = n(u);
      if (p === 1 && c === o) return r(u, v);
      if (p === 2) {
        for (var d = v._index, N = v._ptr, g = 0, w = 0; w < o; w++) {
          var h = N[w];
          if (((N[w] = g), !(N[w + 1] - h > m)))
            for (var x = N[w + 1]; h < x; h++) d[g++] = d[h];
        }
        return (N[o] = g), (u = n(v)), t(v, u);
      }
      return t(v, u);
    }
    function a(p, u, o, c, m, v, d, N, g, w, h, x) {
      for (var b = 0; b < p; b++) o[c + b] = u[b + 1] - u[b];
      o[c + p] = 0;
      for (var y = 0; y <= p; y++)
        (o[m + y] = -1),
          (v[y] = -1),
          (o[d + y] = -1),
          (o[N + y] = -1),
          (o[g + y] = 1),
          (o[w + y] = 1),
          (o[h + y] = 0),
          (o[x + y] = o[c + y]);
      var A = f(0, 0, o, w, p);
      return (o[h + p] = -2), (u[p] = -1), (o[w + p] = 0), A;
    }
    function s(p, u, o, c, m, v, d, N, g, w, h) {
      for (var x = 0, b = 0; b < p; b++) {
        var y = o[c + b];
        if (y === 0) (o[m + b] = -2), x++, (u[b] = -1), (o[v + b] = 0);
        else if (y > d)
          (o[N + b] = 0), (o[m + b] = -1), x++, (u[b] = on(p)), o[N + p]++;
        else {
          var A = o[g + y];
          A !== -1 && (w[A] = b), (o[h + b] = o[g + y]), (o[g + y] = b);
        }
      }
      return x;
    }
    function f(p, u, o, c, m) {
      if (p < 2 || p + u < 0) {
        for (var v = 0; v < m; v++) o[c + v] !== 0 && (o[c + v] = 1);
        p = 2;
      }
      return p;
    }
    function l(p, u) {
      return p !== u;
    }
  });
function tD(e, r, t, n, i, a, s) {
  var f,
    l,
    p = 0,
    u;
  if (e <= r || t[n + r] <= t[i + e]) return -1;
  t[i + e] = t[n + r];
  var o = t[a + e];
  if (((t[a + e] = r), o === -1)) (p = 1), (u = e);
  else {
    for (p = 2, u = o; u !== t[s + u]; u = t[s + u]);
    for (f = o; f !== u; f = l) (l = t[s + f]), (t[s + f] = u);
  }
  return { jleaf: p, q: u };
}
var nD = "csCounts",
  iD = ["transpose"],
  aD = F(nD, iD, (e) => {
    var { transpose: r } = e;
    return function (t, n, i, a) {
      if (!t || !n || !i) return null;
      var s = t._size,
        f = s[0],
        l = s[1],
        p,
        u,
        o,
        c,
        m,
        v,
        d,
        N = 4 * l + (a ? l + f + 1 : 0),
        g = [],
        w = 0,
        h = l,
        x = 2 * l,
        b = 3 * l,
        y = 4 * l,
        A = 5 * l + 1;
      for (o = 0; o < N; o++) g[o] = -1;
      var S = [],
        E = r(t),
        M = E._index,
        _ = E._ptr;
      for (o = 0; o < l; o++)
        for (
          u = i[o], S[u] = g[b + u] === -1 ? 1 : 0;
          u !== -1 && g[b + u] === -1;
          u = n[u]
        )
          g[b + u] = o;
      if (a) {
        for (o = 0; o < l; o++) g[i[o]] = o;
        for (p = 0; p < f; p++) {
          for (o = l, v = _[p], d = _[p + 1], m = v; m < d; m++)
            o = Math.min(o, g[M[m]]);
          (g[A + p] = g[y + o]), (g[y + o] = p);
        }
      }
      for (p = 0; p < l; p++) g[w + p] = p;
      for (o = 0; o < l; o++) {
        for (
          u = i[o], n[u] !== -1 && S[n[u]]--, c = a ? g[y + o] : u;
          c !== -1;
          c = a ? g[A + c] : -1
        )
          for (m = _[c]; m < _[c + 1]; m++) {
            p = M[m];
            var C = tD(p, u, g, b, h, x, w);
            C.jleaf >= 1 && S[u]++, C.jleaf === 2 && S[C.q]--;
          }
        n[u] !== -1 && (g[w + u] = n[u]);
      }
      for (u = 0; u < l; u++) n[u] !== -1 && (S[n[u]] += S[u]);
      return S;
    };
  }),
  oD = "csSqr",
  sD = ["add", "multiply", "transpose"],
  uD = F(oD, sD, (e) => {
    var { add: r, multiply: t, transpose: n } = e,
      i = rD({ add: r, multiply: t, transpose: n }),
      a = aD({ transpose: n });
    return function (l, p, u) {
      var o = p._ptr,
        c = p._size,
        m = c[1],
        v,
        d = {};
      if (((d.q = i(l, p)), l && !d.q)) return null;
      if (u) {
        var N = l ? YT(p, null, d.q, 0) : p;
        d.parent = jT(N, 1);
        var g = XT(d.parent, m);
        if (((d.cp = a(N, d.parent, g, 1)), N && d.parent && d.cp && s(N, d)))
          for (d.unz = 0, v = 0; v < m; v++) d.unz += d.cp[v];
      } else (d.unz = 4 * o[m] + m), (d.lnz = d.unz);
      return d;
    };
    function s(f, l) {
      var p = f._ptr,
        u = f._index,
        o = f._size,
        c = o[0],
        m = o[1];
      (l.pinv = []), (l.leftmost = []);
      var v = l.parent,
        d = l.pinv,
        N = l.leftmost,
        g = [],
        w = 0,
        h = c,
        x = c + m,
        b = c + 2 * m,
        y,
        A,
        S,
        E,
        M;
      for (A = 0; A < m; A++) (g[h + A] = -1), (g[x + A] = -1), (g[b + A] = 0);
      for (y = 0; y < c; y++) N[y] = -1;
      for (A = m - 1; A >= 0; A--)
        for (E = p[A], M = p[A + 1], S = E; S < M; S++) N[u[S]] = A;
      for (y = c - 1; y >= 0; y--)
        (d[y] = -1),
          (A = N[y]),
          A !== -1 &&
            (g[b + A]++ === 0 && (g[x + A] = y),
            (g[w + y] = g[h + A]),
            (g[h + A] = y));
      for (l.lnz = 0, l.m2 = c, A = 0; A < m; A++)
        if (
          ((y = g[h + A]),
          l.lnz++,
          y < 0 && (y = l.m2++),
          (d[y] = A),
          !(--b[A] <= 0))
        ) {
          l.lnz += g[b + A];
          var _ = v[A];
          _ !== -1 &&
            (g[b + _] === 0 && (g[x + _] = g[x + A]),
            (g[w + g[x + A]] = g[h + _]),
            (g[h + _] = g[w + y]),
            (g[b + _] += g[b + A]));
        }
      for (y = 0; y < c; y++) d[y] < 0 && (d[y] = A++);
      return !0;
    }
  });
function ql(e, r) {
  return e[r] < 0;
}
function P1(e, r) {
  e[r] = on(e[r]);
}
function Bd(e) {
  return e < 0 ? on(e) : e;
}
function lD(e, r, t, n, i) {
  var a = r._index,
    s = r._ptr,
    f = r._size,
    l = f[1],
    p,
    u,
    o,
    c = 0;
  for (n[0] = e; c >= 0; ) {
    e = n[c];
    var m = i ? i[e] : e;
    ql(s, e) || (P1(s, e), (n[l + c] = m < 0 ? 0 : Bd(s[m])));
    var v = 1;
    for (u = n[l + c], o = m < 0 ? 0 : Bd(s[m + 1]); u < o; u++)
      if (((p = a[u]), !ql(s, p))) {
        (n[l + c] = u), (n[++c] = p), (v = 0);
        break;
      }
    v && (c--, (n[--t] = e));
  }
  return t;
}
function cD(e, r, t, n, i) {
  var a = e._ptr,
    s = e._size,
    f = r._index,
    l = r._ptr,
    p = s[1],
    u,
    o,
    c,
    m = p;
  for (o = l[t], c = l[t + 1], u = o; u < c; u++) {
    var v = f[u];
    ql(a, v) || (m = lD(v, e, m, n, i));
  }
  for (u = m; u < p; u++) P1(a, n[u]);
  return m;
}
var fD = "csSpsolve",
  pD = ["divideScalar", "multiply", "subtract"],
  mD = F(fD, pD, (e) => {
    var { divideScalar: r, multiply: t, subtract: n } = e;
    return function (a, s, f, l, p, u, o) {
      var c = a._values,
        m = a._index,
        v = a._ptr,
        d = a._size,
        N = d[1],
        g = s._values,
        w = s._index,
        h = s._ptr,
        x,
        b,
        y,
        A,
        S = cD(a, s, f, l, u);
      for (x = S; x < N; x++) p[l[x]] = 0;
      for (b = h[f], y = h[f + 1], x = b; x < y; x++) p[w[x]] = g[x];
      for (var E = S; E < N; E++) {
        var M = l[E],
          _ = u ? u[M] : M;
        if (!(_ < 0))
          for (
            b = v[_],
              y = v[_ + 1],
              p[M] = r(p[M], c[o ? b : y - 1]),
              x = o ? b + 1 : b,
              A = o ? y : y - 1;
            x < A;
            x++
          ) {
            var C = m[x];
            p[C] = n(p[C], t(c[x], p[M]));
          }
      }
      return S;
    };
  }),
  vD = "csLu",
  dD = [
    "abs",
    "divideScalar",
    "multiply",
    "subtract",
    "larger",
    "largerEq",
    "SparseMatrix",
  ],
  hD = F(vD, dD, (e) => {
    var {
        abs: r,
        divideScalar: t,
        multiply: n,
        subtract: i,
        larger: a,
        largerEq: s,
        SparseMatrix: f,
      } = e,
      l = mD({ divideScalar: t, multiply: n, subtract: i });
    return function (u, o, c) {
      if (!u) return null;
      var m = u._size,
        v = m[1],
        d,
        N = 100,
        g = 100;
      o && ((d = o.q), (N = o.lnz || N), (g = o.unz || g));
      var w = [],
        h = [],
        x = [],
        b = new f({ values: w, index: h, ptr: x, size: [v, v] }),
        y = [],
        A = [],
        S = [],
        E = new f({ values: y, index: A, ptr: S, size: [v, v] }),
        M = [],
        _,
        C,
        I = [],
        L = [];
      for (_ = 0; _ < v; _++) (I[_] = 0), (M[_] = -1), (x[_ + 1] = 0);
      (N = 0), (g = 0);
      for (var $ = 0; $ < v; $++) {
        (x[$] = N), (S[$] = g);
        var D = d ? d[$] : $,
          B = l(b, u, D, L, I, M, 1),
          R = -1,
          T = -1;
        for (C = B; C < v; C++)
          if (((_ = L[C]), M[_] < 0)) {
            var P = r(I[_]);
            a(P, T) && ((T = P), (R = _));
          } else (A[g] = M[_]), (y[g++] = I[_]);
        if (R === -1 || T <= 0) return null;
        M[D] < 0 && s(r(I[D]), n(T, c)) && (R = D);
        var W = I[R];
        for (
          A[g] = $, y[g++] = W, M[R] = $, h[N] = R, w[N++] = 1, C = B;
          C < v;
          C++
        )
          (_ = L[C]),
            M[_] < 0 && ((h[N] = _), (w[N++] = t(I[_], W))),
            (I[_] = 0);
      }
      for (x[v] = N, S[v] = g, C = 0; C < N; C++) h[C] = M[h[C]];
      return (
        w.splice(N, w.length - N),
        h.splice(N, h.length - N),
        y.splice(g, y.length - g),
        A.splice(g, A.length - g),
        { L: b, U: E, pinv: M }
      );
    };
  }),
  Id = "slu",
  gD = [
    "typed",
    "abs",
    "add",
    "multiply",
    "transpose",
    "divideScalar",
    "subtract",
    "larger",
    "largerEq",
    "SparseMatrix",
  ],
  yD = F(Id, gD, (e) => {
    var {
        typed: r,
        abs: t,
        add: n,
        multiply: i,
        transpose: a,
        divideScalar: s,
        subtract: f,
        larger: l,
        largerEq: p,
        SparseMatrix: u,
      } = e,
      o = uD({ add: n, multiply: i, transpose: a }),
      c = hD({
        abs: t,
        divideScalar: s,
        multiply: i,
        subtract: f,
        larger: l,
        largerEq: p,
        SparseMatrix: u,
      });
    return r(Id, {
      "SparseMatrix, number, number": function (v, d, N) {
        if (!Ne(d) || d < 0 || d > 3)
          throw new Error(
            "Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]"
          );
        if (N < 0 || N > 1)
          throw new Error(
            "Partial pivoting threshold must be a number from 0 to 1"
          );
        var g = o(d, v, !1),
          w = c(v, g, N);
        return {
          L: w.L,
          U: w.U,
          p: w.pinv,
          q: g.q,
          toString: function () {
            return (
              "L: " +
              this.L.toString() +
              `
U: ` +
              this.U.toString() +
              `
p: ` +
              this.p.toString() +
              (this.q
                ? `
q: ` + this.q.toString()
                : "") +
              `
`
            );
          },
        };
      },
    });
  });
function $d(e, r) {
  var t,
    n = r.length,
    i = [];
  if (e) for (t = 0; t < n; t++) i[e[t]] = r[t];
  else for (t = 0; t < n; t++) i[t] = r[t];
  return i;
}
var zd = "lusolve",
  xD = ["typed", "matrix", "lup", "slu", "usolve", "lsolve", "DenseMatrix"],
  wD = F(zd, xD, (e) => {
    var {
        typed: r,
        matrix: t,
        lup: n,
        slu: i,
        usolve: a,
        lsolve: s,
        DenseMatrix: f,
      } = e,
      l = to({ DenseMatrix: f });
    return r(zd, {
      "Array, Array | Matrix": function (c, m) {
        c = t(c);
        var v = n(c),
          d = u(v.L, v.U, v.p, null, m);
        return d.valueOf();
      },
      "DenseMatrix, Array | Matrix": function (c, m) {
        var v = n(c);
        return u(v.L, v.U, v.p, null, m);
      },
      "SparseMatrix, Array | Matrix": function (c, m) {
        var v = n(c);
        return u(v.L, v.U, v.p, null, m);
      },
      "SparseMatrix, Array | Matrix, number, number": function (c, m, v, d) {
        var N = i(c, v, d);
        return u(N.L, N.U, N.p, N.q, m);
      },
      "Object, Array | Matrix": function (c, m) {
        return u(c.L, c.U, c.p, c.q, m);
      },
    });
    function p(o) {
      if (Ae(o)) return o;
      if (He(o)) return t(o);
      throw new TypeError("Invalid Matrix LU decomposition");
    }
    function u(o, c, m, v, d) {
      (o = p(o)),
        (c = p(c)),
        m && ((d = l(o, d, !0)), (d._data = $d(m, d._data)));
      var N = s(o, d),
        g = a(c, N);
      return v && (g._data = $d(v, g._data)), g;
    }
  }),
  bD = "Help",
  ND = ["parse"],
  MD = F(
    bD,
    ND,
    (e) => {
      var { parse: r } = e;
      function t(n) {
        if (!(this instanceof t))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        if (!n) throw new Error('Argument "doc" missing');
        this.doc = n;
      }
      return (
        (t.prototype.type = "Help"),
        (t.prototype.isHelp = !0),
        (t.prototype.toString = function () {
          var n = this.doc || {},
            i = `
`;
          if (
            (n.name &&
              (i +=
                "Name: " +
                n.name +
                `

`),
            n.category &&
              (i +=
                "Category: " +
                n.category +
                `

`),
            n.description &&
              (i +=
                `Description:
    ` +
                n.description +
                `

`),
            n.syntax &&
              (i +=
                `Syntax:
    ` +
                n.syntax.join(`
    `) +
                `

`),
            n.examples)
          ) {
            i += `Examples:
`;
            for (var a = {}, s = 0; s < n.examples.length; s++) {
              var f = n.examples[s];
              i +=
                "    " +
                f +
                `
`;
              var l = void 0;
              try {
                l = r(f).compile().evaluate(a);
              } catch (p) {
                l = p;
              }
              l !== void 0 &&
                !Rs(l) &&
                (i +=
                  "        " +
                  _e(l, { precision: 14 }) +
                  `
`);
            }
            i += `
`;
          }
          return (
            n.mayThrow &&
              n.mayThrow.length &&
              (i +=
                "Throws: " +
                n.mayThrow.join(", ") +
                `

`),
            n.seealso &&
              n.seealso.length &&
              (i +=
                "See also: " +
                n.seealso.join(", ") +
                `
`),
            i
          );
        }),
        (t.prototype.toJSON = function () {
          var n = Me(this.doc);
          return (n.mathjs = "Help"), n;
        }),
        (t.fromJSON = function (n) {
          var i = {};
          return (
            Object.keys(n)
              .filter((a) => a !== "mathjs")
              .forEach((a) => {
                i[a] = n[a];
              }),
            new t(i)
          );
        }),
        (t.prototype.valueOf = t.prototype.toString),
        t
      );
    },
    { isClass: !0 }
  ),
  SD = "Chain",
  AD = ["?on", "math"],
  ED = F(
    SD,
    AD,
    (e) => {
      var { on: r, math: t } = e;
      function n(l) {
        if (!(this instanceof n))
          throw new SyntaxError(
            "Constructor must be called with the new operator"
          );
        Ps(l) ? (this.value = l.value) : (this.value = l);
      }
      (n.prototype.type = "Chain"),
        (n.prototype.isChain = !0),
        (n.prototype.done = function () {
          return this.value;
        }),
        (n.prototype.valueOf = function () {
          return this.value;
        }),
        (n.prototype.toString = function () {
          return _e(this.value);
        }),
        (n.prototype.toJSON = function () {
          return { mathjs: "Chain", value: this.value };
        }),
        (n.fromJSON = function (l) {
          return new n(l.value);
        });
      function i(l, p) {
        typeof p == "function" && (n.prototype[l] = s(p));
      }
      function a(l, p) {
        Po(n.prototype, l, function () {
          var o = p();
          if (typeof o == "function") return s(o);
        });
      }
      function s(l) {
        return function () {
          for (var p = [this.value], u = 0; u < arguments.length; u++)
            p[u + 1] = arguments[u];
          return new n(l.apply(l, p));
        };
      }
      n.createProxy = function (l, p) {
        if (typeof l == "string") i(l, p);
        else {
          var u = function (m) {
            ge(l, m) && f[m] === void 0 && a(m, () => l[m]);
          };
          for (var o in l) u(o);
        }
      };
      var f = {
        expression: !0,
        docs: !0,
        type: !0,
        classes: !0,
        json: !0,
        error: !0,
        isChain: !0,
      };
      return (
        n.createProxy(t),
        r &&
          r("import", function (l, p, u) {
            u || a(l, p);
          }),
        n
      );
    },
    { isClass: !0 }
  ),
  Rd = {
    name: "e",
    category: "Constants",
    syntax: ["e"],
    description:
      "Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",
    examples: ["e", "e ^ 2", "exp(2)", "log(e)"],
    seealso: ["exp"],
  },
  CD = {
    name: "false",
    category: "Constants",
    syntax: ["false"],
    description: "Boolean value false",
    examples: ["false"],
    seealso: ["true"],
  },
  OD = {
    name: "i",
    category: "Constants",
    syntax: ["i"],
    description:
      "Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",
    examples: ["i", "i * i", "sqrt(-1)"],
    seealso: [],
  },
  TD = {
    name: "Infinity",
    category: "Constants",
    syntax: ["Infinity"],
    description:
      "Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",
    examples: ["Infinity", "1 / 0"],
    seealso: [],
  },
  DD = {
    name: "LN10",
    category: "Constants",
    syntax: ["LN10"],
    description:
      "Returns the natural logarithm of 10, approximately equal to 2.302",
    examples: ["LN10", "log(10)"],
    seealso: [],
  },
  _D = {
    name: "LN2",
    category: "Constants",
    syntax: ["LN2"],
    description:
      "Returns the natural logarithm of 2, approximately equal to 0.693",
    examples: ["LN2", "log(2)"],
    seealso: [],
  },
  BD = {
    name: "LOG10E",
    category: "Constants",
    syntax: ["LOG10E"],
    description:
      "Returns the base-10 logarithm of E, approximately equal to 0.434",
    examples: ["LOG10E", "log(e, 10)"],
    seealso: [],
  },
  ID = {
    name: "LOG2E",
    category: "Constants",
    syntax: ["LOG2E"],
    description:
      "Returns the base-2 logarithm of E, approximately equal to 1.442",
    examples: ["LOG2E", "log(e, 2)"],
    seealso: [],
  },
  $D = {
    name: "NaN",
    category: "Constants",
    syntax: ["NaN"],
    description: "Not a number",
    examples: ["NaN", "0 / 0"],
    seealso: [],
  },
  zD = {
    name: "null",
    category: "Constants",
    syntax: ["null"],
    description: "Value null",
    examples: ["null"],
    seealso: ["true", "false"],
  },
  RD = {
    name: "phi",
    category: "Constants",
    syntax: ["phi"],
    description:
      "Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",
    examples: ["phi"],
    seealso: [],
  },
  Fd = {
    name: "pi",
    category: "Constants",
    syntax: ["pi"],
    description:
      "The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",
    examples: ["pi", "sin(pi/2)"],
    seealso: ["tau"],
  },
  FD = {
    name: "SQRT1_2",
    category: "Constants",
    syntax: ["SQRT1_2"],
    description: "Returns the square root of 1/2, approximately equal to 0.707",
    examples: ["SQRT1_2", "sqrt(1/2)"],
    seealso: [],
  },
  PD = {
    name: "SQRT2",
    category: "Constants",
    syntax: ["SQRT2"],
    description: "Returns the square root of 2, approximately equal to 1.414",
    examples: ["SQRT2", "sqrt(2)"],
    seealso: [],
  },
  LD = {
    name: "tau",
    category: "Constants",
    syntax: ["tau"],
    description:
      "Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",
    examples: ["tau", "2 * pi"],
    seealso: ["pi"],
  },
  kD = {
    name: "true",
    category: "Constants",
    syntax: ["true"],
    description: "Boolean value true",
    examples: ["true"],
    seealso: ["false"],
  },
  UD = {
    name: "version",
    category: "Constants",
    syntax: ["version"],
    description: "A string with the version number of math.js",
    examples: ["version"],
    seealso: [],
  },
  qD = {
    name: "bignumber",
    category: "Construction",
    syntax: ["bignumber(x)"],
    description: "Create a big number from a number or string.",
    examples: [
      "0.1 + 0.2",
      "bignumber(0.1) + bignumber(0.2)",
      'bignumber("7.2")',
      'bignumber("7.2e500")',
      "bignumber([0.1, 0.2, 0.3])",
    ],
    seealso: [
      "boolean",
      "complex",
      "fraction",
      "index",
      "matrix",
      "string",
      "unit",
    ],
  },
  HD = {
    name: "boolean",
    category: "Construction",
    syntax: ["x", "boolean(x)"],
    description: "Convert a string or number into a boolean.",
    examples: [
      "boolean(0)",
      "boolean(1)",
      "boolean(3)",
      'boolean("true")',
      'boolean("false")',
      "boolean([1, 0, 1, 1])",
    ],
    seealso: [
      "bignumber",
      "complex",
      "index",
      "matrix",
      "number",
      "string",
      "unit",
    ],
  },
  VD = {
    name: "complex",
    category: "Construction",
    syntax: ["complex()", "complex(re, im)", "complex(string)"],
    description: "Create a complex number.",
    examples: ["complex()", "complex(2, 3)", 'complex("7 - 2i")'],
    seealso: [
      "bignumber",
      "boolean",
      "index",
      "matrix",
      "number",
      "string",
      "unit",
    ],
  },
  GD = {
    name: "createUnit",
    category: "Construction",
    syntax: ["createUnit(definitions)", "createUnit(name, definition)"],
    description:
      "Create a user-defined unit and register it with the Unit type.",
    examples: [
      'createUnit("foo")',
      'createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})',
      'createUnit("mph", "1 mile/hour")',
    ],
    seealso: ["unit", "splitUnit"],
  },
  WD = {
    name: "fraction",
    category: "Construction",
    syntax: [
      "fraction(num)",
      "fraction(matrix)",
      "fraction(num,den)",
      "fraction({n: num, d: den})",
    ],
    description:
      "Create a fraction from a number or from integer numerator and denominator.",
    examples: [
      "fraction(0.125)",
      "fraction(1, 3) + fraction(2, 5)",
      "fraction({n: 333, d: 53})",
      "fraction([sqrt(9), sqrt(10), sqrt(11)])",
    ],
    seealso: [
      "bignumber",
      "boolean",
      "complex",
      "index",
      "matrix",
      "string",
      "unit",
    ],
  },
  ZD = {
    name: "index",
    category: "Construction",
    syntax: [
      "[start]",
      "[start:end]",
      "[start:step:end]",
      "[start1, start 2, ...]",
      "[start1:end1, start2:end2, ...]",
      "[start1:step1:end1, start2:step2:end2, ...]",
    ],
    description: "Create an index to get or replace a subset of a matrix",
    examples: [
      "[]",
      "[1, 2, 3]",
      "A = [1, 2, 3; 4, 5, 6]",
      "A[1, :]",
      "A[1, 2] = 50",
      "A[0:2, 0:2] = ones(2, 2)",
    ],
    seealso: [
      "bignumber",
      "boolean",
      "complex",
      "matrix,",
      "number",
      "range",
      "string",
      "unit",
    ],
  },
  QD = {
    name: "matrix",
    category: "Construction",
    syntax: [
      "[]",
      "[a1, b1, ...; a2, b2, ...]",
      "matrix()",
      'matrix("dense")',
      "matrix([...])",
    ],
    description: "Create a matrix.",
    examples: [
      "[]",
      "[1, 2, 3]",
      "[1, 2, 3; 4, 5, 6]",
      "matrix()",
      "matrix([3, 4])",
      'matrix([3, 4; 5, 6], "sparse")',
      'matrix([3, 4; 5, 6], "sparse", "number")',
    ],
    seealso: [
      "bignumber",
      "boolean",
      "complex",
      "index",
      "number",
      "string",
      "unit",
      "sparse",
    ],
  },
  YD = {
    name: "number",
    category: "Construction",
    syntax: ["x", "number(x)", "number(unit, valuelessUnit)"],
    description:
      "Create a number or convert a string or boolean into a number.",
    examples: [
      "2",
      "2e3",
      "4.05",
      "number(2)",
      'number("7.2")',
      "number(true)",
      "number([true, false, true, true])",
      'number(unit("52cm"), "m")',
    ],
    seealso: [
      "bignumber",
      "boolean",
      "complex",
      "fraction",
      "index",
      "matrix",
      "string",
      "unit",
    ],
  },
  XD = {
    name: "sparse",
    category: "Construction",
    syntax: [
      "sparse()",
      "sparse([a1, b1, ...; a1, b2, ...])",
      'sparse([a1, b1, ...; a1, b2, ...], "number")',
    ],
    description: "Create a sparse matrix.",
    examples: [
      "sparse()",
      "sparse([3, 4; 5, 6])",
      'sparse([3, 0; 5, 0], "number")',
    ],
    seealso: [
      "bignumber",
      "boolean",
      "complex",
      "index",
      "number",
      "string",
      "unit",
      "matrix",
    ],
  },
  jD = {
    name: "splitUnit",
    category: "Construction",
    syntax: ["splitUnit(unit: Unit, parts: Unit[])"],
    description:
      "Split a unit in an array of units whose sum is equal to the original unit.",
    examples: ['splitUnit(1 m, ["feet", "inch"])'],
    seealso: ["unit", "createUnit"],
  },
  JD = {
    name: "string",
    category: "Construction",
    syntax: ['"text"', "string(x)"],
    description: "Create a string or convert a value to a string",
    examples: ['"Hello World!"', "string(4.2)", "string(3 + 2i)"],
    seealso: [
      "bignumber",
      "boolean",
      "complex",
      "index",
      "matrix",
      "number",
      "unit",
    ],
  },
  KD = {
    name: "unit",
    category: "Construction",
    syntax: ["value unit", "unit(value, unit)", "unit(string)"],
    description: "Create a unit.",
    examples: ["5.5 mm", "3 inch", 'unit(7.1, "kilogram")', 'unit("23 deg")'],
    seealso: [
      "bignumber",
      "boolean",
      "complex",
      "index",
      "matrix",
      "number",
      "string",
    ],
  },
  e_ = {
    name: "config",
    category: "Core",
    syntax: ["config()", "config(options)"],
    description: "Get configuration or change configuration.",
    examples: [
      "config()",
      "1/3 + 1/4",
      'config({number: "Fraction"})',
      "1/3 + 1/4",
    ],
    seealso: [],
  },
  r_ = {
    name: "import",
    category: "Core",
    syntax: ["import(functions)", "import(functions, options)"],
    description: "Import functions or constants from an object.",
    examples: [
      "import({myFn: f(x)=x^2, myConstant: 32 })",
      "myFn(2)",
      "myConstant",
    ],
    seealso: [],
  },
  t_ = {
    name: "typed",
    category: "Core",
    syntax: ["typed(signatures)", "typed(name, signatures)"],
    description: "Create a typed function.",
    examples: [
      'double = typed({ "number": f(x)=x+x })',
      "double(2)",
      'double("hello")',
    ],
    seealso: [],
  },
  n_ = {
    name: "derivative",
    category: "Algebra",
    syntax: [
      "derivative(expr, variable)",
      "derivative(expr, variable, {simplify: boolean})",
    ],
    description:
      "Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",
    examples: [
      'derivative("2x^3", "x")',
      'derivative("2x^3", "x", {simplify: false})',
      'derivative("2x^2 + 3x + 4", "x")',
      'derivative("sin(2x)", "x")',
      'f = parse("x^2 + x")',
      'x = parse("x")',
      "df = derivative(f, x)",
      "df.evaluate({x: 3})",
    ],
    seealso: ["simplify", "parse", "evaluate"],
  },
  i_ = {
    name: "leafCount",
    category: "Algebra",
    syntax: ["leafCount(expr)"],
    description:
      "Computes the number of leaves in the parse tree of the given expression",
    examples: [
      'leafCount("e^(i*pi)-1")',
      'leafCount(parse("{a: 22/7, b: 10^(1/2)}"))',
    ],
    seealso: ["simplify"],
  },
  a_ = {
    name: "lsolve",
    category: "Algebra",
    syntax: ["x=lsolve(L, b)"],
    description:
      "Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
    examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lsolve(a, b)"],
    seealso: ["lsolveAll", "lup", "lusolve", "usolve", "matrix", "sparse"],
  },
  o_ = {
    name: "lsolveAll",
    category: "Algebra",
    syntax: ["x=lsolveAll(L, b)"],
    description:
      "Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
    examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lsolve(a, b)"],
    seealso: ["lsolve", "lup", "lusolve", "usolve", "matrix", "sparse"],
  },
  s_ = {
    name: "lup",
    category: "Algebra",
    syntax: ["lup(m)"],
    description:
      "Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",
    examples: [
      "lup([[2, 1], [1, 4]])",
      "lup(matrix([[2, 1], [1, 4]]))",
      "lup(sparse([[2, 1], [1, 4]]))",
    ],
    seealso: ["lusolve", "lsolve", "usolve", "matrix", "sparse", "slu", "qr"],
  },
  u_ = {
    name: "lusolve",
    category: "Algebra",
    syntax: ["x=lusolve(A, b)", "x=lusolve(lu, b)"],
    description:
      "Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",
    examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lusolve(a, b)"],
    seealso: ["lup", "slu", "lsolve", "usolve", "matrix", "sparse"],
  },
  l_ = {
    name: "qr",
    category: "Algebra",
    syntax: ["qr(A)"],
    description:
      "Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",
    examples: ["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],
    seealso: ["lup", "slu", "matrix"],
  },
  c_ = {
    name: "rationalize",
    category: "Algebra",
    syntax: [
      "rationalize(expr)",
      "rationalize(expr, scope)",
      "rationalize(expr, scope, detailed)",
    ],
    description:
      "Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",
    examples: [
      'rationalize("2x/y - y/(x+1)")',
      'rationalize("2x/y - y/(x+1)", true)',
    ],
    seealso: ["simplify"],
  },
  f_ = {
    name: "resolve",
    category: "Algebra",
    syntax: ["resolve(node, scope)"],
    description: "Recursively substitute variables in an expression tree.",
    examples: [
      'resolve(parse("1 + x"), { x: 7 })',
      'resolve(parse("size(text)"), { text: "Hello World" })',
      'resolve(parse("x + y"), { x: parse("3z") })',
      'resolve(parse("3x"), { x: parse("y+z"), z: parse("w^y") })',
    ],
    seealso: ["simplify", "evaluate"],
    mayThrow: ["ReferenceError"],
  },
  p_ = {
    name: "simplify",
    category: "Algebra",
    syntax: ["simplify(expr)", "simplify(expr, rules)"],
    description: "Simplify an expression tree.",
    examples: [
      'simplify("3 + 2 / 4")',
      'simplify("2x + x")',
      'f = parse("x * (x + 2 + x)")',
      "simplified = simplify(f)",
      "simplified.evaluate({x: 2})",
    ],
    seealso: [
      "simplifyCore",
      "derivative",
      "evaluate",
      "parse",
      "rationalize",
      "resolve",
    ],
  },
  m_ = {
    name: "simplifyCore",
    category: "Algebra",
    syntax: ["simplifyCore(node)"],
    description:
      "Perform simple one-pass simplifications on an expression tree.",
    examples: ['simplifyCore(parse("0*x"))', 'simplifyCore(parse("(x+0)*2"))'],
    seealso: ["simplify", "evaluate"],
  },
  v_ = {
    name: "slu",
    category: "Algebra",
    syntax: ["slu(A, order, threshold)"],
    description:
      "Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",
    examples: [
      "slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)",
    ],
    seealso: ["lusolve", "lsolve", "usolve", "matrix", "sparse", "lup", "qr"],
  },
  d_ = {
    name: "symbolicEqual",
    category: "Algebra",
    syntax: [
      "symbolicEqual(expr1, expr2)",
      "symbolicEqual(expr1, expr2, options)",
    ],
    description:
      "Returns true if the difference of the expressions simplifies to 0",
    examples: [
      'symbolicEqual("x*y","y*x")',
      'symbolicEqual("abs(x^2)", "x^2")',
      'symbolicEqual("abs(x)", "x", {context: {abs: {trivial: true}}})',
    ],
    seealso: ["simplify", "evaluate"],
  },
  h_ = {
    name: "usolve",
    category: "Algebra",
    syntax: ["x=usolve(U, b)"],
    description:
      "Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
    examples: [
      "x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])",
    ],
    seealso: ["usolveAll", "lup", "lusolve", "lsolve", "matrix", "sparse"],
  },
  g_ = {
    name: "usolveAll",
    category: "Algebra",
    syntax: ["x=usolve(U, b)"],
    description:
      "Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
    examples: [
      "x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])",
    ],
    seealso: ["usolve", "lup", "lusolve", "lsolve", "matrix", "sparse"],
  },
  y_ = {
    name: "abs",
    category: "Arithmetic",
    syntax: ["abs(x)"],
    description: "Compute the absolute value.",
    examples: ["abs(3.5)", "abs(-4.2)"],
    seealso: ["sign"],
  },
  x_ = {
    name: "add",
    category: "Operators",
    syntax: ["x + y", "add(x, y)"],
    description: "Add two values.",
    examples: [
      "a = 2.1 + 3.6",
      "a - 3.6",
      "3 + 2i",
      "3 cm + 2 inch",
      '"2.3" + "4"',
    ],
    seealso: ["subtract"],
  },
  w_ = {
    name: "cbrt",
    category: "Arithmetic",
    syntax: ["cbrt(x)", "cbrt(x, allRoots)"],
    description:
      "Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",
    examples: [
      "cbrt(64)",
      "cube(4)",
      "cbrt(-8)",
      "cbrt(2 + 3i)",
      "cbrt(8i)",
      "cbrt(8i, true)",
      "cbrt(27 m^3)",
    ],
    seealso: ["square", "sqrt", "cube", "multiply"],
  },
  b_ = {
    name: "ceil",
    category: "Arithmetic",
    syntax: ["ceil(x)"],
    description:
      "Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",
    examples: ["ceil(3.2)", "ceil(3.8)", "ceil(-4.2)"],
    seealso: ["floor", "fix", "round"],
  },
  N_ = {
    name: "cube",
    category: "Arithmetic",
    syntax: ["cube(x)"],
    description: "Compute the cube of a value. The cube of x is x * x * x.",
    examples: ["cube(2)", "2^3", "2 * 2 * 2"],
    seealso: ["multiply", "square", "pow"],
  },
  M_ = {
    name: "divide",
    category: "Operators",
    syntax: ["x / y", "divide(x, y)"],
    description: "Divide two values.",
    examples: [
      "a = 2 / 3",
      "a * 3",
      "4.5 / 2",
      "3 + 4 / 2",
      "(3 + 4) / 2",
      "18 km / 4.5",
    ],
    seealso: ["multiply"],
  },
  S_ = {
    name: "dotDivide",
    category: "Operators",
    syntax: ["x ./ y", "dotDivide(x, y)"],
    description: "Divide two values element wise.",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "b = [2, 1, 1; 3, 2, 5]", "a ./ b"],
    seealso: ["multiply", "dotMultiply", "divide"],
  },
  A_ = {
    name: "dotMultiply",
    category: "Operators",
    syntax: ["x .* y", "dotMultiply(x, y)"],
    description: "Multiply two values element wise.",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "b = [2, 1, 1; 3, 2, 5]", "a .* b"],
    seealso: ["multiply", "divide", "dotDivide"],
  },
  E_ = {
    name: "dotPow",
    category: "Operators",
    syntax: ["x .^ y", "dotPow(x, y)"],
    description: "Calculates the power of x to y element wise.",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "a .^ 2"],
    seealso: ["pow"],
  },
  C_ = {
    name: "exp",
    category: "Arithmetic",
    syntax: ["exp(x)"],
    description: "Calculate the exponent of a value.",
    examples: [
      "exp(1.3)",
      "e ^ 1.3",
      "log(exp(1.3))",
      "x = 2.4",
      "(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula",
    ],
    seealso: ["expm", "expm1", "pow", "log"],
  },
  O_ = {
    name: "expm",
    category: "Arithmetic",
    syntax: ["exp(x)"],
    description:
      "Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",
    examples: ["expm([[0,2],[0,0]])"],
    seealso: ["exp"],
  },
  T_ = {
    name: "expm1",
    category: "Arithmetic",
    syntax: ["expm1(x)"],
    description:
      "Calculate the value of subtracting 1 from the exponential value.",
    examples: ["expm1(2)", "pow(e, 2) - 1", "log(expm1(2) + 1)"],
    seealso: ["exp", "pow", "log"],
  },
  D_ = {
    name: "fix",
    category: "Arithmetic",
    syntax: ["fix(x)"],
    description:
      "Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",
    examples: ["fix(3.2)", "fix(3.8)", "fix(-4.2)", "fix(-4.8)"],
    seealso: ["ceil", "floor", "round"],
  },
  __ = {
    name: "floor",
    category: "Arithmetic",
    syntax: ["floor(x)"],
    description:
      "Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",
    examples: ["floor(3.2)", "floor(3.8)", "floor(-4.2)"],
    seealso: ["ceil", "fix", "round"],
  },
  B_ = {
    name: "gcd",
    category: "Arithmetic",
    syntax: ["gcd(a, b)", "gcd(a, b, c, ...)"],
    description: "Compute the greatest common divisor.",
    examples: ["gcd(8, 12)", "gcd(-4, 6)", "gcd(25, 15, -10)"],
    seealso: ["lcm", "xgcd"],
  },
  I_ = {
    name: "hypot",
    category: "Arithmetic",
    syntax: ["hypot(a, b, c, ...)", "hypot([a, b, c, ...])"],
    description: "Calculate the hypotenusa of a list with values. ",
    examples: [
      "hypot(3, 4)",
      "sqrt(3^2 + 4^2)",
      "hypot(-2)",
      "hypot([3, 4, 5])",
    ],
    seealso: ["abs", "norm"],
  },
  $_ = {
    name: "invmod",
    category: "Arithmetic",
    syntax: ["invmod(a, b)"],
    description:
      "Calculate the (modular) multiplicative inverse of a modulo b. Solution to the equation ax \u2263 1 (mod b)",
    examples: [
      "invmod(8, 12)=NaN",
      "invmod(7, 13)=2",
      "math.invmod(15151, 15122)=10429",
    ],
    seealso: ["gcd", "xgcd"],
  },
  z_ = {
    name: "lcm",
    category: "Arithmetic",
    syntax: ["lcm(x, y)"],
    description: "Compute the least common multiple.",
    examples: ["lcm(4, 6)", "lcm(6, 21)", "lcm(6, 21, 5)"],
    seealso: ["gcd"],
  },
  R_ = {
    name: "log",
    category: "Arithmetic",
    syntax: ["log(x)", "log(x, base)"],
    description:
      "Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",
    examples: [
      "log(3.5)",
      "a = log(2.4)",
      "exp(a)",
      "10 ^ 4",
      "log(10000, 10)",
      "log(10000) / log(10)",
      "b = log(1024, 2)",
      "2 ^ b",
    ],
    seealso: ["exp", "log1p", "log2", "log10"],
  },
  F_ = {
    name: "log10",
    category: "Arithmetic",
    syntax: ["log10(x)"],
    description: "Compute the 10-base logarithm of a value.",
    examples: [
      "log10(0.00001)",
      "log10(10000)",
      "10 ^ 4",
      "log(10000) / log(10)",
      "log(10000, 10)",
    ],
    seealso: ["exp", "log"],
  },
  P_ = {
    name: "log1p",
    category: "Arithmetic",
    syntax: ["log1p(x)", "log1p(x, base)"],
    description: "Calculate the logarithm of a `value+1`",
    examples: [
      "log1p(2.5)",
      "exp(log1p(1.4))",
      "pow(10, 4)",
      "log1p(9999, 10)",
      "log1p(9999) / log(10)",
    ],
    seealso: ["exp", "log", "log2", "log10"],
  },
  L_ = {
    name: "log2",
    category: "Arithmetic",
    syntax: ["log2(x)"],
    description:
      "Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",
    examples: ["log2(0.03125)", "log2(16)", "log2(16) / log2(2)", "pow(2, 4)"],
    seealso: ["exp", "log1p", "log", "log10"],
  },
  k_ = {
    name: "mod",
    category: "Operators",
    syntax: ["x % y", "x mod y", "mod(x, y)"],
    description:
      "Calculates the modulus, the remainder of an integer division.",
    examples: [
      "7 % 3",
      "11 % 2",
      "10 mod 4",
      "isOdd(x) = x % 2",
      "isOdd(2)",
      "isOdd(3)",
    ],
    seealso: ["divide"],
  },
  U_ = {
    name: "multiply",
    category: "Operators",
    syntax: ["x * y", "multiply(x, y)"],
    description: "multiply two values.",
    examples: [
      "a = 2.1 * 3.4",
      "a / 3.4",
      "2 * 3 + 4",
      "2 * (3 + 4)",
      "3 * 2.1 km",
    ],
    seealso: ["divide"],
  },
  q_ = {
    name: "norm",
    category: "Arithmetic",
    syntax: ["norm(x)", "norm(x, p)"],
    description: "Calculate the norm of a number, vector or matrix.",
    examples: [
      "abs(-3.5)",
      "norm(-3.5)",
      "norm(3 - 4i)",
      "norm([1, 2, -3], Infinity)",
      "norm([1, 2, -3], -Infinity)",
      "norm([3, 4], 2)",
      "norm([[1, 2], [3, 4]], 1)",
      'norm([[1, 2], [3, 4]], "inf")',
      'norm([[1, 2], [3, 4]], "fro")',
    ],
  },
  H_ = {
    name: "nthRoot",
    category: "Arithmetic",
    syntax: ["nthRoot(a)", "nthRoot(a, root)"],
    description:
      'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',
    examples: ["4 ^ 3", "nthRoot(64, 3)", "nthRoot(9, 2)", "sqrt(9)"],
    seealso: ["nthRoots", "pow", "sqrt"],
  },
  V_ = {
    name: "nthRoots",
    category: "Arithmetic",
    syntax: ["nthRoots(A)", "nthRoots(A, root)"],
    description:
      'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',
    examples: ["nthRoots(1)", "nthRoots(1, 3)"],
    seealso: ["sqrt", "pow", "nthRoot"],
  },
  G_ = {
    name: "pow",
    category: "Operators",
    syntax: ["x ^ y", "pow(x, y)"],
    description: "Calculates the power of x to y, x^y.",
    examples: [
      "2^3",
      "2*2*2",
      "1 + e ^ (pi * i)",
      "math.pow([[1, 2], [4, 3]], 2)",
      "math.pow([[1, 2], [4, 3]], -1)",
    ],
    seealso: ["multiply", "nthRoot", "nthRoots", "sqrt"],
  },
  W_ = {
    name: "round",
    category: "Arithmetic",
    syntax: ["round(x)", "round(x, n)"],
    description:
      "round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",
    examples: [
      "round(3.2)",
      "round(3.8)",
      "round(-4.2)",
      "round(-4.8)",
      "round(pi, 3)",
      "round(123.45678, 2)",
    ],
    seealso: ["ceil", "floor", "fix"],
  },
  Z_ = {
    name: "sign",
    category: "Arithmetic",
    syntax: ["sign(x)"],
    description:
      "Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",
    examples: ["sign(3.5)", "sign(-4.2)", "sign(0)"],
    seealso: ["abs"],
  },
  Q_ = {
    name: "sqrt",
    category: "Arithmetic",
    syntax: ["sqrt(x)"],
    description:
      "Compute the square root value. If x = y * y, then y is the square root of x.",
    examples: ["sqrt(25)", "5 * 5", "sqrt(-1)"],
    seealso: ["square", "sqrtm", "multiply", "nthRoot", "nthRoots", "pow"],
  },
  Y_ = {
    name: "sqrtm",
    category: "Arithmetic",
    syntax: ["sqrtm(x)"],
    description:
      "Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",
    examples: ["sqrtm([[1, 2], [3, 4]])"],
    seealso: ["sqrt", "abs", "square", "multiply"],
  },
  X_ = {
    name: "square",
    category: "Arithmetic",
    syntax: ["square(x)"],
    description: "Compute the square of a value. The square of x is x * x.",
    examples: ["square(3)", "sqrt(9)", "3^2", "3 * 3"],
    seealso: ["multiply", "pow", "sqrt", "cube"],
  },
  j_ = {
    name: "subtract",
    category: "Operators",
    syntax: ["x - y", "subtract(x, y)"],
    description: "subtract two values.",
    examples: [
      "a = 5.3 - 2",
      "a + 2",
      "2/3 - 1/6",
      "2 * 3 - 3",
      "2.1 km - 500m",
    ],
    seealso: ["add"],
  },
  J_ = {
    name: "unaryMinus",
    category: "Operators",
    syntax: ["-x", "unaryMinus(x)"],
    description:
      "Inverse the sign of a value. Converts booleans and strings to numbers.",
    examples: ["-4.5", "-(-5.6)", '-"22"'],
    seealso: ["add", "subtract", "unaryPlus"],
  },
  K_ = {
    name: "unaryPlus",
    category: "Operators",
    syntax: ["+x", "unaryPlus(x)"],
    description: "Converts booleans and strings to numbers.",
    examples: ["+true", '+"2"'],
    seealso: ["add", "subtract", "unaryMinus"],
  },
  eB = {
    name: "xgcd",
    category: "Arithmetic",
    syntax: ["xgcd(a, b)"],
    description:
      "Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",
    examples: ["xgcd(8, 12)", "gcd(8, 12)", "xgcd(36163, 21199)"],
    seealso: ["gcd", "lcm"],
  },
  rB = {
    name: "bitAnd",
    category: "Bitwise",
    syntax: ["x & y", "bitAnd(x, y)"],
    description:
      "Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",
    examples: ["5 & 3", "bitAnd(53, 131)", "[1, 12, 31] & 42"],
    seealso: [
      "bitNot",
      "bitOr",
      "bitXor",
      "leftShift",
      "rightArithShift",
      "rightLogShift",
    ],
  },
  tB = {
    name: "bitNot",
    category: "Bitwise",
    syntax: ["~x", "bitNot(x)"],
    description:
      "Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",
    examples: ["~1", "~2", "bitNot([2, -3, 4])"],
    seealso: [
      "bitAnd",
      "bitOr",
      "bitXor",
      "leftShift",
      "rightArithShift",
      "rightLogShift",
    ],
  },
  nB = {
    name: "bitOr",
    category: "Bitwise",
    syntax: ["x | y", "bitOr(x, y)"],
    description:
      "Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",
    examples: ["5 | 3", "bitOr([1, 2, 3], 4)"],
    seealso: [
      "bitAnd",
      "bitNot",
      "bitXor",
      "leftShift",
      "rightArithShift",
      "rightLogShift",
    ],
  },
  iB = {
    name: "bitXor",
    category: "Bitwise",
    syntax: ["bitXor(x, y)"],
    description:
      "Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",
    examples: ["bitOr(1, 2)", "bitXor([2, 3, 4], 4)"],
    seealso: [
      "bitAnd",
      "bitNot",
      "bitOr",
      "leftShift",
      "rightArithShift",
      "rightLogShift",
    ],
  },
  aB = {
    name: "leftShift",
    category: "Bitwise",
    syntax: ["x << y", "leftShift(x, y)"],
    description: "Bitwise left logical shift of a value x by y number of bits.",
    examples: ["4 << 1", "8 >> 1"],
    seealso: [
      "bitAnd",
      "bitNot",
      "bitOr",
      "bitXor",
      "rightArithShift",
      "rightLogShift",
    ],
  },
  oB = {
    name: "rightArithShift",
    category: "Bitwise",
    syntax: ["x >> y", "rightArithShift(x, y)"],
    description:
      "Bitwise right arithmetic shift of a value x by y number of bits.",
    examples: ["8 >> 1", "4 << 1", "-12 >> 2"],
    seealso: [
      "bitAnd",
      "bitNot",
      "bitOr",
      "bitXor",
      "leftShift",
      "rightLogShift",
    ],
  },
  sB = {
    name: "rightLogShift",
    category: "Bitwise",
    syntax: ["x >>> y", "rightLogShift(x, y)"],
    description:
      "Bitwise right logical shift of a value x by y number of bits.",
    examples: ["8 >>> 1", "4 << 1", "-12 >>> 2"],
    seealso: [
      "bitAnd",
      "bitNot",
      "bitOr",
      "bitXor",
      "leftShift",
      "rightArithShift",
    ],
  },
  uB = {
    name: "bellNumbers",
    category: "Combinatorics",
    syntax: ["bellNumbers(n)"],
    description:
      "The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",
    examples: ["bellNumbers(3)", "bellNumbers(8)"],
    seealso: ["stirlingS2"],
  },
  lB = {
    name: "catalan",
    category: "Combinatorics",
    syntax: ["catalan(n)"],
    description:
      "The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",
    examples: ["catalan(3)", "catalan(8)"],
    seealso: ["bellNumbers"],
  },
  cB = {
    name: "composition",
    category: "Combinatorics",
    syntax: ["composition(n, k)"],
    description:
      "The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",
    examples: ["composition(5, 3)"],
    seealso: ["combinations"],
  },
  fB = {
    name: "stirlingS2",
    category: "Combinatorics",
    syntax: ["stirlingS2(n, k)"],
    description:
      "he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",
    examples: ["stirlingS2(5, 3)"],
    seealso: ["bellNumbers"],
  },
  pB = {
    name: "arg",
    category: "Complex",
    syntax: ["arg(x)"],
    description:
      "Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",
    examples: ["arg(2 + 2i)", "atan2(3, 2)", "arg(2 + 3i)"],
    seealso: ["re", "im", "conj", "abs"],
  },
  mB = {
    name: "conj",
    category: "Complex",
    syntax: ["conj(x)"],
    description:
      "Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",
    examples: ["conj(2 + 3i)", "conj(2 - 3i)", "conj(-5.2i)"],
    seealso: ["re", "im", "abs", "arg"],
  },
  vB = {
    name: "im",
    category: "Complex",
    syntax: ["im(x)"],
    description: "Get the imaginary part of a complex number.",
    examples: ["im(2 + 3i)", "re(2 + 3i)", "im(-5.2i)", "im(2.4)"],
    seealso: ["re", "conj", "abs", "arg"],
  },
  dB = {
    name: "re",
    category: "Complex",
    syntax: ["re(x)"],
    description: "Get the real part of a complex number.",
    examples: ["re(2 + 3i)", "im(2 + 3i)", "re(-5.2i)", "re(2.4)"],
    seealso: ["im", "conj", "abs", "arg"],
  },
  hB = {
    name: "evaluate",
    category: "Expression",
    syntax: ["evaluate(expression)", "evaluate([expr1, expr2, expr3, ...])"],
    description: "Evaluate an expression or an array with expressions.",
    examples: ['evaluate("2 + 3")', 'evaluate("sqrt(" + 4 + ")")'],
    seealso: [],
  },
  gB = {
    name: "help",
    category: "Expression",
    syntax: ["help(object)", "help(string)"],
    description: "Display documentation on a function or data type.",
    examples: ["help(sqrt)", 'help("complex")'],
    seealso: [],
  },
  yB = {
    name: "distance",
    category: "Geometry",
    syntax: ["distance([x1, y1], [x2, y2])", "distance([[x1, y1], [x2, y2]])"],
    description: "Calculates the Euclidean distance between two points.",
    examples: ["distance([0,0], [4,4])", "distance([[0,0], [4,4]])"],
    seealso: [],
  },
  xB = {
    name: "intersect",
    category: "Geometry",
    syntax: [
      "intersect(expr1, expr2, expr3, expr4)",
      "intersect(expr1, expr2, expr3)",
    ],
    description: "Computes the intersection point of lines and/or planes.",
    examples: [
      "intersect([0, 0], [10, 10], [10, 0], [0, 10])",
      "intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])",
    ],
    seealso: [],
  },
  wB = {
    name: "and",
    category: "Logical",
    syntax: ["x and y", "and(x, y)"],
    description:
      "Logical and. Test whether two values are both defined with a nonzero/nonempty value.",
    examples: ["true and false", "true and true", "2 and 4"],
    seealso: ["not", "or", "xor"],
  },
  bB = {
    name: "not",
    category: "Logical",
    syntax: ["not x", "not(x)"],
    description: "Logical not. Flips the boolean value of given argument.",
    examples: ["not true", "not false", "not 2", "not 0"],
    seealso: ["and", "or", "xor"],
  },
  NB = {
    name: "or",
    category: "Logical",
    syntax: ["x or y", "or(x, y)"],
    description:
      "Logical or. Test if at least one value is defined with a nonzero/nonempty value.",
    examples: ["true or false", "false or false", "0 or 4"],
    seealso: ["not", "and", "xor"],
  },
  MB = {
    name: "xor",
    category: "Logical",
    syntax: ["x xor y", "xor(x, y)"],
    description:
      "Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",
    examples: ["true xor false", "false xor false", "true xor true", "0 xor 4"],
    seealso: ["not", "and", "or"],
  },
  SB = {
    name: "column",
    category: "Matrix",
    syntax: ["column(x, index)"],
    description: "Return a column from a matrix or array.",
    examples: ["A = [[1, 2], [3, 4]]", "column(A, 1)", "column(A, 2)"],
    seealso: ["row", "matrixFromColumns"],
  },
  AB = {
    name: "concat",
    category: "Matrix",
    syntax: ["concat(A, B, C, ...)", "concat(A, B, C, ..., dim)"],
    description:
      "Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",
    examples: [
      "A = [1, 2; 5, 6]",
      "B = [3, 4; 7, 8]",
      "concat(A, B)",
      "concat(A, B, 1)",
      "concat(A, B, 2)",
    ],
    seealso: [
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  EB = {
    name: "count",
    category: "Matrix",
    syntax: ["count(x)"],
    description: "Count the number of elements of a matrix, array or string.",
    examples: [
      "a = [1, 2; 3, 4; 5, 6]",
      "count(a)",
      "size(a)",
      'count("hello world")',
    ],
    seealso: ["size"],
  },
  CB = {
    name: "cross",
    category: "Matrix",
    syntax: ["cross(A, B)"],
    description:
      "Calculate the cross product for two vectors in three dimensional space.",
    examples: [
      "cross([1, 1, 0],  [0, 1, 1])",
      "cross([3, -3, 1], [4, 9, 2])",
      "cross([2, 3, 4],  [5, 6, 7])",
    ],
    seealso: ["multiply", "dot"],
  },
  OB = {
    name: "ctranspose",
    category: "Matrix",
    syntax: ["x'", "ctranspose(x)"],
    description: "Complex Conjugate and Transpose a matrix",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "ctranspose(a)"],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "zeros",
    ],
  },
  TB = {
    name: "det",
    category: "Matrix",
    syntax: ["det(x)"],
    description: "Calculate the determinant of a matrix",
    examples: ["det([1, 2; 3, 4])", "det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],
    seealso: [
      "concat",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  DB = {
    name: "diag",
    category: "Matrix",
    syntax: ["diag(x)", "diag(x, k)"],
    description:
      "Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",
    examples: [
      "diag(1:3)",
      "diag(1:3, 1)",
      "a = [1, 2, 3; 4, 5, 6; 7, 8, 9]",
      "diag(a)",
    ],
    seealso: [
      "concat",
      "det",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  _B = {
    name: "diff",
    category: "Matrix",
    syntax: ["diff(arr)", "diff(arr, dim)"],
    description: [
      "Create a new matrix or array with the difference of the passed matrix or array.",
      "Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference",
      "If no dimension parameter is passed it is assumed as dimension 0",
      "Dimension is zero-based in javascript and one-based in the parser",
      "Arrays must be 'rectangular' meaning arrays like [1, 2]",
      "If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays",
    ],
    examples: [
      "diff([1, 2, 4, 7, 0])",
      "diff([1, 2, 4, 7, 0], 0)",
      "diff(matrix([1, 2, 4, 7, 0]))",
      "diff([[1, 2], [3, 4]])",
      "diff([[1, 2], [3, 4]], 0)",
      "diff([[1, 2], [3, 4]], 1)",
      "diff([[1, 2], [3, 4]], bignumber(1))",
      "diff(matrix([[1, 2], [3, 4]]), 1)",
      "diff([[1, 2], matrix([3, 4])], 1)",
    ],
    seealso: ["subtract", "partitionSelect"],
  },
  BB = {
    name: "dot",
    category: "Matrix",
    syntax: ["dot(A, B)", "A * B"],
    description:
      "Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",
    examples: ["dot([2, 4, 1], [2, 2, 3])", "[2, 4, 1] * [2, 2, 3]"],
    seealso: ["multiply", "cross"],
  },
  IB = {
    name: "eigs",
    category: "Matrix",
    syntax: ["eigs(x)"],
    description:
      "Calculate the eigenvalues and eigenvectors of a real symmetric matrix",
    examples: ["eigs([[5, 2.3], [2.3, 1]])"],
    seealso: ["inv"],
  },
  $B = {
    name: "filter",
    category: "Matrix",
    syntax: ["filter(x, test)"],
    description: "Filter items in a matrix.",
    examples: [
      "isPositive(x) = x > 0",
      "filter([6, -2, -1, 4, 3], isPositive)",
      "filter([6, -2, 0, 1, 0], x != 0)",
    ],
    seealso: ["sort", "map", "forEach"],
  },
  zB = {
    name: "flatten",
    category: "Matrix",
    syntax: ["flatten(x)"],
    description:
      "Flatten a multi dimensional matrix into a single dimensional matrix.",
    examples: [
      "a = [1, 2, 3; 4, 5, 6]",
      "size(a)",
      "b = flatten(a)",
      "size(b)",
    ],
    seealso: ["concat", "resize", "size", "squeeze"],
  },
  RB = {
    name: "forEach",
    category: "Matrix",
    syntax: ["forEach(x, callback)"],
    description:
      "Iterates over all elements of a matrix/array, and executes the given callback function.",
    examples: [
      "numberOfPets = {}",
      "addPet(n) = numberOfPets[n] = (numberOfPets[n] ? numberOfPets[n]:0 ) + 1;",
      'forEach(["Dog","Cat","Cat"], addPet)',
      "numberOfPets",
    ],
    seealso: ["map", "sort", "filter"],
  },
  FB = {
    name: "getMatrixDataType",
    category: "Matrix",
    syntax: ["getMatrixDataType(x)"],
    description:
      'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',
    examples: [
      "getMatrixDataType([1, 2, 3])",
      "getMatrixDataType([[5 cm], [2 inch]])",
      'getMatrixDataType([1, "text"])',
      "getMatrixDataType([1, bignumber(4)])",
    ],
    seealso: ["matrix", "sparse", "typeOf"],
  },
  PB = {
    name: "identity",
    category: "Matrix",
    syntax: ["identity(n)", "identity(m, n)", "identity([m, n])"],
    description:
      "Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",
    examples: [
      "identity(3)",
      "identity(3, 5)",
      "a = [1, 2, 3; 4, 5, 6]",
      "identity(size(a))",
    ],
    seealso: [
      "concat",
      "det",
      "diag",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  LB = {
    name: "inv",
    category: "Matrix",
    syntax: ["inv(x)"],
    description: "Calculate the inverse of a matrix",
    examples: ["inv([1, 2; 3, 4])", "inv(4)", "1 / 4"],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  kB = {
    name: "pinv",
    category: "Matrix",
    syntax: ["pinv(x)"],
    description: "Calculate the Moore\u2013Penrose inverse of a matrix",
    examples: [
      "pinv([1, 2; 3, 4])",
      "pinv([[1, 0], [0, 1], [0, 1]])",
      "pinv(4)",
    ],
    seealso: ["inv"],
  },
  UB = {
    name: "kron",
    category: "Matrix",
    syntax: ["kron(x, y)"],
    description: "Calculates the kronecker product of 2 matrices or vectors.",
    examples: [
      "kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])",
      "kron([1,1], [2,3,4])",
    ],
    seealso: ["multiply", "dot", "cross"],
  },
  qB = {
    name: "map",
    category: "Matrix",
    syntax: ["map(x, callback)"],
    description:
      "Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",
    examples: ["map([1, 2, 3], square)"],
    seealso: ["filter", "forEach"],
  },
  HB = {
    name: "matrixFromColumns",
    category: "Matrix",
    syntax: [
      "math.matrixFromColumns(...arr)",
      "math.matrixFromColumns(row1, row2)",
      "math.matrixFromColumns(row1, row2, row3)",
    ],
    description: "Create a dense matrix from vectors as individual columns.",
    examples: ["matrixFromColumns([1, 2, 3], [[4],[5],[6]])"],
    seealso: ["matrix", "matrixFromRows", "matrixFromFunction", "zeros"],
  },
  VB = {
    name: "matrixFromFunction",
    category: "Matrix",
    syntax: [
      "math.matrixFromFunction(size, fn)",
      "math.matrixFromFunction(size, fn, format)",
      "math.matrixFromFunction(size, fn, format, datatype)",
      "math.matrixFromFunction(size, format, fn)",
      "math.matrixFromFunction(size, format, datatype, fn)",
    ],
    description:
      "Create a matrix by evaluating a generating function at each index.",
    examples: [
      "f(I) = I[1] - I[2]",
      "matrixFromFunction([3,3], f)",
      "g(I) = I[1] - I[2] == 1 ? 4 : 0",
      'matrixFromFunction([100, 100], "sparse", g)',
      "matrixFromFunction([5], random)",
    ],
    seealso: ["matrix", "matrixFromRows", "matrixFromColumns", "zeros"],
  },
  GB = {
    name: "matrixFromRows",
    category: "Matrix",
    syntax: [
      "math.matrixFromRows(...arr)",
      "math.matrixFromRows(row1, row2)",
      "math.matrixFromRows(row1, row2, row3)",
    ],
    description: "Create a dense matrix from vectors as individual rows.",
    examples: ["matrixFromRows([1, 2, 3], [[4],[5],[6]])"],
    seealso: ["matrix", "matrixFromColumns", "matrixFromFunction", "zeros"],
  },
  WB = {
    name: "ones",
    category: "Matrix",
    syntax: [
      "ones(m)",
      "ones(m, n)",
      "ones(m, n, p, ...)",
      "ones([m])",
      "ones([m, n])",
      "ones([m, n, p, ...])",
    ],
    description: "Create a matrix containing ones.",
    examples: [
      "ones(3)",
      "ones(3, 5)",
      "ones([2,3]) * 4.5",
      "a = [1, 2, 3; 4, 5, 6]",
      "ones(size(a))",
    ],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  ZB = {
    name: "partitionSelect",
    category: "Matrix",
    syntax: ["partitionSelect(x, k)", "partitionSelect(x, k, compare)"],
    description:
      "Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",
    examples: [
      "partitionSelect([5, 10, 1], 2)",
      'partitionSelect(["C", "B", "A", "D"], 1)',
    ],
    seealso: ["sort"],
  },
  QB = {
    name: "range",
    category: "Type",
    syntax: [
      "start:end",
      "start:step:end",
      "range(start, end)",
      "range(start, end, step)",
      "range(string)",
    ],
    description:
      "Create a range. Lower bound of the range is included, upper bound is excluded.",
    examples: [
      "1:5",
      "3:-1:-3",
      "range(3, 7)",
      "range(0, 12, 2)",
      'range("4:10")',
      "a = [1, 2, 3, 4; 5, 6, 7, 8]",
      "a[1:2, 1:2]",
    ],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  YB = {
    name: "reshape",
    category: "Matrix",
    syntax: ["reshape(x, sizes)"],
    description:
      "Reshape a multi dimensional array to fit the specified dimensions.",
    examples: [
      "reshape([1, 2, 3, 4, 5, 6], [2, 3])",
      "reshape([[1, 2], [3, 4]], [1, 4])",
      "reshape([[1, 2], [3, 4]], [4])",
    ],
    seealso: ["size", "squeeze", "resize"],
  },
  XB = {
    name: "resize",
    category: "Matrix",
    syntax: ["resize(x, size)", "resize(x, size, defaultValue)"],
    description: "Resize a matrix.",
    examples: [
      "resize([1,2,3,4,5], [3])",
      "resize([1,2,3], [5])",
      "resize([1,2,3], [5], -1)",
      "resize(2, [2, 3])",
      'resize("hello", [8], "!")',
    ],
    seealso: ["size", "subset", "squeeze", "reshape"],
  },
  jB = {
    name: "rotate",
    category: "Matrix",
    syntax: ["rotate(w, theta)", "rotate(w, theta, v)"],
    description:
      "Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",
    examples: [
      "rotate([1, 0], math.pi / 2)",
      'rotate(matrix([1, 0]), unit("35deg"))',
      'rotate([1, 0, 0], unit("90deg"), [0, 0, 1])',
      'rotate(matrix([1, 0, 0]), unit("90deg"), matrix([0, 0, 1]))',
    ],
    seealso: ["matrix", "rotationMatrix"],
  },
  JB = {
    name: "rotationMatrix",
    category: "Matrix",
    syntax: [
      "rotationMatrix(theta)",
      "rotationMatrix(theta, v)",
      "rotationMatrix(theta, v, format)",
    ],
    description:
      "Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",
    examples: [
      "rotationMatrix(pi / 2)",
      'rotationMatrix(unit("45deg"), [0, 0, 1])',
      'rotationMatrix(1, matrix([0, 0, 1]), "sparse")',
    ],
    seealso: ["cos", "sin"],
  },
  KB = {
    name: "row",
    category: "Matrix",
    syntax: ["row(x, index)"],
    description: "Return a row from a matrix or array.",
    examples: ["A = [[1, 2], [3, 4]]", "row(A, 1)", "row(A, 2)"],
    seealso: ["column", "matrixFromRows"],
  },
  e5 = {
    name: "size",
    category: "Matrix",
    syntax: ["size(x)"],
    description: "Calculate the size of a matrix.",
    examples: [
      "size(2.3)",
      'size("hello world")',
      "a = [1, 2; 3, 4; 5, 6]",
      "size(a)",
      "size(1:6)",
    ],
    seealso: [
      "concat",
      "count",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "squeeze",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  r5 = {
    name: "sort",
    category: "Matrix",
    syntax: ["sort(x)", "sort(x, compare)"],
    description:
      'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',
    examples: [
      "sort([5, 10, 1])",
      'sort(["C", "B", "A", "D"])',
      "sortByLength(a, b) = size(a)[1] - size(b)[1]",
      'sort(["Langdon", "Tom", "Sara"], sortByLength)',
      'sort(["10", "1", "2"], "natural")',
    ],
    seealso: ["map", "filter", "forEach"],
  },
  t5 = {
    name: "squeeze",
    category: "Matrix",
    syntax: ["squeeze(x)"],
    description: "Remove inner and outer singleton dimensions from a matrix.",
    examples: [
      "a = zeros(3,2,1)",
      "size(squeeze(a))",
      "b = zeros(1,1,3)",
      "size(squeeze(b))",
    ],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "subset",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  n5 = {
    name: "subset",
    category: "Matrix",
    syntax: [
      "value(index)",
      "value(index) = replacement",
      "subset(value, [index])",
      "subset(value, [index], replacement)",
    ],
    description:
      "Get or set a subset of the entries of a matrix or characters of a string. Indexes are one-based. There should be one index specification for each dimension of the target. Each specification can be a single index, a list of indices, or a range in colon notation `l:u`. In a range, both the lower bound l and upper bound u are included; and if a bound is omitted it defaults to the most extreme valid value. The cartesian product of the indices specified in each dimension determines the target of the operation.",
    examples: [
      "d = [1, 2; 3, 4]",
      "e = []",
      "e[1, 1:2] = [5, 6]",
      "e[2, :] = [7, 8]",
      "f = d * e",
      "f[2, 1]",
      "f[:, 1]",
      "f[[1,2], [1,3]] = [9, 10; 11, 12]",
      "f",
    ],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "trace",
      "transpose",
      "zeros",
    ],
  },
  i5 = {
    name: "trace",
    category: "Matrix",
    syntax: ["trace(A)"],
    description:
      "Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",
    examples: ["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]", "trace(A)"],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "transpose",
      "zeros",
    ],
  },
  a5 = {
    name: "transpose",
    category: "Matrix",
    syntax: ["x'", "transpose(x)"],
    description: "Transpose a matrix",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "transpose(a)"],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "zeros",
    ],
  },
  o5 = {
    name: "zeros",
    category: "Matrix",
    syntax: [
      "zeros(m)",
      "zeros(m, n)",
      "zeros(m, n, p, ...)",
      "zeros([m])",
      "zeros([m, n])",
      "zeros([m, n, p, ...])",
    ],
    description: "Create a matrix containing zeros.",
    examples: [
      "zeros(3)",
      "zeros(3, 5)",
      "a = [1, 2, 3; 4, 5, 6]",
      "zeros(size(a))",
    ],
    seealso: [
      "concat",
      "det",
      "diag",
      "identity",
      "inv",
      "ones",
      "range",
      "size",
      "squeeze",
      "subset",
      "trace",
      "transpose",
    ],
  },
  s5 = {
    name: "fft",
    category: "Matrix",
    syntax: ["fft(x)"],
    description: "Calculate N-dimensional fourier transform",
    examples: ["fft([[1, 0], [1, 0]])"],
    seealso: ["ifft"],
  },
  u5 = {
    name: "ifft",
    category: "Matrix",
    syntax: ["ifft(x)"],
    description: "Calculate N-dimensional inverse fourier transform",
    examples: ["ifft([[2, 2], [0, 0]])"],
    seealso: ["fft"],
  },
  l5 = {
    name: "combinations",
    category: "Probability",
    syntax: ["combinations(n, k)"],
    description:
      "Compute the number of combinations of n items taken k at a time",
    examples: ["combinations(7, 5)"],
    seealso: ["combinationsWithRep", "permutations", "factorial"],
  },
  c5 = {
    name: "combinationsWithRep",
    category: "Probability",
    syntax: ["combinationsWithRep(n, k)"],
    description:
      "Compute the number of combinations of n items taken k at a time with replacements.",
    examples: ["combinationsWithRep(7, 5)"],
    seealso: ["combinations", "permutations", "factorial"],
  },
  f5 = {
    name: "factorial",
    category: "Probability",
    syntax: ["n!", "factorial(n)"],
    description: "Compute the factorial of a value",
    examples: ["5!", "5 * 4 * 3 * 2 * 1", "3!"],
    seealso: ["combinations", "combinationsWithRep", "permutations", "gamma"],
  },
  p5 = {
    name: "gamma",
    category: "Probability",
    syntax: ["gamma(n)"],
    description:
      "Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",
    examples: ["gamma(4)", "3!", "gamma(1/2)", "sqrt(pi)"],
    seealso: ["factorial"],
  },
  m5 = {
    name: "lgamma",
    category: "Probability",
    syntax: ["lgamma(n)"],
    description:
      "Logarithm of the gamma function for real, positive numbers and complex numbers, using Lanczos approximation for numbers and Stirling series for complex numbers.",
    examples: [
      "lgamma(4)",
      "lgamma(1/2)",
      "lgamma(math.i)",
      "lgamma(complex(1.1, 2))",
    ],
    seealso: ["gamma"],
  },
  v5 = {
    name: "kldivergence",
    category: "Probability",
    syntax: ["kldivergence(x, y)"],
    description:
      "Calculate the Kullback-Leibler (KL) divergence  between two distributions.",
    examples: ["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],
    seealso: [],
  },
  d5 = {
    name: "multinomial",
    category: "Probability",
    syntax: ["multinomial(A)"],
    description:
      "Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",
    examples: ["multinomial([1, 2, 1])"],
    seealso: ["combinations", "factorial"],
  },
  h5 = {
    name: "permutations",
    category: "Probability",
    syntax: ["permutations(n)", "permutations(n, k)"],
    description:
      "Compute the number of permutations of n items taken k at a time",
    examples: ["permutations(5)", "permutations(5, 3)"],
    seealso: ["combinations", "combinationsWithRep", "factorial"],
  },
  g5 = {
    name: "pickRandom",
    category: "Probability",
    syntax: [
      "pickRandom(array)",
      "pickRandom(array, number)",
      "pickRandom(array, weights)",
      "pickRandom(array, number, weights)",
      "pickRandom(array, weights, number)",
    ],
    description: "Pick a random entry from a given array.",
    examples: [
      "pickRandom(0:10)",
      "pickRandom([1, 3, 1, 6])",
      "pickRandom([1, 3, 1, 6], 2)",
      "pickRandom([1, 3, 1, 6], [2, 3, 2, 1])",
      "pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])",
      "pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)",
    ],
    seealso: ["random", "randomInt"],
  },
  y5 = {
    name: "random",
    category: "Probability",
    syntax: [
      "random()",
      "random(max)",
      "random(min, max)",
      "random(size)",
      "random(size, max)",
      "random(size, min, max)",
    ],
    description: "Return a random number.",
    examples: ["random()", "random(10, 20)", "random([2, 3])"],
    seealso: ["pickRandom", "randomInt"],
  },
  x5 = {
    name: "randomInt",
    category: "Probability",
    syntax: [
      "randomInt(max)",
      "randomInt(min, max)",
      "randomInt(size)",
      "randomInt(size, max)",
      "randomInt(size, min, max)",
    ],
    description: "Return a random integer number",
    examples: ["randomInt(10, 20)", "randomInt([2, 3], 10)"],
    seealso: ["pickRandom", "random"],
  },
  w5 = {
    name: "compare",
    category: "Relational",
    syntax: ["compare(x, y)"],
    description:
      "Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
    examples: [
      "compare(2, 3)",
      "compare(3, 2)",
      "compare(2, 2)",
      "compare(5cm, 40mm)",
      "compare(2, [1, 2, 3])",
    ],
    seealso: [
      "equal",
      "unequal",
      "smaller",
      "smallerEq",
      "largerEq",
      "compareNatural",
      "compareText",
    ],
  },
  b5 = {
    name: "compareNatural",
    category: "Relational",
    syntax: ["compareNatural(x, y)"],
    description:
      "Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
    examples: [
      "compareNatural(2, 3)",
      "compareNatural(3, 2)",
      "compareNatural(2, 2)",
      "compareNatural(5cm, 40mm)",
      'compareNatural("2", "10")',
      "compareNatural(2 + 3i, 2 + 4i)",
      "compareNatural([1, 2, 4], [1, 2, 3])",
      "compareNatural([1, 5], [1, 2, 3])",
      "compareNatural([1, 2], [1, 2])",
      "compareNatural({a: 2}, {a: 4})",
    ],
    seealso: [
      "equal",
      "unequal",
      "smaller",
      "smallerEq",
      "largerEq",
      "compare",
      "compareText",
    ],
  },
  N5 = {
    name: "compareText",
    category: "Relational",
    syntax: ["compareText(x, y)"],
    description:
      "Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
    examples: [
      'compareText("B", "A")',
      'compareText("A", "B")',
      'compareText("A", "A")',
      'compareText("2", "10")',
      'compare("2", "10")',
      "compare(2, 10)",
      'compareNatural("2", "10")',
      'compareText("B", ["A", "B", "C"])',
    ],
    seealso: ["compare", "compareNatural"],
  },
  M5 = {
    name: "deepEqual",
    category: "Relational",
    syntax: ["deepEqual(x, y)"],
    description:
      "Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",
    examples: ["deepEqual([1,3,4], [1,3,4])", "deepEqual([1,3,4], [1,3])"],
    seealso: [
      "equal",
      "unequal",
      "smaller",
      "larger",
      "smallerEq",
      "largerEq",
      "compare",
    ],
  },
  S5 = {
    name: "equal",
    category: "Relational",
    syntax: ["x == y", "equal(x, y)"],
    description:
      "Check equality of two values. Returns true if the values are equal, and false if not.",
    examples: [
      "2+2 == 3",
      "2+2 == 4",
      "a = 3.2",
      "b = 6-2.8",
      "a == b",
      "50cm == 0.5m",
    ],
    seealso: [
      "unequal",
      "smaller",
      "larger",
      "smallerEq",
      "largerEq",
      "compare",
      "deepEqual",
      "equalText",
    ],
  },
  A5 = {
    name: "equalText",
    category: "Relational",
    syntax: ["equalText(x, y)"],
    description:
      "Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",
    examples: [
      'equalText("Hello", "Hello")',
      'equalText("a", "A")',
      'equal("2e3", "2000")',
      'equalText("2e3", "2000")',
      'equalText("B", ["A", "B", "C"])',
    ],
    seealso: ["compare", "compareNatural", "compareText", "equal"],
  },
  E5 = {
    name: "larger",
    category: "Relational",
    syntax: ["x > y", "larger(x, y)"],
    description:
      "Check if value x is larger than y. Returns true if x is larger than y, and false if not.",
    examples: [
      "2 > 3",
      "5 > 2*2",
      "a = 3.3",
      "b = 6-2.8",
      "(a > b)",
      "(b < a)",
      "5 cm > 2 inch",
    ],
    seealso: [
      "equal",
      "unequal",
      "smaller",
      "smallerEq",
      "largerEq",
      "compare",
    ],
  },
  C5 = {
    name: "largerEq",
    category: "Relational",
    syntax: ["x >= y", "largerEq(x, y)"],
    description:
      "Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",
    examples: ["2 >= 1+1", "2 > 1+1", "a = 3.2", "b = 6-2.8", "(a >= b)"],
    seealso: ["equal", "unequal", "smallerEq", "smaller", "compare"],
  },
  O5 = {
    name: "smaller",
    category: "Relational",
    syntax: ["x < y", "smaller(x, y)"],
    description:
      "Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",
    examples: [
      "2 < 3",
      "5 < 2*2",
      "a = 3.3",
      "b = 6-2.8",
      "(a < b)",
      "5 cm < 2 inch",
    ],
    seealso: ["equal", "unequal", "larger", "smallerEq", "largerEq", "compare"],
  },
  T5 = {
    name: "smallerEq",
    category: "Relational",
    syntax: ["x <= y", "smallerEq(x, y)"],
    description:
      "Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",
    examples: ["2 <= 1+1", "2 < 1+1", "a = 3.2", "b = 6-2.8", "(a <= b)"],
    seealso: ["equal", "unequal", "larger", "smaller", "largerEq", "compare"],
  },
  D5 = {
    name: "unequal",
    category: "Relational",
    syntax: ["x != y", "unequal(x, y)"],
    description:
      "Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",
    examples: [
      "2+2 != 3",
      "2+2 != 4",
      "a = 3.2",
      "b = 6-2.8",
      "a != b",
      "50cm != 0.5m",
      "5 cm != 2 inch",
    ],
    seealso: [
      "equal",
      "smaller",
      "larger",
      "smallerEq",
      "largerEq",
      "compare",
      "deepEqual",
    ],
  },
  _5 = {
    name: "setCartesian",
    category: "Set",
    syntax: ["setCartesian(set1, set2)"],
    description:
      "Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays and the values will be sorted in ascending order before the operation.",
    examples: ["setCartesian([1, 2], [3, 4])"],
    seealso: ["setUnion", "setIntersect", "setDifference", "setPowerset"],
  },
  B5 = {
    name: "setDifference",
    category: "Set",
    syntax: ["setDifference(set1, set2)"],
    description:
      "Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: [
      "setDifference([1, 2, 3, 4], [3, 4, 5, 6])",
      "setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
    ],
    seealso: ["setUnion", "setIntersect", "setSymDifference"],
  },
  I5 = {
    name: "setDistinct",
    category: "Set",
    syntax: ["setDistinct(set)"],
    description:
      "Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
    examples: ["setDistinct([1, 1, 1, 2, 2, 3])"],
    seealso: ["setMultiplicity"],
  },
  $5 = {
    name: "setIntersect",
    category: "Set",
    syntax: ["setIntersect(set1, set2)"],
    description:
      "Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: [
      "setIntersect([1, 2, 3, 4], [3, 4, 5, 6])",
      "setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
    ],
    seealso: ["setUnion", "setDifference"],
  },
  z5 = {
    name: "setIsSubset",
    category: "Set",
    syntax: ["setIsSubset(set1, set2)"],
    description:
      "Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: [
      "setIsSubset([1, 2], [3, 4, 5, 6])",
      "setIsSubset([3, 4], [3, 4, 5, 6])",
    ],
    seealso: ["setUnion", "setIntersect", "setDifference"],
  },
  R5 = {
    name: "setMultiplicity",
    category: "Set",
    syntax: ["setMultiplicity(element, set)"],
    description:
      "Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
    examples: [
      "setMultiplicity(1, [1, 2, 2, 4])",
      "setMultiplicity(2, [1, 2, 2, 4])",
    ],
    seealso: ["setDistinct", "setSize"],
  },
  F5 = {
    name: "setPowerset",
    category: "Set",
    syntax: ["setPowerset(set)"],
    description:
      "Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",
    examples: ["setPowerset([1, 2, 3])"],
    seealso: ["setCartesian"],
  },
  P5 = {
    name: "setSize",
    category: "Set",
    syntax: ["setSize(set)", "setSize(set, unique)"],
    description:
      'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',
    examples: ["setSize([1, 2, 2, 4])", "setSize([1, 2, 2, 4], true)"],
    seealso: ["setUnion", "setIntersect", "setDifference"],
  },
  L5 = {
    name: "setSymDifference",
    category: "Set",
    syntax: ["setSymDifference(set1, set2)"],
    description:
      "Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: [
      "setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])",
      "setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
    ],
    seealso: ["setUnion", "setIntersect", "setDifference"],
  },
  k5 = {
    name: "setUnion",
    category: "Set",
    syntax: ["setUnion(set1, set2)"],
    description:
      "Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: [
      "setUnion([1, 2, 3, 4], [3, 4, 5, 6])",
      "setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
    ],
    seealso: ["setIntersect", "setDifference"],
  },
  U5 = {
    name: "erf",
    category: "Special",
    syntax: ["erf(x)"],
    description:
      "Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",
    examples: ["erf(0.2)", "erf(-0.5)", "erf(4)"],
    seealso: [],
  },
  q5 = {
    name: "mad",
    category: "Statistics",
    syntax: ["mad(a, b, c, ...)", "mad(A)"],
    description:
      "Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",
    examples: ["mad(10, 20, 30)", "mad([1, 2, 3])"],
    seealso: ["mean", "median", "std", "abs"],
  },
  H5 = {
    name: "max",
    category: "Statistics",
    syntax: ["max(a, b, c, ...)", "max(A)", "max(A, dim)"],
    description: "Compute the maximum value of a list of values.",
    examples: [
      "max(2, 3, 4, 1)",
      "max([2, 3, 4, 1])",
      "max([2, 5; 4, 3])",
      "max([2, 5; 4, 3], 1)",
      "max([2, 5; 4, 3], 2)",
      "max(2.7, 7.1, -4.5, 2.0, 4.1)",
      "min(2.7, 7.1, -4.5, 2.0, 4.1)",
    ],
    seealso: ["mean", "median", "min", "prod", "std", "sum", "variance"],
  },
  V5 = {
    name: "mean",
    category: "Statistics",
    syntax: ["mean(a, b, c, ...)", "mean(A)", "mean(A, dim)"],
    description: "Compute the arithmetic mean of a list of values.",
    examples: [
      "mean(2, 3, 4, 1)",
      "mean([2, 3, 4, 1])",
      "mean([2, 5; 4, 3])",
      "mean([2, 5; 4, 3], 1)",
      "mean([2, 5; 4, 3], 2)",
      "mean([1.0, 2.7, 3.2, 4.0])",
    ],
    seealso: ["max", "median", "min", "prod", "std", "sum", "variance"],
  },
  G5 = {
    name: "median",
    category: "Statistics",
    syntax: ["median(a, b, c, ...)", "median(A)"],
    description:
      "Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",
    examples: ["median(5, 2, 7)", "median([3, -1, 5, 7])"],
    seealso: [
      "max",
      "mean",
      "min",
      "prod",
      "std",
      "sum",
      "variance",
      "quantileSeq",
    ],
  },
  W5 = {
    name: "min",
    category: "Statistics",
    syntax: ["min(a, b, c, ...)", "min(A)", "min(A, dim)"],
    description: "Compute the minimum value of a list of values.",
    examples: [
      "min(2, 3, 4, 1)",
      "min([2, 3, 4, 1])",
      "min([2, 5; 4, 3])",
      "min([2, 5; 4, 3], 1)",
      "min([2, 5; 4, 3], 2)",
      "min(2.7, 7.1, -4.5, 2.0, 4.1)",
      "max(2.7, 7.1, -4.5, 2.0, 4.1)",
    ],
    seealso: ["max", "mean", "median", "prod", "std", "sum", "variance"],
  },
  Z5 = {
    name: "mode",
    category: "Statistics",
    syntax: ["mode(a, b, c, ...)", "mode(A)", "mode(A, a, b, B, c, ...)"],
    description:
      "Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",
    examples: [
      "mode(2, 1, 4, 3, 1)",
      "mode([1, 2.7, 3.2, 4, 2.7])",
      "mode(1, 4, 6, 1, 6)",
    ],
    seealso: ["max", "mean", "min", "median", "prod", "std", "sum", "variance"],
  },
  Q5 = {
    name: "prod",
    category: "Statistics",
    syntax: ["prod(a, b, c, ...)", "prod(A)"],
    description: "Compute the product of all values.",
    examples: ["prod(2, 3, 4)", "prod([2, 3, 4])", "prod([2, 5; 4, 3])"],
    seealso: ["max", "mean", "min", "median", "min", "std", "sum", "variance"],
  },
  Y5 = {
    name: "quantileSeq",
    category: "Statistics",
    syntax: [
      "quantileSeq(A, prob[, sorted])",
      "quantileSeq(A, [prob1, prob2, ...][, sorted])",
      "quantileSeq(A, N[, sorted])",
    ],
    description: `Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. 

In case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.`,
    examples: [
      "quantileSeq([3, -1, 5, 7], 0.5)",
      "quantileSeq([3, -1, 5, 7], [1/3, 2/3])",
      "quantileSeq([3, -1, 5, 7], 2)",
      "quantileSeq([-1, 3, 5, 7], 0.5, true)",
    ],
    seealso: ["mean", "median", "min", "max", "prod", "std", "sum", "variance"],
  },
  X5 = {
    name: "std",
    category: "Statistics",
    syntax: ["std(a, b, c, ...)", "std(A)", "std(A, normalization)"],
    description:
      'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
    examples: [
      "std(2, 4, 6)",
      "std([2, 4, 6, 8])",
      'std([2, 4, 6, 8], "uncorrected")',
      'std([2, 4, 6, 8], "biased")',
      "std([1, 2, 3; 4, 5, 6])",
    ],
    seealso: ["max", "mean", "min", "median", "prod", "sum", "variance"],
  },
  j5 = {
    name: "cumsum",
    category: "Statistics",
    syntax: ["cumsum(a, b, c, ...)", "cumsum(A)"],
    description: "Compute the cumulative sum of all values.",
    examples: [
      "cumsum(2, 3, 4, 1)",
      "cumsum([2, 3, 4, 1])",
      "cumsum([1, 2; 3, 4])",
      "cumsum([1, 2; 3, 4], 1)",
      "cumsum([1, 2; 3, 4], 2)",
    ],
    seealso: ["max", "mean", "median", "min", "prod", "std", "sum", "variance"],
  },
  J5 = {
    name: "sum",
    category: "Statistics",
    syntax: ["sum(a, b, c, ...)", "sum(A)"],
    description: "Compute the sum of all values.",
    examples: ["sum(2, 3, 4, 1)", "sum([2, 3, 4, 1])", "sum([2, 5; 4, 3])"],
    seealso: ["max", "mean", "median", "min", "prod", "std", "sum", "variance"],
  },
  K5 = {
    name: "variance",
    category: "Statistics",
    syntax: [
      "variance(a, b, c, ...)",
      "variance(A)",
      "variance(A, normalization)",
    ],
    description:
      'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
    examples: [
      "variance(2, 4, 6)",
      "variance([2, 4, 6, 8])",
      'variance([2, 4, 6, 8], "uncorrected")',
      'variance([2, 4, 6, 8], "biased")',
      "variance([1, 2, 3; 4, 5, 6])",
    ],
    seealso: ["max", "mean", "min", "median", "min", "prod", "std", "sum"],
  },
  eI = {
    name: "acos",
    category: "Trigonometry",
    syntax: ["acos(x)"],
    description: "Compute the inverse cosine of a value in radians.",
    examples: ["acos(0.5)", "acos(cos(2.3))"],
    seealso: ["cos", "atan", "asin"],
  },
  rI = {
    name: "acosh",
    category: "Trigonometry",
    syntax: ["acosh(x)"],
    description:
      "Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",
    examples: ["acosh(1.5)"],
    seealso: ["cosh", "asinh", "atanh"],
  },
  tI = {
    name: "acot",
    category: "Trigonometry",
    syntax: ["acot(x)"],
    description: "Calculate the inverse cotangent of a value.",
    examples: ["acot(0.5)", "acot(cot(0.5))", "acot(2)"],
    seealso: ["cot", "atan"],
  },
  nI = {
    name: "acoth",
    category: "Trigonometry",
    syntax: ["acoth(x)"],
    description:
      "Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",
    examples: ["acoth(2)", "acoth(0.5)"],
    seealso: ["acsch", "asech"],
  },
  iI = {
    name: "acsc",
    category: "Trigonometry",
    syntax: ["acsc(x)"],
    description: "Calculate the inverse cotangent of a value.",
    examples: ["acsc(2)", "acsc(csc(0.5))", "acsc(0.5)"],
    seealso: ["csc", "asin", "asec"],
  },
  aI = {
    name: "acsch",
    category: "Trigonometry",
    syntax: ["acsch(x)"],
    description:
      "Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",
    examples: ["acsch(0.5)"],
    seealso: ["asech", "acoth"],
  },
  oI = {
    name: "asec",
    category: "Trigonometry",
    syntax: ["asec(x)"],
    description: "Calculate the inverse secant of a value.",
    examples: ["asec(0.5)", "asec(sec(0.5))", "asec(2)"],
    seealso: ["acos", "acot", "acsc"],
  },
  sI = {
    name: "asech",
    category: "Trigonometry",
    syntax: ["asech(x)"],
    description: "Calculate the inverse secant of a value.",
    examples: ["asech(0.5)"],
    seealso: ["acsch", "acoth"],
  },
  uI = {
    name: "asin",
    category: "Trigonometry",
    syntax: ["asin(x)"],
    description: "Compute the inverse sine of a value in radians.",
    examples: ["asin(0.5)", "asin(sin(0.5))"],
    seealso: ["sin", "acos", "atan"],
  },
  lI = {
    name: "asinh",
    category: "Trigonometry",
    syntax: ["asinh(x)"],
    description:
      "Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",
    examples: ["asinh(0.5)"],
    seealso: ["acosh", "atanh"],
  },
  cI = {
    name: "atan",
    category: "Trigonometry",
    syntax: ["atan(x)"],
    description: "Compute the inverse tangent of a value in radians.",
    examples: ["atan(0.5)", "atan(tan(0.5))"],
    seealso: ["tan", "acos", "asin"],
  },
  fI = {
    name: "atan2",
    category: "Trigonometry",
    syntax: ["atan2(y, x)"],
    description:
      "Computes the principal value of the arc tangent of y/x in radians.",
    examples: [
      "atan2(2, 2) / pi",
      "angle = 60 deg in rad",
      "x = cos(angle)",
      "y = sin(angle)",
      "atan2(y, x)",
    ],
    seealso: ["sin", "cos", "tan"],
  },
  pI = {
    name: "atanh",
    category: "Trigonometry",
    syntax: ["atanh(x)"],
    description:
      "Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",
    examples: ["atanh(0.5)"],
    seealso: ["acosh", "asinh"],
  },
  mI = {
    name: "cos",
    category: "Trigonometry",
    syntax: ["cos(x)"],
    description: "Compute the cosine of x in radians.",
    examples: [
      "cos(2)",
      "cos(pi / 4) ^ 2",
      "cos(180 deg)",
      "cos(60 deg)",
      "sin(0.2)^2 + cos(0.2)^2",
    ],
    seealso: ["acos", "sin", "tan"],
  },
  vI = {
    name: "cosh",
    category: "Trigonometry",
    syntax: ["cosh(x)"],
    description: "Compute the hyperbolic cosine of x in radians.",
    examples: ["cosh(0.5)"],
    seealso: ["sinh", "tanh", "coth"],
  },
  dI = {
    name: "cot",
    category: "Trigonometry",
    syntax: ["cot(x)"],
    description: "Compute the cotangent of x in radians. Defined as 1/tan(x)",
    examples: ["cot(2)", "1 / tan(2)"],
    seealso: ["sec", "csc", "tan"],
  },
  hI = {
    name: "coth",
    category: "Trigonometry",
    syntax: ["coth(x)"],
    description: "Compute the hyperbolic cotangent of x in radians.",
    examples: ["coth(2)", "1 / tanh(2)"],
    seealso: ["sech", "csch", "tanh"],
  },
  gI = {
    name: "csc",
    category: "Trigonometry",
    syntax: ["csc(x)"],
    description: "Compute the cosecant of x in radians. Defined as 1/sin(x)",
    examples: ["csc(2)", "1 / sin(2)"],
    seealso: ["sec", "cot", "sin"],
  },
  yI = {
    name: "csch",
    category: "Trigonometry",
    syntax: ["csch(x)"],
    description:
      "Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",
    examples: ["csch(2)", "1 / sinh(2)"],
    seealso: ["sech", "coth", "sinh"],
  },
  xI = {
    name: "sec",
    category: "Trigonometry",
    syntax: ["sec(x)"],
    description: "Compute the secant of x in radians. Defined as 1/cos(x)",
    examples: ["sec(2)", "1 / cos(2)"],
    seealso: ["cot", "csc", "cos"],
  },
  wI = {
    name: "sech",
    category: "Trigonometry",
    syntax: ["sech(x)"],
    description:
      "Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",
    examples: ["sech(2)", "1 / cosh(2)"],
    seealso: ["coth", "csch", "cosh"],
  },
  bI = {
    name: "sin",
    category: "Trigonometry",
    syntax: ["sin(x)"],
    description: "Compute the sine of x in radians.",
    examples: [
      "sin(2)",
      "sin(pi / 4) ^ 2",
      "sin(90 deg)",
      "sin(30 deg)",
      "sin(0.2)^2 + cos(0.2)^2",
    ],
    seealso: ["asin", "cos", "tan"],
  },
  NI = {
    name: "sinh",
    category: "Trigonometry",
    syntax: ["sinh(x)"],
    description: "Compute the hyperbolic sine of x in radians.",
    examples: ["sinh(0.5)"],
    seealso: ["cosh", "tanh"],
  },
  MI = {
    name: "tan",
    category: "Trigonometry",
    syntax: ["tan(x)"],
    description: "Compute the tangent of x in radians.",
    examples: ["tan(0.5)", "sin(0.5) / cos(0.5)", "tan(pi / 4)", "tan(45 deg)"],
    seealso: ["atan", "sin", "cos"],
  },
  SI = {
    name: "tanh",
    category: "Trigonometry",
    syntax: ["tanh(x)"],
    description: "Compute the hyperbolic tangent of x in radians.",
    examples: ["tanh(0.5)", "sinh(0.5) / cosh(0.5)"],
    seealso: ["sinh", "cosh"],
  },
  AI = {
    name: "to",
    category: "Units",
    syntax: ["x to unit", "to(x, unit)"],
    description: "Change the unit of a value.",
    examples: ["5 inch to cm", "3.2kg to g", "16 bytes in bits"],
    seealso: [],
  },
  EI = {
    name: "bin",
    category: "Utils",
    syntax: ["bin(value)"],
    description: "Format a number as binary",
    examples: ["bin(2)"],
    seealso: ["oct", "hex"],
  },
  CI = {
    name: "clone",
    category: "Utils",
    syntax: ["clone(x)"],
    description:
      "Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",
    examples: [
      "clone(3.5)",
      "clone(2 - 4i)",
      "clone(45 deg)",
      "clone([1, 2; 3, 4])",
      'clone("hello world")',
    ],
    seealso: [],
  },
  OI = {
    name: "format",
    category: "Utils",
    syntax: ["format(value)", "format(value, precision)"],
    description: "Format a value of any type as string.",
    examples: ["format(2.3)", "format(3 - 4i)", "format([])", "format(pi, 3)"],
    seealso: ["print"],
  },
  TI = {
    name: "hasNumericValue",
    category: "Utils",
    syntax: ["hasNumericValue(x)"],
    description:
      "Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",
    examples: [
      "hasNumericValue(2)",
      'hasNumericValue("2")',
      'isNumeric("2")',
      "hasNumericValue(0)",
      "hasNumericValue(bignumber(500))",
      "hasNumericValue(fraction(0.125))",
      "hasNumericValue(2 + 3i)",
      'hasNumericValue([2.3, "foo", false])',
    ],
    seealso: [
      "isInteger",
      "isZero",
      "isNegative",
      "isPositive",
      "isNaN",
      "isNumeric",
    ],
  },
  DI = {
    name: "hex",
    category: "Utils",
    syntax: ["hex(value)"],
    description: "Format a number as hexadecimal",
    examples: ["hex(240)"],
    seealso: ["bin", "oct"],
  },
  _I = {
    name: "isInteger",
    category: "Utils",
    syntax: ["isInteger(x)"],
    description: "Test whether a value is an integer number.",
    examples: ["isInteger(2)", "isInteger(3.5)", "isInteger([3, 0.5, -2])"],
    seealso: ["isNegative", "isNumeric", "isPositive", "isZero"],
  },
  BI = {
    name: "isNaN",
    category: "Utils",
    syntax: ["isNaN(x)"],
    description: "Test whether a value is NaN (not a number)",
    examples: ["isNaN(2)", "isNaN(0 / 0)", "isNaN(NaN)", "isNaN(Infinity)"],
    seealso: ["isNegative", "isNumeric", "isPositive", "isZero"],
  },
  II = {
    name: "isNegative",
    category: "Utils",
    syntax: ["isNegative(x)"],
    description: "Test whether a value is negative: smaller than zero.",
    examples: [
      "isNegative(2)",
      "isNegative(0)",
      "isNegative(-4)",
      "isNegative([3, 0.5, -2])",
    ],
    seealso: ["isInteger", "isNumeric", "isPositive", "isZero"],
  },
  $I = {
    name: "isNumeric",
    category: "Utils",
    syntax: ["isNumeric(x)"],
    description:
      "Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",
    examples: [
      "isNumeric(2)",
      'isNumeric("2")',
      'hasNumericValue("2")',
      "isNumeric(0)",
      "isNumeric(bignumber(500))",
      "isNumeric(fraction(0.125))",
      "isNumeric(2 + 3i)",
      'isNumeric([2.3, "foo", false])',
    ],
    seealso: [
      "isInteger",
      "isZero",
      "isNegative",
      "isPositive",
      "isNaN",
      "hasNumericValue",
    ],
  },
  zI = {
    name: "isPositive",
    category: "Utils",
    syntax: ["isPositive(x)"],
    description: "Test whether a value is positive: larger than zero.",
    examples: [
      "isPositive(2)",
      "isPositive(0)",
      "isPositive(-4)",
      "isPositive([3, 0.5, -2])",
    ],
    seealso: ["isInteger", "isNumeric", "isNegative", "isZero"],
  },
  RI = {
    name: "isPrime",
    category: "Utils",
    syntax: ["isPrime(x)"],
    description:
      "Test whether a value is prime: has no divisors other than itself and one.",
    examples: ["isPrime(3)", "isPrime(-2)", "isPrime([2, 17, 100])"],
    seealso: ["isInteger", "isNumeric", "isNegative", "isZero"],
  },
  FI = {
    name: "isZero",
    category: "Utils",
    syntax: ["isZero(x)"],
    description: "Test whether a value is zero.",
    examples: ["isZero(2)", "isZero(0)", "isZero(-4)", "isZero([3, 0, -2, 0])"],
    seealso: ["isInteger", "isNumeric", "isNegative", "isPositive"],
  },
  PI = {
    name: "numeric",
    category: "Utils",
    syntax: ["numeric(x)"],
    description:
      "Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",
    examples: [
      'numeric("4")',
      'numeric("4", "number")',
      'numeric("4", "BigNumber")',
      'numeric("4", "Fraction)',
      'numeric(4, "Fraction")',
      'numeric(fraction(2, 5), "number)',
    ],
    seealso: ["number", "fraction", "bignumber", "string", "format"],
  },
  LI = {
    name: "oct",
    category: "Utils",
    syntax: ["oct(value)"],
    description: "Format a number as octal",
    examples: ["oct(56)"],
    seealso: ["bin", "hex"],
  },
  kI = {
    name: "print",
    category: "Utils",
    syntax: ["print(template, values)", "print(template, values, precision)"],
    description: "Interpolate values into a string template.",
    examples: [
      'print("Lucy is $age years old", {age: 5})',
      'print("The value of pi is $pi", {pi: pi}, 3)',
      'print("Hello, $user.name!", {user: {name: "John"}})',
      'print("Values: $0, $1, $2", [6, 9, 4])',
    ],
    seealso: ["format"],
  },
  UI = {
    name: "typeOf",
    category: "Utils",
    syntax: ["typeOf(x)"],
    description: "Get the type of a variable.",
    examples: [
      "typeOf(3.5)",
      "typeOf(2 - 4i)",
      "typeOf(45 deg)",
      'typeOf("hello world")',
    ],
    seealso: ["getMatrixDataType"],
  },
  qI = {
    bignumber: qD,
    boolean: HD,
    complex: VD,
    createUnit: GD,
    fraction: WD,
    index: ZD,
    matrix: QD,
    number: YD,
    sparse: XD,
    splitUnit: jD,
    string: JD,
    unit: KD,
    e: Rd,
    E: Rd,
    false: CD,
    i: OD,
    Infinity: TD,
    LN2: _D,
    LN10: DD,
    LOG2E: ID,
    LOG10E: BD,
    NaN: $D,
    null: zD,
    pi: Fd,
    PI: Fd,
    phi: RD,
    SQRT1_2: FD,
    SQRT2: PD,
    tau: LD,
    true: kD,
    version: UD,
    speedOfLight: {
      description: "Speed of light in vacuum",
      examples: ["speedOfLight"],
    },
    gravitationConstant: {
      description: "Newtonian constant of gravitation",
      examples: ["gravitationConstant"],
    },
    planckConstant: {
      description: "Planck constant",
      examples: ["planckConstant"],
    },
    reducedPlanckConstant: {
      description: "Reduced Planck constant",
      examples: ["reducedPlanckConstant"],
    },
    magneticConstant: {
      description: "Magnetic constant (vacuum permeability)",
      examples: ["magneticConstant"],
    },
    electricConstant: {
      description: "Electric constant (vacuum permeability)",
      examples: ["electricConstant"],
    },
    vacuumImpedance: {
      description: "Characteristic impedance of vacuum",
      examples: ["vacuumImpedance"],
    },
    coulomb: { description: "Coulomb's constant", examples: ["coulomb"] },
    elementaryCharge: {
      description: "Elementary charge",
      examples: ["elementaryCharge"],
    },
    bohrMagneton: { description: "Borh magneton", examples: ["bohrMagneton"] },
    conductanceQuantum: {
      description: "Conductance quantum",
      examples: ["conductanceQuantum"],
    },
    inverseConductanceQuantum: {
      description: "Inverse conductance quantum",
      examples: ["inverseConductanceQuantum"],
    },
    magneticFluxQuantum: {
      description: "Magnetic flux quantum",
      examples: ["magneticFluxQuantum"],
    },
    nuclearMagneton: {
      description: "Nuclear magneton",
      examples: ["nuclearMagneton"],
    },
    klitzing: { description: "Von Klitzing constant", examples: ["klitzing"] },
    bohrRadius: { description: "Borh radius", examples: ["bohrRadius"] },
    classicalElectronRadius: {
      description: "Classical electron radius",
      examples: ["classicalElectronRadius"],
    },
    electronMass: { description: "Electron mass", examples: ["electronMass"] },
    fermiCoupling: {
      description: "Fermi coupling constant",
      examples: ["fermiCoupling"],
    },
    fineStructure: {
      description: "Fine-structure constant",
      examples: ["fineStructure"],
    },
    hartreeEnergy: {
      description: "Hartree energy",
      examples: ["hartreeEnergy"],
    },
    protonMass: { description: "Proton mass", examples: ["protonMass"] },
    deuteronMass: { description: "Deuteron Mass", examples: ["deuteronMass"] },
    neutronMass: { description: "Neutron mass", examples: ["neutronMass"] },
    quantumOfCirculation: {
      description: "Quantum of circulation",
      examples: ["quantumOfCirculation"],
    },
    rydberg: { description: "Rydberg constant", examples: ["rydberg"] },
    thomsonCrossSection: {
      description: "Thomson cross section",
      examples: ["thomsonCrossSection"],
    },
    weakMixingAngle: {
      description: "Weak mixing angle",
      examples: ["weakMixingAngle"],
    },
    efimovFactor: { description: "Efimov factor", examples: ["efimovFactor"] },
    atomicMass: {
      description: "Atomic mass constant",
      examples: ["atomicMass"],
    },
    avogadro: { description: "Avogadro's number", examples: ["avogadro"] },
    boltzmann: { description: "Boltzmann constant", examples: ["boltzmann"] },
    faraday: { description: "Faraday constant", examples: ["faraday"] },
    firstRadiation: {
      description: "First radiation constant",
      examples: ["firstRadiation"],
    },
    loschmidt: {
      description: "Loschmidt constant at T=273.15 K and p=101.325 kPa",
      examples: ["loschmidt"],
    },
    gasConstant: { description: "Gas constant", examples: ["gasConstant"] },
    molarPlanckConstant: {
      description: "Molar Planck constant",
      examples: ["molarPlanckConstant"],
    },
    molarVolume: {
      description:
        "Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",
      examples: ["molarVolume"],
    },
    sackurTetrode: {
      description: "Sackur-Tetrode constant at T=1 K and p=101.325 kPa",
      examples: ["sackurTetrode"],
    },
    secondRadiation: {
      description: "Second radiation constant",
      examples: ["secondRadiation"],
    },
    stefanBoltzmann: {
      description: "Stefan-Boltzmann constant",
      examples: ["stefanBoltzmann"],
    },
    wienDisplacement: {
      description: "Wien displacement law constant",
      examples: ["wienDisplacement"],
    },
    molarMass: { description: "Molar mass constant", examples: ["molarMass"] },
    molarMassC12: {
      description: "Molar mass constant of carbon-12",
      examples: ["molarMassC12"],
    },
    gravity: {
      description:
        "Standard acceleration of gravity (standard acceleration of free-fall on Earth)",
      examples: ["gravity"],
    },
    planckLength: { description: "Planck length", examples: ["planckLength"] },
    planckMass: { description: "Planck mass", examples: ["planckMass"] },
    planckTime: { description: "Planck time", examples: ["planckTime"] },
    planckCharge: { description: "Planck charge", examples: ["planckCharge"] },
    planckTemperature: {
      description: "Planck temperature",
      examples: ["planckTemperature"],
    },
    derivative: n_,
    lsolve: a_,
    lsolveAll: o_,
    lup: s_,
    lusolve: u_,
    leafCount: i_,
    resolve: f_,
    simplify: p_,
    simplifyCore: m_,
    symbolicEqual: d_,
    rationalize: c_,
    slu: v_,
    usolve: h_,
    usolveAll: g_,
    qr: l_,
    abs: y_,
    add: x_,
    cbrt: w_,
    ceil: b_,
    cube: N_,
    divide: M_,
    dotDivide: S_,
    dotMultiply: A_,
    dotPow: E_,
    exp: C_,
    expm: O_,
    expm1: T_,
    fix: D_,
    floor: __,
    gcd: B_,
    hypot: I_,
    lcm: z_,
    log: R_,
    log2: L_,
    log1p: P_,
    log10: F_,
    mod: k_,
    multiply: U_,
    norm: q_,
    nthRoot: H_,
    nthRoots: V_,
    pow: G_,
    round: W_,
    sign: Z_,
    sqrt: Q_,
    sqrtm: Y_,
    square: X_,
    subtract: j_,
    unaryMinus: J_,
    unaryPlus: K_,
    xgcd: eB,
    invmod: $_,
    bitAnd: rB,
    bitNot: tB,
    bitOr: nB,
    bitXor: iB,
    leftShift: aB,
    rightArithShift: oB,
    rightLogShift: sB,
    bellNumbers: uB,
    catalan: lB,
    composition: cB,
    stirlingS2: fB,
    config: e_,
    import: r_,
    typed: t_,
    arg: pB,
    conj: mB,
    re: dB,
    im: vB,
    evaluate: hB,
    help: gB,
    distance: yB,
    intersect: xB,
    and: wB,
    not: bB,
    or: NB,
    xor: MB,
    concat: AB,
    count: EB,
    cross: CB,
    column: SB,
    ctranspose: OB,
    det: TB,
    diag: DB,
    diff: _B,
    dot: BB,
    getMatrixDataType: FB,
    identity: PB,
    filter: $B,
    flatten: zB,
    forEach: RB,
    inv: LB,
    pinv: kB,
    eigs: IB,
    kron: UB,
    matrixFromFunction: VB,
    matrixFromRows: GB,
    matrixFromColumns: HB,
    map: qB,
    ones: WB,
    partitionSelect: ZB,
    range: QB,
    resize: XB,
    reshape: YB,
    rotate: jB,
    rotationMatrix: JB,
    row: KB,
    size: e5,
    sort: r5,
    squeeze: t5,
    subset: n5,
    trace: i5,
    transpose: a5,
    zeros: o5,
    fft: s5,
    ifft: u5,
    combinations: l5,
    combinationsWithRep: c5,
    factorial: f5,
    gamma: p5,
    kldivergence: v5,
    lgamma: m5,
    multinomial: d5,
    permutations: h5,
    pickRandom: g5,
    random: y5,
    randomInt: x5,
    compare: w5,
    compareNatural: b5,
    compareText: N5,
    deepEqual: M5,
    equal: S5,
    equalText: A5,
    larger: E5,
    largerEq: C5,
    smaller: O5,
    smallerEq: T5,
    unequal: D5,
    setCartesian: _5,
    setDifference: B5,
    setDistinct: I5,
    setIntersect: $5,
    setIsSubset: z5,
    setMultiplicity: R5,
    setPowerset: F5,
    setSize: P5,
    setSymDifference: L5,
    setUnion: k5,
    erf: U5,
    cumsum: j5,
    mad: q5,
    max: H5,
    mean: V5,
    median: G5,
    min: W5,
    mode: Z5,
    prod: Q5,
    quantileSeq: Y5,
    std: X5,
    sum: J5,
    variance: K5,
    acos: eI,
    acosh: rI,
    acot: tI,
    acoth: nI,
    acsc: iI,
    acsch: aI,
    asec: oI,
    asech: sI,
    asin: uI,
    asinh: lI,
    atan: cI,
    atanh: pI,
    atan2: fI,
    cos: mI,
    cosh: vI,
    cot: dI,
    coth: hI,
    csc: gI,
    csch: yI,
    sec: xI,
    sech: wI,
    sin: bI,
    sinh: NI,
    tan: MI,
    tanh: SI,
    to: AI,
    clone: CI,
    format: OI,
    bin: EI,
    oct: LI,
    hex: DI,
    isNaN: BI,
    isInteger: _I,
    isNegative: II,
    isNumeric: $I,
    hasNumericValue: TI,
    isPositive: zI,
    isPrime: RI,
    isZero: FI,
    print: kI,
    typeOf: UI,
    numeric: PI,
  },
  Pd = "help",
  HI = ["typed", "mathWithTransform", "Help"],
  VI = F(Pd, HI, (e) => {
    var { typed: r, mathWithTransform: t, Help: n } = e;
    return r(Pd, {
      any: function (a) {
        var s,
          f = a;
        if (typeof a != "string") {
          for (s in t)
            if (ge(t, s) && a === t[s]) {
              f = s;
              break;
            }
        }
        var l = mt(qI, f);
        if (!l) {
          var p = typeof f == "function" ? f.name : f;
          throw new Error('No documentation found on "' + p + '"');
        }
        return new n(l);
      },
    });
  }),
  Ld = "chain",
  GI = ["typed", "Chain"],
  WI = F(Ld, GI, (e) => {
    var { typed: r, Chain: t } = e;
    return r(Ld, {
      "": function () {
        return new t();
      },
      any: function (i) {
        return new t(i);
      },
    });
  }),
  kd = "det",
  ZI = [
    "typed",
    "matrix",
    "subtract",
    "multiply",
    "divideScalar",
    "isZero",
    "unaryMinus",
  ],
  QI = F(kd, ZI, (e) => {
    var {
      typed: r,
      matrix: t,
      subtract: n,
      multiply: i,
      divideScalar: a,
      isZero: s,
      unaryMinus: f,
    } = e;
    return r(kd, {
      any: function (u) {
        return Me(u);
      },
      "Array | Matrix": function (u) {
        var o;
        switch (
          (Ae(u)
            ? (o = u.size())
            : Array.isArray(u)
            ? ((u = t(u)), (o = u.size()))
            : (o = []),
          o.length)
        ) {
          case 0:
            return Me(u);
          case 1:
            if (o[0] === 1) return Me(u.valueOf()[0]);
            throw new RangeError("Matrix must be square (size: " + _e(o) + ")");
          case 2: {
            var c = o[0],
              m = o[1];
            if (c === m) return l(u.clone().valueOf(), c);
            throw new RangeError("Matrix must be square (size: " + _e(o) + ")");
          }
          default:
            throw new RangeError(
              "Matrix must be two dimensional (size: " + _e(o) + ")"
            );
        }
      },
    });
    function l(p, u, o) {
      if (u === 1) return Me(p[0][0]);
      if (u === 2) return n(i(p[0][0], p[1][1]), i(p[1][0], p[0][1]));
      for (
        var c = !1, m = new Array(u).fill(0).map((A, S) => S), v = 0;
        v < u;
        v++
      ) {
        var d = m[v];
        if (s(p[d][v])) {
          var N = void 0;
          for (N = v + 1; N < u; N++)
            if (!s(p[m[N]][v])) {
              (d = m[N]), (m[N] = m[v]), (m[v] = d), (c = !c);
              break;
            }
          if (N === u) return p[d][v];
        }
        for (
          var g = p[d][v], w = v === 0 ? 1 : p[m[v - 1]][v - 1], h = v + 1;
          h < u;
          h++
        )
          for (var x = m[h], b = v + 1; b < u; b++)
            p[x][b] = a(n(i(p[x][b], g), i(p[x][v], p[d][b])), w);
      }
      var y = p[m[u - 1]][u - 1];
      return c ? f(y) : y;
    }
  }),
  Ud = "inv",
  YI = [
    "typed",
    "matrix",
    "divideScalar",
    "addScalar",
    "multiply",
    "unaryMinus",
    "det",
    "identity",
    "abs",
  ],
  XI = F(Ud, YI, (e) => {
    var {
      typed: r,
      matrix: t,
      divideScalar: n,
      addScalar: i,
      multiply: a,
      unaryMinus: s,
      det: f,
      identity: l,
      abs: p,
    } = e;
    return r(Ud, {
      "Array | Matrix": function (c) {
        var m = Ae(c) ? c.size() : Ie(c);
        switch (m.length) {
          case 1:
            if (m[0] === 1)
              return Ae(c) ? t([n(1, c.valueOf()[0])]) : [n(1, c[0])];
            throw new RangeError("Matrix must be square (size: " + _e(m) + ")");
          case 2: {
            var v = m[0],
              d = m[1];
            if (v === d)
              return Ae(c) ? t(u(c.valueOf(), v, d), c.storage()) : u(c, v, d);
            throw new RangeError("Matrix must be square (size: " + _e(m) + ")");
          }
          default:
            throw new RangeError(
              "Matrix must be two dimensional (size: " + _e(m) + ")"
            );
        }
      },
      any: function (c) {
        return n(1, c);
      },
    });
    function u(o, c, m) {
      var v, d, N, g, w;
      if (c === 1) {
        if (((g = o[0][0]), g === 0))
          throw Error("Cannot calculate inverse, determinant is zero");
        return [[n(1, g)]];
      } else if (c === 2) {
        var h = f(o);
        if (h === 0)
          throw Error("Cannot calculate inverse, determinant is zero");
        return [
          [n(o[1][1], h), n(s(o[0][1]), h)],
          [n(s(o[1][0]), h), n(o[0][0], h)],
        ];
      } else {
        var x = o.concat();
        for (v = 0; v < c; v++) x[v] = x[v].concat();
        for (var b = l(c).valueOf(), y = 0; y < m; y++) {
          var A = p(x[y][y]),
            S = y;
          for (v = y + 1; v < c; )
            p(x[v][y]) > A && ((A = p(x[v][y])), (S = v)), v++;
          if (A === 0)
            throw Error("Cannot calculate inverse, determinant is zero");
          (v = S),
            v !== y &&
              ((w = x[y]),
              (x[y] = x[v]),
              (x[v] = w),
              (w = b[y]),
              (b[y] = b[v]),
              (b[v] = w));
          var E = x[y],
            M = b[y];
          for (v = 0; v < c; v++) {
            var _ = x[v],
              C = b[v];
            if (v !== y) {
              if (_[y] !== 0) {
                for (N = n(s(_[y]), E[y]), d = y; d < m; d++)
                  _[d] = i(_[d], a(N, E[d]));
                for (d = 0; d < m; d++) C[d] = i(C[d], a(N, M[d]));
              }
            } else {
              for (N = E[y], d = y; d < m; d++) _[d] = n(_[d], N);
              for (d = 0; d < m; d++) C[d] = n(C[d], N);
            }
          }
        }
        return b;
      }
    }
  }),
  qd = "pinv",
  jI = [
    "typed",
    "matrix",
    "inv",
    "deepEqual",
    "equal",
    "dotDivide",
    "dot",
    "ctranspose",
    "divideScalar",
    "multiply",
    "add",
    "Complex",
  ],
  JI = F(qd, jI, (e) => {
    var {
      typed: r,
      matrix: t,
      inv: n,
      deepEqual: i,
      equal: a,
      dotDivide: s,
      dot: f,
      ctranspose: l,
      divideScalar: p,
      multiply: u,
      add: o,
      Complex: c,
    } = e;
    return r(qd, {
      "Array | Matrix": function (h) {
        var x = Ae(h) ? h.size() : Ie(h);
        switch (x.length) {
          case 1:
            return g(h) ? l(h) : x[0] === 1 ? n(h) : s(l(h), f(h, h));
          case 2: {
            if (g(h)) return l(h);
            var b = x[0],
              y = x[1];
            if (b === y)
              try {
                return n(h);
              } catch (A) {
                if (
                  !(
                    A instanceof Error &&
                    A.message.match(
                      /Cannot calculate inverse, determinant is zero/
                    )
                  )
                )
                  throw A;
              }
            return Ae(h) ? t(m(h.valueOf(), b, y), h.storage()) : m(h, b, y);
          }
          default:
            throw new RangeError(
              "Matrix must be two dimensional (size: " + _e(x) + ")"
            );
        }
      },
      any: function (h) {
        return a(h, 0) ? Me(h) : p(1, h);
      },
    });
    function m(w, h, x) {
      var { C: b, F: y } = d(w, h, x),
        A = u(n(u(l(b), b)), l(b)),
        S = u(l(y), n(u(y, l(y))));
      return u(S, A);
    }
    function v(w, h, x) {
      for (var b = Me(w), y = 0, A = 0; A < h; A++) {
        if (x <= y) return b;
        for (var S = A; N(b[S][y]); )
          if ((S++, h === S && ((S = A), y++, x === y))) return b;
        [b[S], b[A]] = [b[A], b[S]];
        for (var E = b[A][y], M = 0; M < x; M++) b[A][M] = s(b[A][M], E);
        for (var _ = 0; _ < h; _++)
          if (_ !== A) {
            E = b[_][y];
            for (var C = 0; C < x; C++)
              b[_][C] = o(b[_][C], u(-1, u(E, b[A][C])));
          }
        y++;
      }
      return b;
    }
    function d(w, h, x) {
      var b = v(w, h, x),
        y = w.map((S, E) => S.filter((M, _) => _ < h && !N(f(b[_], b[_])))),
        A = b.filter((S, E) => !N(f(b[E], b[E])));
      return { C: y, F: A };
    }
    function N(w) {
      return a(o(w, c(1, 1)), o(0, c(1, 1)));
    }
    function g(w) {
      return i(o(w, c(1, 1)), o(u(w, 0), c(1, 1)));
    }
  });
function KI(e) {
  var {
    addScalar: r,
    subtract: t,
    flatten: n,
    multiply: i,
    multiplyScalar: a,
    divideScalar: s,
    sqrt: f,
    abs: l,
    bignumber: p,
    diag: u,
    inv: o,
    qr: c,
    usolve: m,
    usolveAll: v,
    equal: d,
    complex: N,
    larger: g,
    smaller: w,
    matrixFromColumns: h,
    dot: x,
  } = e;
  function b(P, W, J, G, Y) {
    Y === void 0 && (Y = !0);
    var re = y(P, W, J, G, Y);
    A(P, W, J, G, Y, re);
    var { values: K, C: ie } = S(P, W, J, G, Y),
      te;
    return (
      Y && ((te = E(P, W, ie, re, K, J, G)), (te = h(...te))),
      { values: K, vectors: te }
    );
  }
  function y(P, W, J, G, Y) {
    var re = G === "BigNumber",
      K = G === "Complex",
      ie = re ? p(0) : 0,
      te = re ? p(1) : K ? N(1) : 1,
      oe = re ? p(1) : 1,
      ee = re ? p(10) : 2,
      de = a(ee, ee),
      xe;
    Y && (xe = Array(W).fill(te));
    for (var ce = !1; !ce; ) {
      ce = !0;
      for (var he = 0; he < W; he++) {
        for (var k = ie, Q = ie, V = 0; V < W; V++)
          if (he !== V) {
            var q = l(P[he][V]);
            (k = r(k, q)), (Q = r(Q, q));
          }
        if (!d(k, 0) && !d(Q, 0)) {
          for (var X = oe, z = k, U = s(Q, ee), j = a(Q, ee); w(z, U); )
            (z = a(z, de)), (X = a(X, ee));
          for (; g(z, j); ) (z = s(z, de)), (X = s(X, ee));
          var H = w(s(r(z, Q), X), a(r(k, Q), 0.95));
          if (H) {
            ce = !1;
            for (var ae = s(1, X), ue = 0; ue < W; ue++)
              he !== ue &&
                ((P[he][ue] = a(P[he][ue], X)), (P[ue][he] = a(P[ue][he], ae)));
            Y && (xe[he] = a(xe[he], X));
          }
        }
      }
    }
    return u(xe);
  }
  function A(P, W, J, G, Y, re) {
    var K = G === "BigNumber",
      ie = G === "Complex",
      te = K ? p(0) : ie ? N(0) : 0;
    K && (J = p(J));
    for (var oe = 0; oe < W - 2; oe++) {
      for (var ee = 0, de = te, xe = oe + 1; xe < W; xe++) {
        var ce = P[xe][oe];
        w(l(de), l(ce)) && ((de = ce), (ee = xe));
      }
      if (!w(l(de), J)) {
        if (ee !== oe + 1) {
          var he = P[ee];
          (P[ee] = P[oe + 1]), (P[oe + 1] = he);
          for (var k = 0; k < W; k++) {
            var Q = P[k][ee];
            (P[k][ee] = P[k][oe + 1]), (P[k][oe + 1] = Q);
          }
          if (Y) {
            var V = re[ee];
            (re[ee] = re[oe + 1]), (re[oe + 1] = V);
          }
        }
        for (var q = oe + 2; q < W; q++) {
          var X = s(P[q][oe], de);
          if (X !== 0) {
            for (var z = 0; z < W; z++)
              P[q][z] = t(P[q][z], a(X, P[oe + 1][z]));
            for (var U = 0; U < W; U++)
              P[U][oe + 1] = r(P[U][oe + 1], a(X, P[U][q]));
            if (Y)
              for (var j = 0; j < W; j++)
                re[q][j] = t(re[q][j], a(X, re[oe + 1][j]));
          }
        }
      }
    }
    return re;
  }
  function S(P, W, J, G, Y) {
    var re = G === "BigNumber",
      K = G === "Complex",
      ie = re ? p(1) : K ? N(1) : 1;
    re && (J = p(J));
    for (
      var te = Me(P),
        oe = [],
        ee = W,
        de = [],
        xe = Y ? u(Array(W).fill(ie)) : void 0,
        ce = Y ? u(Array(ee).fill(ie)) : void 0,
        he = 0;
      he <= 100;

    ) {
      he += 1;
      for (var k = 0, Q = 0; Q < ee; Q++) te[Q][Q] = t(te[Q][Q], k);
      var { Q: V, R: q } = c(te);
      te = i(q, V);
      for (var X = 0; X < ee; X++) te[X][X] = r(te[X][X], k);
      if ((Y && (ce = i(ce, V)), ee === 1 || w(l(te[ee - 1][ee - 2]), J))) {
        (he = 0),
          oe.push(te[ee - 1][ee - 1]),
          Y &&
            (de.unshift([[1]]),
            C(ce, W),
            (xe = i(xe, ce)),
            ee > 1 && (ce = u(Array(ee - 1).fill(ie)))),
          (ee -= 1),
          te.pop();
        for (var z = 0; z < ee; z++) te[z].pop();
      } else if (ee === 2 || w(l(te[ee - 2][ee - 3]), J)) {
        he = 0;
        var U = M(
          te[ee - 2][ee - 2],
          te[ee - 2][ee - 1],
          te[ee - 1][ee - 2],
          te[ee - 1][ee - 1]
        );
        oe.push(...U),
          Y &&
            (de.unshift(
              _(
                te[ee - 2][ee - 2],
                te[ee - 2][ee - 1],
                te[ee - 1][ee - 2],
                te[ee - 1][ee - 1],
                U[0],
                U[1],
                J,
                G
              )
            ),
            C(ce, W),
            (xe = i(xe, ce)),
            ee > 2 && (ce = u(Array(ee - 2).fill(ie)))),
          (ee -= 2),
          te.pop(),
          te.pop();
        for (var j = 0; j < ee; j++) te[j].pop(), te[j].pop();
      }
      if (ee === 0) break;
    }
    if ((oe.sort((ue, ve) => +t(l(ue), l(ve))), he > 100)) {
      var H = Error(
        "The eigenvalues failed to converge. Only found these eigenvalues: " +
          oe.join(", ")
      );
      throw ((H.values = oe), (H.vectors = []), H);
    }
    var ae = Y ? i(xe, I(de, W)) : void 0;
    return { values: oe, C: ae };
  }
  function E(P, W, J, G, Y, re, K) {
    var ie = o(J),
      te = i(ie, P, J),
      oe = K === "BigNumber",
      ee = K === "Complex",
      de = oe ? p(0) : ee ? N(0) : 0,
      xe = oe ? p(1) : ee ? N(1) : 1,
      ce = [],
      he = [];
    for (var k of Y) {
      var Q = L(ce, k, d);
      Q === -1 ? (ce.push(k), he.push(1)) : (he[Q] += 1);
    }
    for (
      var V = [],
        q = ce.length,
        X = Array(W).fill(de),
        z = u(Array(W).fill(xe)),
        U = [],
        j = function (ve) {
          var fe = ce[ve],
            pe = t(te, i(fe, z)),
            we = v(pe, X);
          for (we.shift(); we.length < he[ve]; ) {
            var Ge = $(pe, W, we, re, K);
            if (Ge == null) {
              U.push(fe);
              break;
            }
            we.push(Ge);
          }
          var ir = i(o(G), J);
          (we = we.map((Je) => i(ir, Je))), V.push(...we.map((Je) => n(Je)));
        },
        H = 0;
      H < q;
      H++
    )
      j(H);
    if (U.length !== 0) {
      var ae = new Error(
        "Failed to find eigenvectors for the following eigenvalues: " +
          U.join(", ")
      );
      throw ((ae.values = Y), (ae.vectors = V), ae);
    }
    return V;
  }
  function M(P, W, J, G) {
    var Y = r(P, G),
      re = t(a(P, G), a(W, J)),
      K = a(Y, 0.5),
      ie = a(f(t(a(Y, Y), a(4, re))), 0.5);
    return [r(K, ie), t(K, ie)];
  }
  function _(P, W, J, G, Y, re, K, ie) {
    var te = ie === "BigNumber",
      oe = ie === "Complex",
      ee = te ? p(0) : oe ? N(0) : 0,
      de = te ? p(1) : oe ? N(1) : 1;
    if (w(l(J), K))
      return [
        [de, ee],
        [ee, de],
      ];
    if (g(l(t(Y, re)), K))
      return [
        [t(Y, G), t(re, G)],
        [J, J],
      ];
    var xe = t(P, Y),
      ce = t(W, Y),
      he = t(J, Y),
      k = t(G, Y);
    return w(l(ce), K)
      ? [
          [xe, de],
          [he, ee],
        ]
      : [
          [ce, ee],
          [k, de],
        ];
  }
  function C(P, W) {
    for (var J = 0; J < P.length; J++)
      P[J].push(...Array(W - P[J].length).fill(0));
    for (var G = P.length; G < W; G++) P.push(Array(W).fill(0)), (P[G][G] = 1);
    return P;
  }
  function I(P, W) {
    for (var J = [], G = 0; G < W; G++) J[G] = Array(W).fill(0);
    var Y = 0;
    for (var re of P) {
      for (var K = re.length, ie = 0; ie < K; ie++)
        for (var te = 0; te < K; te++) J[Y + ie][Y + te] = re[ie][te];
      Y += K;
    }
    return J;
  }
  function L(P, W, J) {
    for (var G = 0; G < P.length; G++) if (J(P[G], W)) return G;
    return -1;
  }
  function $(P, W, J, G, Y) {
    for (
      var re = Y === "BigNumber" ? p(1e3) : 1e3, K, ie = 0;
      (K = D(W, J, Y)), (K = m(P, K)), !g(R(K), re);

    )
      if (++ie >= 5) return null;
    for (ie = 0; ; ) {
      var te = m(P, K);
      if (w(R(B(K, [te])), G)) break;
      if (++ie >= 10) return null;
      K = T(te);
    }
    return K;
  }
  function D(P, W, J) {
    var G = J === "BigNumber",
      Y = J === "Complex",
      re = Array(P)
        .fill(0)
        .map((K) => 2 * Math.random() - 1);
    return (
      G && (re = re.map((K) => p(K))),
      Y && (re = re.map((K) => N(K))),
      (re = B(re, W)),
      T(re, J)
    );
  }
  function B(P, W) {
    for (var J of W) P = t(P, i(s(x(J, P), x(J, J)), J));
    return P;
  }
  function R(P) {
    return l(f(x(P, P)));
  }
  function T(P, W) {
    var J = W === "BigNumber",
      G = W === "Complex",
      Y = J ? p(1) : G ? N(1) : 1;
    return i(s(Y, R(P)), P);
  }
  return b;
}
function e$(e) {
  var {
    config: r,
    addScalar: t,
    subtract: n,
    abs: i,
    atan: a,
    cos: s,
    sin: f,
    multiplyScalar: l,
    inv: p,
    bignumber: u,
    multiply: o,
    add: c,
  } = e;
  function m(M, _) {
    var C =
        arguments.length > 2 && arguments[2] !== void 0
          ? arguments[2]
          : r.epsilon,
      I = arguments.length > 3 ? arguments[3] : void 0;
    if (I === "number") return v(M, C);
    if (I === "BigNumber") return d(M, C);
    throw TypeError("Unsupported data type: " + I);
  }
  function v(M, _) {
    for (
      var C = M.length, I = Math.abs(_ / C), L, $ = new Array(C), D = 0;
      D < C;
      D++
    )
      ($[D] = E(C, 0)), ($[D][D] = 1);
    for (var B = y(M); Math.abs(B[1]) >= Math.abs(I); ) {
      var R = B[0][0],
        T = B[0][1];
      (L = N(M[R][R], M[T][T], M[R][T])),
        (M = b(M, L, R, T)),
        ($ = w($, L, R, T)),
        (B = y(M));
    }
    for (var P = E(C, 0), W = 0; W < C; W++) P[W] = M[W][W];
    return S(Me(P), Me($));
  }
  function d(M, _) {
    for (var C = M.length, I = i(_ / C), L, $ = new Array(C), D = 0; D < C; D++)
      ($[D] = E(C, 0)), ($[D][D] = 1);
    for (var B = A(M); i(B[1]) >= i(I); ) {
      var R = B[0][0],
        T = B[0][1];
      (L = g(M[R][R], M[T][T], M[R][T])),
        (M = x(M, L, R, T)),
        ($ = h($, L, R, T)),
        (B = A(M));
    }
    for (var P = E(C, 0), W = 0; W < C; W++) P[W] = M[W][W];
    return S(Me(P), Me($));
  }
  function N(M, _, C) {
    var I = _ - M;
    return Math.abs(I) <= r.epsilon
      ? Math.PI / 4
      : 0.5 * Math.atan((2 * C) / (_ - M));
  }
  function g(M, _, C) {
    var I = n(_, M);
    return i(I) <= r.epsilon ? u(-1).acos().div(4) : l(0.5, a(o(2, C, p(I))));
  }
  function w(M, _, C, I) {
    for (
      var L = M.length,
        $ = Math.cos(_),
        D = Math.sin(_),
        B = E(L, 0),
        R = E(L, 0),
        T = 0;
      T < L;
      T++
    )
      (B[T] = $ * M[T][C] - D * M[T][I]), (R[T] = D * M[T][C] + $ * M[T][I]);
    for (var P = 0; P < L; P++) (M[P][C] = B[P]), (M[P][I] = R[P]);
    return M;
  }
  function h(M, _, C, I) {
    for (
      var L = M.length,
        $ = s(_),
        D = f(_),
        B = E(L, u(0)),
        R = E(L, u(0)),
        T = 0;
      T < L;
      T++
    )
      (B[T] = n(l($, M[T][C]), l(D, M[T][I]))),
        (R[T] = t(l(D, M[T][C]), l($, M[T][I])));
    for (var P = 0; P < L; P++) (M[P][C] = B[P]), (M[P][I] = R[P]);
    return M;
  }
  function x(M, _, C, I) {
    for (
      var L = M.length,
        $ = u(s(_)),
        D = u(f(_)),
        B = l($, $),
        R = l(D, D),
        T = E(L, u(0)),
        P = E(L, u(0)),
        W = o(u(2), $, D, M[C][I]),
        J = t(n(l(B, M[C][C]), W), l(R, M[I][I])),
        G = c(l(R, M[C][C]), W, l(B, M[I][I])),
        Y = 0;
      Y < L;
      Y++
    )
      (T[Y] = n(l($, M[C][Y]), l(D, M[I][Y]))),
        (P[Y] = t(l(D, M[C][Y]), l($, M[I][Y])));
    (M[C][C] = J), (M[I][I] = G), (M[C][I] = u(0)), (M[I][C] = u(0));
    for (var re = 0; re < L; re++)
      re !== C &&
        re !== I &&
        ((M[C][re] = T[re]),
        (M[re][C] = T[re]),
        (M[I][re] = P[re]),
        (M[re][I] = P[re]));
    return M;
  }
  function b(M, _, C, I) {
    for (
      var L = M.length,
        $ = Math.cos(_),
        D = Math.sin(_),
        B = $ * $,
        R = D * D,
        T = E(L, 0),
        P = E(L, 0),
        W = B * M[C][C] - 2 * $ * D * M[C][I] + R * M[I][I],
        J = R * M[C][C] + 2 * $ * D * M[C][I] + B * M[I][I],
        G = 0;
      G < L;
      G++
    )
      (T[G] = $ * M[C][G] - D * M[I][G]), (P[G] = D * M[C][G] + $ * M[I][G]);
    (M[C][C] = W), (M[I][I] = J), (M[C][I] = 0), (M[I][C] = 0);
    for (var Y = 0; Y < L; Y++)
      Y !== C &&
        Y !== I &&
        ((M[C][Y] = T[Y]),
        (M[Y][C] = T[Y]),
        (M[I][Y] = P[Y]),
        (M[Y][I] = P[Y]));
    return M;
  }
  function y(M) {
    for (var _ = M.length, C = 0, I = [0, 1], L = 0; L < _; L++)
      for (var $ = L + 1; $ < _; $++)
        Math.abs(C) < Math.abs(M[L][$]) &&
          ((C = Math.abs(M[L][$])), (I = [L, $]));
    return [I, C];
  }
  function A(M) {
    for (var _ = M.length, C = 0, I = [0, 1], L = 0; L < _; L++)
      for (var $ = L + 1; $ < _; $++)
        i(C) < i(M[L][$]) && ((C = i(M[L][$])), (I = [L, $]));
    return [I, C];
  }
  function S(M, _) {
    for (var C = M.length, I = Array(C), L = Array(C), $ = 0; $ < C; $++)
      L[$] = Array(C);
    for (var D = 0; D < C; D++) {
      for (var B = 0, R = M[0], T = 0; T < M.length; T++)
        i(M[T]) < i(R) && ((B = T), (R = M[B]));
      I[D] = M.splice(B, 1)[0];
      for (var P = 0; P < C; P++) (L[P][D] = _[P][B]), _[P].splice(B, 1);
    }
    return { values: I, vectors: L };
  }
  function E(M, _) {
    for (var C = new Array(M), I = 0; I < M; I++) C[I] = _;
    return C;
  }
  return m;
}
var r$ = "eigs",
  t$ = [
    "config",
    "typed",
    "matrix",
    "addScalar",
    "equal",
    "subtract",
    "abs",
    "atan",
    "cos",
    "sin",
    "multiplyScalar",
    "divideScalar",
    "inv",
    "bignumber",
    "multiply",
    "add",
    "larger",
    "column",
    "flatten",
    "number",
    "complex",
    "sqrt",
    "diag",
    "qr",
    "usolve",
    "usolveAll",
    "im",
    "re",
    "smaller",
    "matrixFromColumns",
    "dot",
  ],
  n$ = F(r$, t$, (e) => {
    var {
        config: r,
        typed: t,
        matrix: n,
        addScalar: i,
        subtract: a,
        equal: s,
        abs: f,
        atan: l,
        cos: p,
        sin: u,
        multiplyScalar: o,
        divideScalar: c,
        inv: m,
        bignumber: v,
        multiply: d,
        add: N,
        larger: g,
        column: w,
        flatten: h,
        number: x,
        complex: b,
        sqrt: y,
        diag: A,
        qr: S,
        usolve: E,
        usolveAll: M,
        im: _,
        re: C,
        smaller: I,
        matrixFromColumns: L,
        dot: $,
      } = e,
      D = e$({
        config: r,
        addScalar: i,
        subtract: a,
        column: w,
        flatten: h,
        equal: s,
        abs: f,
        atan: l,
        cos: p,
        sin: u,
        multiplyScalar: o,
        inv: m,
        bignumber: v,
        complex: b,
        multiply: d,
        add: N,
      }),
      B = KI({
        config: r,
        addScalar: i,
        subtract: a,
        multiply: d,
        multiplyScalar: o,
        flatten: h,
        divideScalar: c,
        sqrt: y,
        abs: f,
        bignumber: v,
        diag: A,
        qr: S,
        inv: m,
        usolve: E,
        usolveAll: M,
        equal: s,
        complex: b,
        larger: g,
        smaller: I,
        matrixFromColumns: L,
        dot: $,
      });
    return t("eigs", {
      Array: function (Y) {
        var re = n(Y);
        return R(re);
      },
      "Array, number|BigNumber": function (Y, re) {
        var K = n(Y);
        return R(K, re);
      },
      Matrix: function (Y) {
        var { values: re, vectors: K } = R(Y);
        return { values: n(re), vectors: n(K) };
      },
      "Matrix, number|BigNumber": function (Y, re) {
        var { values: K, vectors: ie } = R(Y, re);
        return { values: n(K), vectors: n(ie) };
      },
    });
    function R(G, Y) {
      Y === void 0 && (Y = r.epsilon);
      var re = G.size();
      if (re.length !== 2 || re[0] !== re[1])
        throw new RangeError("Matrix must be square (size: " + _e(re) + ")");
      var K = G.toArray(),
        ie = re[0];
      if (P(K, ie, Y) && (W(K, ie), T(K, ie, Y))) {
        var te = J(G, K, ie);
        return D(K, ie, Y, te);
      }
      var oe = J(G, K, ie);
      return B(K, ie, Y, oe);
    }
    function T(G, Y, re) {
      for (var K = 0; K < Y; K++)
        for (var ie = K; ie < Y; ie++)
          if (g(v(f(a(G[K][ie], G[ie][K]))), re)) return !1;
      return !0;
    }
    function P(G, Y, re) {
      for (var K = 0; K < Y; K++)
        for (var ie = 0; ie < Y; ie++) if (g(v(f(_(G[K][ie]))), re)) return !1;
      return !0;
    }
    function W(G, Y) {
      for (var re = 0; re < Y; re++)
        for (var K = 0; K < Y; K++) G[re][K] = C(G[re][K]);
    }
    function J(G, Y, re) {
      var K = G.datatype();
      if (K === "number" || K === "BigNumber" || K === "Complex") return K;
      for (var ie = !1, te = !1, oe = !1, ee = 0; ee < re; ee++)
        for (var de = 0; de < re; de++) {
          var xe = Y[ee][de];
          if ($e(xe) || Bn(xe)) ie = !0;
          else if (Be(xe)) te = !0;
          else if (Nt(xe)) oe = !0;
          else throw TypeError("Unsupported type in Matrix: " + Ye(xe));
        }
      if (
        (te &&
          oe &&
          console.warn(
            "Complex BigNumbers not supported, this operation will lose precission."
          ),
        oe)
      ) {
        for (var ce = 0; ce < re; ce++)
          for (var he = 0; he < re; he++) Y[ce][he] = b(Y[ce][he]);
        return "Complex";
      }
      if (te) {
        for (var k = 0; k < re; k++)
          for (var Q = 0; Q < re; Q++) Y[k][Q] = v(Y[k][Q]);
        return "BigNumber";
      }
      if (ie) {
        for (var V = 0; V < re; V++)
          for (var q = 0; q < re; q++) Y[V][q] = x(Y[V][q]);
        return "number";
      } else throw TypeError("Matrix contains unsupported types only.");
    }
  }),
  Hd = "expm",
  i$ = ["typed", "abs", "add", "identity", "inv", "multiply"],
  a$ = F(Hd, i$, (e) => {
    var { typed: r, abs: t, add: n, identity: i, inv: a, multiply: s } = e;
    return r(Hd, {
      Matrix: function (o) {
        var c = o.size();
        if (c.length !== 2 || c[0] !== c[1])
          throw new RangeError("Matrix must be square (size: " + _e(c) + ")");
        for (
          var m = c[0],
            v = 1e-15,
            d = f(o),
            N = l(d, v),
            g = N.q,
            w = N.j,
            h = s(o, Math.pow(2, -w)),
            x = i(m),
            b = i(m),
            y = 1,
            A = h,
            S = -1,
            E = 1;
          E <= g;
          E++
        )
          E > 1 && ((A = s(A, h)), (S = -S)),
            (y = (y * (g - E + 1)) / ((2 * g - E + 1) * E)),
            (x = n(x, s(y, A))),
            (b = n(b, s(y * S, A)));
        for (var M = s(a(b), x), _ = 0; _ < w; _++) M = s(M, M);
        return fn(o) ? o.createSparseMatrix(M) : M;
      },
    });
    function f(u) {
      for (var o = u.size()[0], c = 0, m = 0; m < o; m++) {
        for (var v = 0, d = 0; d < o; d++) v += t(u.get([m, d]));
        c = Math.max(v, c);
      }
      return c;
    }
    function l(u, o) {
      for (var c = 30, m = 0; m < c; m++)
        for (var v = 0; v <= m; v++) {
          var d = m - v;
          if (p(u, v, d) < o) return { q: v, j: d };
        }
      throw new Error(
        "Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)"
      );
    }
    function p(u, o, c) {
      for (var m = 1, v = 2; v <= o; v++) m *= v;
      for (var d = m, N = o + 1; N <= 2 * o; N++) d *= N;
      var g = d * (2 * o + 1);
      return (8 * Math.pow(u / Math.pow(2, c), 2 * o) * m * m) / (d * g);
    }
  }),
  Vd = "sqrtm",
  o$ = [
    "typed",
    "abs",
    "add",
    "multiply",
    "sqrt",
    "subtract",
    "inv",
    "size",
    "max",
    "identity",
  ],
  s$ = F(Vd, o$, (e) => {
    var {
        typed: r,
        abs: t,
        add: n,
        multiply: i,
        sqrt: a,
        subtract: s,
        inv: f,
        size: l,
        max: p,
        identity: u,
      } = e,
      o = 1e3,
      c = 1e-6;
    function m(v) {
      var d,
        N = 0,
        g = v,
        w = u(l(v));
      do {
        var h = g;
        if (
          ((g = i(0.5, n(h, f(w)))),
          (w = i(0.5, n(w, f(h)))),
          (d = p(t(s(g, h)))),
          d > c && ++N > o)
        )
          throw new Error(
            "computing square root of matrix: iterative method could not converge"
          );
      } while (d > c);
      return g;
    }
    return r(Vd, {
      "Array | Matrix": function (d) {
        var N = Ae(d) ? d.size() : Ie(d);
        switch (N.length) {
          case 1:
            if (N[0] === 1) return a(d);
            throw new RangeError("Matrix must be square (size: " + _e(N) + ")");
          case 2: {
            var g = N[0],
              w = N[1];
            if (g === w) return m(d);
            throw new RangeError("Matrix must be square (size: " + _e(N) + ")");
          }
          default:
            throw new RangeError(
              "Matrix must be at most two dimensional (size: " + _e(N) + ")"
            );
        }
      },
    });
  }),
  u$ = "divide",
  l$ = ["typed", "matrix", "multiply", "equalScalar", "divideScalar", "inv"],
  c$ = F(u$, l$, (e) => {
    var {
        typed: r,
        matrix: t,
        multiply: n,
        equalScalar: i,
        divideScalar: a,
        inv: s,
      } = e,
      f = Sr({ typed: r, equalScalar: i }),
      l = ke({ typed: r });
    return r(
      "divide",
      Pc(
        {
          "Array | Matrix, Array | Matrix": function (u, o) {
            return n(u, s(o));
          },
          "DenseMatrix, any": function (u, o) {
            return l(u, o, a, !1);
          },
          "SparseMatrix, any": function (u, o) {
            return f(u, o, a, !1);
          },
          "Array, any": function (u, o) {
            return l(t(u), o, a, !1).valueOf();
          },
          "any, Array | Matrix": function (u, o) {
            return n(u, s(o));
          },
        },
        a.signatures
      )
    );
  }),
  Gd = "distance",
  f$ = [
    "typed",
    "addScalar",
    "subtract",
    "divideScalar",
    "multiplyScalar",
    "unaryMinus",
    "sqrt",
    "abs",
  ],
  p$ = F(Gd, f$, (e) => {
    var {
      typed: r,
      addScalar: t,
      subtract: n,
      multiplyScalar: i,
      divideScalar: a,
      unaryMinus: s,
      sqrt: f,
      abs: l,
    } = e;
    return r(Gd, {
      "Array, Array, Array": function (b, y, A) {
        if (b.length === 2 && y.length === 2 && A.length === 2) {
          if (!u(b))
            throw new TypeError(
              "Array with 2 numbers or BigNumbers expected for first argument"
            );
          if (!u(y))
            throw new TypeError(
              "Array with 2 numbers or BigNumbers expected for second argument"
            );
          if (!u(A))
            throw new TypeError(
              "Array with 2 numbers or BigNumbers expected for third argument"
            );
          var S = a(n(A[1], A[0]), n(y[1], y[0])),
            E = i(i(S, S), y[0]),
            M = s(i(S, y[0])),
            _ = b[1];
          return N(b[0], b[1], E, M, _);
        } else throw new TypeError("Invalid Arguments: Try again");
      },
      "Object, Object, Object": function (b, y, A) {
        if (
          Object.keys(b).length === 2 &&
          Object.keys(y).length === 2 &&
          Object.keys(A).length === 2
        ) {
          if (!u(b))
            throw new TypeError(
              "Values of pointX and pointY should be numbers or BigNumbers"
            );
          if (!u(y))
            throw new TypeError(
              "Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers"
            );
          if (!u(A))
            throw new TypeError(
              "Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers"
            );
          if (
            "pointX" in b &&
            "pointY" in b &&
            "lineOnePtX" in y &&
            "lineOnePtY" in y &&
            "lineTwoPtX" in A &&
            "lineTwoPtY" in A
          ) {
            var S = a(
                n(A.lineTwoPtY, A.lineTwoPtX),
                n(y.lineOnePtY, y.lineOnePtX)
              ),
              E = i(i(S, S), y.lineOnePtX),
              M = s(i(S, y.lineOnePtX)),
              _ = b.pointX;
            return N(b.pointX, b.pointY, E, M, _);
          } else throw new TypeError("Key names do not match");
        } else throw new TypeError("Invalid Arguments: Try again");
      },
      "Array, Array": function (b, y) {
        if (b.length === 2 && y.length === 3) {
          if (!u(b))
            throw new TypeError(
              "Array with 2 numbers or BigNumbers expected for first argument"
            );
          if (!o(y))
            throw new TypeError(
              "Array with 3 numbers or BigNumbers expected for second argument"
            );
          return N(b[0], b[1], y[0], y[1], y[2]);
        } else if (b.length === 3 && y.length === 6) {
          if (!o(b))
            throw new TypeError(
              "Array with 3 numbers or BigNumbers expected for first argument"
            );
          if (!m(y))
            throw new TypeError(
              "Array with 6 numbers or BigNumbers expected for second argument"
            );
          return g(b[0], b[1], b[2], y[0], y[1], y[2], y[3], y[4], y[5]);
        } else if (b.length === y.length && b.length > 0) {
          if (!c(b))
            throw new TypeError(
              "All values of an array should be numbers or BigNumbers"
            );
          if (!c(y))
            throw new TypeError(
              "All values of an array should be numbers or BigNumbers"
            );
          return w(b, y);
        } else throw new TypeError("Invalid Arguments: Try again");
      },
      "Object, Object": function (b, y) {
        if (Object.keys(b).length === 2 && Object.keys(y).length === 3) {
          if (!u(b))
            throw new TypeError(
              "Values of pointX and pointY should be numbers or BigNumbers"
            );
          if (!o(y))
            throw new TypeError(
              "Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers"
            );
          if (
            "pointX" in b &&
            "pointY" in b &&
            "xCoeffLine" in y &&
            "yCoeffLine" in y &&
            "constant" in y
          )
            return N(
              b.pointX,
              b.pointY,
              y.xCoeffLine,
              y.yCoeffLine,
              y.constant
            );
          throw new TypeError("Key names do not match");
        } else if (Object.keys(b).length === 3 && Object.keys(y).length === 6) {
          if (!o(b))
            throw new TypeError(
              "Values of pointX, pointY and pointZ should be numbers or BigNumbers"
            );
          if (!m(y))
            throw new TypeError(
              "Values of x0, y0, z0, a, b and c should be numbers or BigNumbers"
            );
          if (
            "pointX" in b &&
            "pointY" in b &&
            "x0" in y &&
            "y0" in y &&
            "z0" in y &&
            "a" in y &&
            "b" in y &&
            "c" in y
          )
            return g(
              b.pointX,
              b.pointY,
              b.pointZ,
              y.x0,
              y.y0,
              y.z0,
              y.a,
              y.b,
              y.c
            );
          throw new TypeError("Key names do not match");
        } else if (Object.keys(b).length === 2 && Object.keys(y).length === 2) {
          if (!u(b))
            throw new TypeError(
              "Values of pointOneX and pointOneY should be numbers or BigNumbers"
            );
          if (!u(y))
            throw new TypeError(
              "Values of pointTwoX and pointTwoY should be numbers or BigNumbers"
            );
          if (
            "pointOneX" in b &&
            "pointOneY" in b &&
            "pointTwoX" in y &&
            "pointTwoY" in y
          )
            return w([b.pointOneX, b.pointOneY], [y.pointTwoX, y.pointTwoY]);
          throw new TypeError("Key names do not match");
        } else if (Object.keys(b).length === 3 && Object.keys(y).length === 3) {
          if (!o(b))
            throw new TypeError(
              "Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers"
            );
          if (!o(y))
            throw new TypeError(
              "Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers"
            );
          if (
            "pointOneX" in b &&
            "pointOneY" in b &&
            "pointOneZ" in b &&
            "pointTwoX" in y &&
            "pointTwoY" in y &&
            "pointTwoZ" in y
          )
            return w(
              [b.pointOneX, b.pointOneY, b.pointOneZ],
              [y.pointTwoX, y.pointTwoY, y.pointTwoZ]
            );
          throw new TypeError("Key names do not match");
        } else throw new TypeError("Invalid Arguments: Try again");
      },
      Array: function (b) {
        if (!d(b))
          throw new TypeError(
            "Incorrect array format entered for pairwise distance calculation"
          );
        return h(b);
      },
    });
    function p(x) {
      return typeof x == "number" || Be(x);
    }
    function u(x) {
      return x.constructor !== Array && (x = v(x)), p(x[0]) && p(x[1]);
    }
    function o(x) {
      return (
        x.constructor !== Array && (x = v(x)), p(x[0]) && p(x[1]) && p(x[2])
      );
    }
    function c(x) {
      return Array.isArray(x) || (x = v(x)), x.every(p);
    }
    function m(x) {
      return (
        x.constructor !== Array && (x = v(x)),
        p(x[0]) && p(x[1]) && p(x[2]) && p(x[3]) && p(x[4]) && p(x[5])
      );
    }
    function v(x) {
      for (var b = Object.keys(x), y = [], A = 0; A < b.length; A++)
        y.push(x[b[A]]);
      return y;
    }
    function d(x) {
      if (x[0].length === 2 && p(x[0][0]) && p(x[0][1])) {
        if (x.some((b) => b.length !== 2 || !p(b[0]) || !p(b[1]))) return !1;
      } else if (x[0].length === 3 && p(x[0][0]) && p(x[0][1]) && p(x[0][2])) {
        if (x.some((b) => b.length !== 3 || !p(b[0]) || !p(b[1]) || !p(b[2])))
          return !1;
      } else return !1;
      return !0;
    }
    function N(x, b, y, A, S) {
      var E = l(t(t(i(y, x), i(A, b)), S)),
        M = f(t(i(y, y), i(A, A)));
      return a(E, M);
    }
    function g(x, b, y, A, S, E, M, _, C) {
      var I = [
        n(i(n(S, b), C), i(n(E, y), _)),
        n(i(n(E, y), M), i(n(A, x), C)),
        n(i(n(A, x), _), i(n(S, b), M)),
      ];
      I = f(t(t(i(I[0], I[0]), i(I[1], I[1])), i(I[2], I[2])));
      var L = f(t(t(i(M, M), i(_, _)), i(C, C)));
      return a(I, L);
    }
    function w(x, b) {
      for (var y = x.length, A = 0, S = 0, E = 0; E < y; E++)
        (S = n(x[E], b[E])), (A = t(i(S, S), A));
      return f(A);
    }
    function h(x) {
      for (var b = [], y = [], A = [], S = 0; S < x.length - 1; S++)
        for (var E = S + 1; E < x.length; E++)
          x[0].length === 2
            ? ((y = [x[S][0], x[S][1]]), (A = [x[E][0], x[E][1]]))
            : x[0].length === 3 &&
              ((y = [x[S][0], x[S][1], x[S][2]]),
              (A = [x[E][0], x[E][1], x[E][2]])),
            b.push(w(y, A));
      return b;
    }
  }),
  m$ = "intersect",
  v$ = [
    "typed",
    "config",
    "abs",
    "add",
    "addScalar",
    "matrix",
    "multiply",
    "multiplyScalar",
    "divideScalar",
    "subtract",
    "smaller",
    "equalScalar",
    "flatten",
    "isZero",
    "isNumeric",
  ],
  d$ = F(m$, v$, (e) => {
    var {
      typed: r,
      config: t,
      abs: n,
      add: i,
      addScalar: a,
      matrix: s,
      multiply: f,
      multiplyScalar: l,
      divideScalar: p,
      subtract: u,
      smaller: o,
      equalScalar: c,
      flatten: m,
      isZero: v,
      isNumeric: d,
    } = e;
    return r("intersect", {
      "Array, Array, Array": N,
      "Array, Array, Array, Array": g,
      "Matrix, Matrix, Matrix": function (_, C, I) {
        var L = N(_.valueOf(), C.valueOf(), I.valueOf());
        return L === null ? null : s(L);
      },
      "Matrix, Matrix, Matrix, Matrix": function (_, C, I, L) {
        var $ = g(_.valueOf(), C.valueOf(), I.valueOf(), L.valueOf());
        return $ === null ? null : s($);
      },
    });
    function N(M, _, C) {
      if (((M = w(M)), (_ = w(_)), (C = w(C)), !x(M)))
        throw new TypeError(
          "Array with 3 numbers or BigNumbers expected for first argument"
        );
      if (!x(_))
        throw new TypeError(
          "Array with 3 numbers or BigNumbers expected for second argument"
        );
      if (!b(C))
        throw new TypeError("Array with 4 numbers expected as third argument");
      return E(M[0], M[1], M[2], _[0], _[1], _[2], C[0], C[1], C[2], C[3]);
    }
    function g(M, _, C, I) {
      if (((M = w(M)), (_ = w(_)), (C = w(C)), (I = w(I)), M.length === 2)) {
        if (!h(M))
          throw new TypeError(
            "Array with 2 numbers or BigNumbers expected for first argument"
          );
        if (!h(_))
          throw new TypeError(
            "Array with 2 numbers or BigNumbers expected for second argument"
          );
        if (!h(C))
          throw new TypeError(
            "Array with 2 numbers or BigNumbers expected for third argument"
          );
        if (!h(I))
          throw new TypeError(
            "Array with 2 numbers or BigNumbers expected for fourth argument"
          );
        return y(M, _, C, I);
      } else if (M.length === 3) {
        if (!x(M))
          throw new TypeError(
            "Array with 3 numbers or BigNumbers expected for first argument"
          );
        if (!x(_))
          throw new TypeError(
            "Array with 3 numbers or BigNumbers expected for second argument"
          );
        if (!x(C))
          throw new TypeError(
            "Array with 3 numbers or BigNumbers expected for third argument"
          );
        if (!x(I))
          throw new TypeError(
            "Array with 3 numbers or BigNumbers expected for fourth argument"
          );
        return S(
          M[0],
          M[1],
          M[2],
          _[0],
          _[1],
          _[2],
          C[0],
          C[1],
          C[2],
          I[0],
          I[1],
          I[2]
        );
      } else
        throw new TypeError(
          "Arrays with two or thee dimensional points expected"
        );
    }
    function w(M) {
      return M.length === 1
        ? M[0]
        : M.length > 1 &&
          Array.isArray(M[0]) &&
          M.every((_) => Array.isArray(_) && _.length === 1)
        ? m(M)
        : M;
    }
    function h(M) {
      return M.length === 2 && d(M[0]) && d(M[1]);
    }
    function x(M) {
      return M.length === 3 && d(M[0]) && d(M[1]) && d(M[2]);
    }
    function b(M) {
      return M.length === 4 && d(M[0]) && d(M[1]) && d(M[2]) && d(M[3]);
    }
    function y(M, _, C, I) {
      var L = M,
        $ = C,
        D = u(L, _),
        B = u($, I),
        R = u(l(D[0], B[1]), l(B[0], D[1]));
      if (v(R) || o(n(R), t.epsilon)) return null;
      var T = l(B[0], L[1]),
        P = l(B[1], L[0]),
        W = l(B[0], $[1]),
        J = l(B[1], $[0]),
        G = p(a(u(u(T, P), W), J), R);
      return i(f(D, G), L);
    }
    function A(M, _, C, I, L, $, D, B, R, T, P, W) {
      var J = l(u(M, _), u(C, I)),
        G = l(u(L, $), u(D, B)),
        Y = l(u(R, T), u(P, W));
      return a(a(J, G), Y);
    }
    function S(M, _, C, I, L, $, D, B, R, T, P, W) {
      var J = A(M, D, T, D, _, B, P, B, C, R, W, R),
        G = A(T, D, I, M, P, B, L, _, W, R, $, C),
        Y = A(M, D, I, M, _, B, L, _, C, R, $, C),
        re = A(T, D, T, D, P, B, P, B, W, R, W, R),
        K = A(I, M, I, M, L, _, L, _, $, C, $, C),
        ie = u(l(J, G), l(Y, re)),
        te = u(l(K, re), l(G, G));
      if (v(te)) return null;
      var oe = p(ie, te),
        ee = p(a(J, l(oe, G)), re),
        de = a(M, l(oe, u(I, M))),
        xe = a(_, l(oe, u(L, _))),
        ce = a(C, l(oe, u($, C))),
        he = a(D, l(ee, u(T, D))),
        k = a(B, l(ee, u(P, B))),
        Q = a(R, l(ee, u(W, R)));
      return c(de, he) && c(xe, k) && c(ce, Q) ? [de, xe, ce] : null;
    }
    function E(M, _, C, I, L, $, D, B, R, T) {
      var P = l(M, D),
        W = l(I, D),
        J = l(_, B),
        G = l(L, B),
        Y = l(C, R),
        re = l($, R),
        K = u(u(u(T, P), J), Y),
        ie = u(u(u(a(a(W, G), re), P), J), Y),
        te = p(K, ie),
        oe = a(M, l(te, u(I, M))),
        ee = a(_, l(te, u(L, _))),
        de = a(C, l(te, u($, C)));
      return [oe, ee, de];
    }
  }),
  Wd = "sum",
  h$ = ["typed", "config", "add", "numeric"],
  L1 = F(Wd, h$, (e) => {
    var { typed: r, config: t, add: n, numeric: i } = e;
    return r(Wd, {
      "Array | Matrix": a,
      "Array | Matrix, number | BigNumber": s,
      "...": function (l) {
        if (Xi(l))
          throw new TypeError("Scalar values expected in function sum");
        return a(l);
      },
    });
    function a(f) {
      var l;
      return (
        Jt(f, function (p) {
          try {
            l = l === void 0 ? p : n(l, p);
          } catch (u) {
            throw Rr(u, "sum", p);
          }
        }),
        l === void 0 && (l = i(0, t.number)),
        typeof l == "string" && (l = i(l, t.number)),
        l
      );
    }
    function s(f, l) {
      try {
        var p = Ws(f, l, n);
        return p;
      } catch (u) {
        throw Rr(u, "sum");
      }
    }
  }),
  Ao = "cumsum",
  g$ = ["typed", "add", "unaryPlus"],
  k1 = F(Ao, g$, (e) => {
    var { typed: r, add: t, unaryPlus: n } = e;
    return r(Ao, {
      Array: i,
      Matrix: function (p) {
        return p.create(i(p.valueOf()));
      },
      "Array, number | BigNumber": s,
      "Matrix, number | BigNumber": function (p, u) {
        return p.create(s(p.valueOf(), u));
      },
      "...": function (p) {
        if (Xi(p))
          throw new TypeError(
            "All values expected to be scalar in function cumsum"
          );
        return i(p);
      },
    });
    function i(l) {
      try {
        return a(l);
      } catch (p) {
        throw Rr(p, Ao);
      }
    }
    function a(l) {
      if (l.length === 0) return [];
      for (var p = [n(l[0])], u = 1; u < l.length; ++u)
        p.push(t(p[u - 1], l[u]));
      return p;
    }
    function s(l, p) {
      var u = Ie(l);
      if (p < 0 || p >= u.length) throw new vt(p, u.length);
      try {
        return f(l, p);
      } catch (o) {
        throw Rr(o, Ao);
      }
    }
    function f(l, p) {
      var u, o, c;
      if (p <= 0) {
        var m = l[0][0];
        if (Array.isArray(m)) {
          for (c = M0(l), o = [], u = 0; u < c.length; u++)
            o[u] = f(c[u], p - 1);
          return o;
        } else return a(l);
      } else {
        for (o = [], u = 0; u < l.length; u++) o[u] = f(l[u], p - 1);
        return o;
      }
    }
  }),
  Zd = "mean",
  y$ = ["typed", "add", "divide"],
  U1 = F(Zd, y$, (e) => {
    var { typed: r, add: t, divide: n } = e;
    return r(Zd, {
      "Array | Matrix": a,
      "Array | Matrix, number | BigNumber": i,
      "...": function (f) {
        if (Xi(f))
          throw new TypeError("Scalar values expected in function mean");
        return a(f);
      },
    });
    function i(s, f) {
      try {
        var l = Ws(s, f, t),
          p = Array.isArray(s) ? Ie(s) : s.size();
        return n(l, p[f]);
      } catch (u) {
        throw Rr(u, "mean");
      }
    }
    function a(s) {
      var f,
        l = 0;
      if (
        (Jt(s, function (p) {
          try {
            (f = f === void 0 ? p : t(f, p)), l++;
          } catch (u) {
            throw Rr(u, "mean", p);
          }
        }),
        l === 0)
      )
        throw new Error("Cannot calculate the mean of an empty array");
      return n(f, l);
    }
  }),
  Qd = "median",
  x$ = ["typed", "add", "divide", "compare", "partitionSelect"],
  w$ = F(Qd, x$, (e) => {
    var { typed: r, add: t, divide: n, compare: i, partitionSelect: a } = e;
    function s(p) {
      try {
        p = Re(p.valueOf());
        var u = p.length;
        if (u === 0)
          throw new Error("Cannot calculate median of an empty array");
        if (u % 2 === 0) {
          for (var o = u / 2 - 1, c = a(p, o + 1), m = p[o], v = 0; v < o; ++v)
            i(p[v], m) > 0 && (m = p[v]);
          return l(m, c);
        } else {
          var d = a(p, (u - 1) / 2);
          return f(d);
        }
      } catch (N) {
        throw Rr(N, "median");
      }
    }
    var f = r({
        "number | BigNumber | Complex | Unit": function (u) {
          return u;
        },
      }),
      l = r({
        "number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit":
          function (u, o) {
            return n(t(u, o), 2);
          },
      });
    return r(Qd, {
      "Array | Matrix": s,
      "Array | Matrix, number | BigNumber": function (u, o) {
        throw new Error("median(A, dim) is not yet supported");
      },
      "...": function (u) {
        if (Xi(u))
          throw new TypeError("Scalar values expected in function median");
        return s(u);
      },
    });
  }),
  Yd = "mad",
  b$ = ["typed", "abs", "map", "median", "subtract"],
  N$ = F(Yd, b$, (e) => {
    var { typed: r, abs: t, map: n, median: i, subtract: a } = e;
    return r(Yd, {
      "Array | Matrix": s,
      "...": function (l) {
        return s(l);
      },
    });
    function s(f) {
      if (((f = Re(f.valueOf())), f.length === 0))
        throw new Error(
          "Cannot calculate median absolute deviation (mad) of an empty array"
        );
      try {
        var l = i(f);
        return i(
          n(f, function (p) {
            return t(a(p, l));
          })
        );
      } catch (p) {
        throw p instanceof TypeError && p.message.indexOf("median") !== -1
          ? new TypeError(p.message.replace("median", "mad"))
          : Rr(p, "mad");
      }
    }
  }),
  Iu = "unbiased",
  Xd = "variance",
  M$ = ["typed", "add", "subtract", "multiply", "divide", "apply", "isNaN"],
  q1 = F(Xd, M$, (e) => {
    var {
      typed: r,
      add: t,
      subtract: n,
      multiply: i,
      divide: a,
      apply: s,
      isNaN: f,
    } = e;
    return r(Xd, {
      "Array | Matrix": function (o) {
        return l(o, Iu);
      },
      "Array | Matrix, string": l,
      "Array | Matrix, number | BigNumber": function (o, c) {
        return p(o, c, Iu);
      },
      "Array | Matrix, number | BigNumber, string": p,
      "...": function (o) {
        return l(o, Iu);
      },
    });
    function l(u, o) {
      var c,
        m = 0;
      if (u.length === 0)
        throw new SyntaxError(
          "Function variance requires one or more parameters (0 provided)"
        );
      if (
        (Jt(u, function (N) {
          try {
            (c = c === void 0 ? N : t(c, N)), m++;
          } catch (g) {
            throw Rr(g, "variance", N);
          }
        }),
        m === 0)
      )
        throw new Error("Cannot calculate variance of an empty array");
      var v = a(c, m);
      if (
        ((c = void 0),
        Jt(u, function (N) {
          var g = n(N, v);
          c = c === void 0 ? i(g, g) : t(c, i(g, g));
        }),
        f(c))
      )
        return c;
      switch (o) {
        case "uncorrected":
          return a(c, m);
        case "biased":
          return a(c, m + 1);
        case "unbiased": {
          var d = Be(c) ? c.mul(0) : 0;
          return m === 1 ? d : a(c, m - 1);
        }
        default:
          throw new Error(
            'Unknown normalization "' +
              o +
              '". Choose "unbiased" (default), "uncorrected", or "biased".'
          );
      }
    }
    function p(u, o, c) {
      try {
        if (u.length === 0)
          throw new SyntaxError(
            "Function variance requires one or more parameters (0 provided)"
          );
        return s(u, o, (m) => l(m, c));
      } catch (m) {
        throw Rr(m, "variance");
      }
    }
  }),
  S$ = "quantileSeq",
  A$ = ["typed", "add", "multiply", "partitionSelect", "compare"],
  E$ = F(S$, A$, (e) => {
    var { typed: r, add: t, multiply: n, partitionSelect: i, compare: a } = e;
    function s(p, u, o) {
      var c, m, v;
      if (arguments.length < 2 || arguments.length > 3)
        throw new SyntaxError(
          "Function quantileSeq requires two or three parameters"
        );
      if (Jn(p)) {
        if (((o = o || !1), typeof o == "boolean")) {
          if (((m = p.valueOf()), $e(u))) {
            if (u < 0) throw new Error("N/prob must be non-negative");
            if (u <= 1) return f(m, u, o);
            if (u > 1) {
              if (!Ne(u)) throw new Error("N must be a positive integer");
              var d = u + 1;
              c = new Array(u);
              for (var N = 0; N < u; ) c[N] = f(m, ++N / d, o);
              return c;
            }
          }
          if (Be(u)) {
            var g = u.constructor;
            if (u.isNegative()) throw new Error("N/prob must be non-negative");
            if (((v = new g(1)), u.lte(v))) return new g(f(m, u, o));
            if (u.gt(v)) {
              if (!u.isInteger())
                throw new Error("N must be a positive integer");
              var w = u.toNumber();
              if (w > 4294967295)
                throw new Error(
                  "N must be less than or equal to 2^32-1, as that is the maximum length of an Array"
                );
              var h = new g(w + 1);
              c = new Array(w);
              for (var x = 0; x < w; ) c[x] = new g(f(m, new g(++x).div(h), o));
              return c;
            }
          }
          if (Array.isArray(u)) {
            c = new Array(u.length);
            for (var b = 0; b < c.length; ++b) {
              var y = u[b];
              if ($e(y)) {
                if (y < 0 || y > 1)
                  throw new Error(
                    "Probability must be between 0 and 1, inclusive"
                  );
              } else if (Be(y)) {
                if (((v = new y.constructor(1)), y.isNegative() || y.gt(v)))
                  throw new Error(
                    "Probability must be between 0 and 1, inclusive"
                  );
              } else
                throw new TypeError(
                  "Unexpected type of argument in function quantileSeq"
                );
              c[b] = f(m, y, o);
            }
            return c;
          }
          throw new TypeError(
            "Unexpected type of argument in function quantileSeq"
          );
        }
        throw new TypeError(
          "Unexpected type of argument in function quantileSeq"
        );
      }
      throw new TypeError(
        "Unexpected type of argument in function quantileSeq"
      );
    }
    function f(p, u, o) {
      var c = Re(p),
        m = c.length;
      if (m === 0)
        throw new Error("Cannot calculate quantile of an empty sequence");
      if ($e(u)) {
        var v = u * (m - 1),
          d = v % 1;
        if (d === 0) {
          var N = o ? c[v] : i(c, v);
          return l(N), N;
        }
        var g = Math.floor(v),
          w,
          h;
        if (o) (w = c[g]), (h = c[g + 1]);
        else {
          (h = i(c, g + 1)), (w = c[g]);
          for (var x = 0; x < g; ++x) a(c[x], w) > 0 && (w = c[x]);
        }
        return l(w), l(h), t(n(w, 1 - d), n(h, d));
      }
      var b = u.times(m - 1);
      if (b.isInteger()) {
        b = b.toNumber();
        var y = o ? c[b] : i(c, b);
        return l(y), y;
      }
      var A = b.floor(),
        S = b.minus(A),
        E = A.toNumber(),
        M,
        _;
      if (o) (M = c[E]), (_ = c[E + 1]);
      else {
        (_ = i(c, E + 1)), (M = c[E]);
        for (var C = 0; C < E; ++C) a(c[C], M) > 0 && (M = c[C]);
      }
      l(M), l(_);
      var I = new S.constructor(1);
      return t(n(M, I.minus(S)), n(_, S));
    }
    var l = r({
      "number | BigNumber | Unit": function (u) {
        return u;
      },
    });
    return s;
  }),
  jd = "std",
  C$ = ["typed", "sqrt", "variance"],
  H1 = F(jd, C$, (e) => {
    var { typed: r, sqrt: t, variance: n } = e;
    return r(jd, {
      "Array | Matrix": i,
      "Array | Matrix, string": i,
      "Array | Matrix, number | BigNumber": i,
      "Array | Matrix, number | BigNumber, string": i,
      "...": function (s) {
        return i(s);
      },
    });
    function i(a, s) {
      if (a.length === 0)
        throw new SyntaxError(
          "Function std requires one or more parameters (0 provided)"
        );
      try {
        return t(n.apply(null, arguments));
      } catch (f) {
        throw f instanceof TypeError && f.message.indexOf(" variance") !== -1
          ? new TypeError(f.message.replace(" variance", " std"))
          : f;
      }
    }
  }),
  Jd = "combinations",
  O$ = ["typed"],
  T$ = F(Jd, O$, (e) => {
    var { typed: r } = e;
    return r(Jd, {
      "number, number": Z0,
      "BigNumber, BigNumber": function (n, i) {
        var a = n.constructor,
          s,
          f,
          l = n.minus(i),
          p = new a(1);
        if (!Kd(n) || !Kd(i))
          throw new TypeError(
            "Positive integer value expected in function combinations"
          );
        if (i.gt(n))
          throw new TypeError("k must be less than n in function combinations");
        if (((s = p), i.lt(l)))
          for (f = p; f.lte(l); f = f.plus(p))
            s = s.times(i.plus(f)).dividedBy(f);
        else
          for (f = p; f.lte(i); f = f.plus(p))
            s = s.times(l.plus(f)).dividedBy(f);
        return s;
      },
    });
  });
function Kd(e) {
  return e.isInteger() && e.gte(0);
}
var eh = "combinationsWithRep",
  D$ = ["typed"],
  _$ = F(eh, D$, (e) => {
    var { typed: r } = e;
    return r(eh, {
      "number, number": function (n, i) {
        if (!Ne(n) || n < 0)
          throw new TypeError(
            "Positive integer value expected in function combinationsWithRep"
          );
        if (!Ne(i) || i < 0)
          throw new TypeError(
            "Positive integer value expected in function combinationsWithRep"
          );
        if (n < 1)
          throw new TypeError("k must be less than or equal to n + k - 1");
        if (i < n - 1) {
          var a = Gt(n, n + i - 1);
          return a / Gt(1, i);
        }
        var s = Gt(i + 1, n + i - 1);
        return s / Gt(1, n - 1);
      },
      "BigNumber, BigNumber": function (n, i) {
        var a = n.constructor,
          s,
          f,
          l = new a(1),
          p = n.minus(l);
        if (!rh(n) || !rh(i))
          throw new TypeError(
            "Positive integer value expected in function combinationsWithRep"
          );
        if (n.lt(l))
          throw new TypeError(
            "k must be less than or equal to n + k - 1 in function combinationsWithRep"
          );
        if (((s = l), i.lt(p)))
          for (f = l; f.lte(p); f = f.plus(l))
            s = s.times(i.plus(f)).dividedBy(f);
        else
          for (f = l; f.lte(i); f = f.plus(l))
            s = s.times(p.plus(f)).dividedBy(f);
        return s;
      },
    });
  });
function rh(e) {
  return e.isInteger() && e.gte(0);
}
var th = "gamma",
  B$ = ["typed", "config", "multiplyScalar", "pow", "BigNumber", "Complex"],
  I$ = F(th, B$, (e) => {
    var {
      typed: r,
      config: t,
      multiplyScalar: n,
      pow: i,
      BigNumber: a,
      Complex: s,
    } = e;
    return r(th, {
      number: Wc,
      Complex: function (p) {
        if (p.im === 0) return this(p.re);
        if (p.re < 0.5) {
          var u = new s(1 - p.re, -p.im),
            o = new s(Math.PI * p.re, Math.PI * p.im);
          return new s(Math.PI).div(o.sin()).div(this(u));
        }
        p = new s(p.re - 1, p.im);
        for (var c = new s(Di[0], 0), m = 1; m < Di.length; ++m) {
          var v = new s(Di[m], 0);
          c = c.add(v.div(p.add(m)));
        }
        var d = new s(p.re + J0 + 0.5, p.im),
          N = Math.sqrt(2 * Math.PI),
          g = d.pow(p.add(0.5)),
          w = d.neg().exp();
        return c.mul(N).mul(g).mul(w);
      },
      BigNumber: function (p) {
        if (p.isInteger())
          return p.isNegative() || p.isZero() ? new a(1 / 0) : f(p.minus(1));
        if (!p.isFinite()) return new a(p.isNegative() ? NaN : 1 / 0);
        throw new Error("Integer BigNumber expected");
      },
      "Array | Matrix": function (p) {
        return ye(p, this);
      },
    });
    function f(l) {
      if (l < 8) return new a([1, 1, 2, 6, 24, 120, 720, 5040][l]);
      var p = t.precision + (Math.log(l.toNumber()) | 0),
        u = a.clone({ precision: p });
      if (l % 2 === 1) return l.times(f(new a(l - 1)));
      for (var o = l, c = new u(l), m = l.toNumber(); o > 2; )
        (o -= 2), (m += o), (c = c.times(m));
      return new a(c.toPrecision(a.precision));
    }
  }),
  nh = "lgamma",
  $$ = ["Complex", "typed"],
  z$ = F(nh, $$, (e) => {
    var { Complex: r, typed: t } = e,
      n = 7,
      i = 7,
      a = [
        -0.029550653594771242, 0.00641025641025641, -0.0019175269175269176,
        0.0008417508417508417, -0.0005952380952380953, 0.0007936507936507937,
        -0.002777777777777778, 0.08333333333333333,
      ];
    return t(nh, {
      number: gs,
      Complex: function (p) {
        var u = 6.283185307179586,
          o = 1.1447298858494002,
          c = 0.1;
        if (p.isNaN()) return new r(NaN, NaN);
        if (p.im === 0) return new r(gs(p.re), 0);
        if (p.re >= n || Math.abs(p.im) >= i) return s(p);
        if (p.re <= c) {
          var m = eN(u, p.im) * Math.floor(0.5 * p.re + 0.25),
            v = p.mul(Math.PI).sin().log(),
            d = this(new r(1 - p.re, -p.im));
          return new r(o, m).sub(v).sub(d);
        } else return p.im >= 0 ? f(p) : f(p.conjugate()).conjugate();
      },
      BigNumber: function () {
        throw new Error(
          "mathjs doesn't yet provide an implementation of the algorithm lgamma for BigNumber"
        );
      },
    });
    function s(l) {
      for (
        var p = l.sub(0.5).mul(l.log()).sub(l).add(K0),
          u = new r(1, 0).div(l),
          o = u.div(l),
          c = a[0],
          m = a[1],
          v = 2 * o.re,
          d = o.re * o.re + o.im * o.im,
          N = 2;
        N < 8;
        N++
      ) {
        var g = m;
        (m = -d * c + a[N]), (c = v * c + g);
      }
      var w = u.mul(o.mul(c).add(m));
      return p.add(w);
    }
    function f(l) {
      var p = 0,
        u = 0,
        o = l;
      for (l = l.add(1); l.re <= n; ) {
        o = o.mul(l);
        var c = o.im < 0 ? 1 : 0;
        c !== 0 && u === 0 && p++, (u = c), (l = l.add(1));
      }
      return s(l)
        .sub(o.log())
        .sub(new r(0, p * 2 * Math.PI * 1));
    }
  }),
  ih = "factorial",
  R$ = ["typed", "gamma"],
  F$ = F(ih, R$, (e) => {
    var { typed: r, gamma: t } = e;
    return r(ih, {
      number: function (i) {
        if (i < 0) throw new Error("Value must be non-negative");
        return t(i + 1);
      },
      BigNumber: function (i) {
        if (i.isNegative()) throw new Error("Value must be non-negative");
        return t(i.plus(1));
      },
      "Array | Matrix": function (i) {
        return ye(i, this);
      },
    });
  }),
  ah = "kldivergence",
  P$ = [
    "typed",
    "matrix",
    "divide",
    "sum",
    "multiply",
    "dotDivide",
    "log",
    "isNumeric",
  ],
  L$ = F(ah, P$, (e) => {
    var {
      typed: r,
      matrix: t,
      divide: n,
      sum: i,
      multiply: a,
      dotDivide: s,
      log: f,
      isNumeric: l,
    } = e;
    return r(ah, {
      "Array, Array": function (o, c) {
        return p(t(o), t(c));
      },
      "Matrix, Array": function (o, c) {
        return p(o, t(c));
      },
      "Array, Matrix": function (o, c) {
        return p(t(o), c);
      },
      "Matrix, Matrix": function (o, c) {
        return p(o, c);
      },
    });
    function p(u, o) {
      var c = o.size().length,
        m = u.size().length;
      if (c > 1) throw new Error("first object must be one dimensional");
      if (m > 1) throw new Error("second object must be one dimensional");
      if (c !== m) throw new Error("Length of two vectors must be equal");
      var v = i(u);
      if (v === 0)
        throw new Error("Sum of elements in first object must be non zero");
      var d = i(o);
      if (d === 0)
        throw new Error("Sum of elements in second object must be non zero");
      var N = n(u, i(u)),
        g = n(o, i(o)),
        w = i(a(N, f(s(N, g))));
      return l(w) ? w : Number.NaN;
    }
  }),
  oh = "multinomial",
  k$ = [
    "typed",
    "add",
    "divide",
    "multiply",
    "factorial",
    "isInteger",
    "isPositive",
  ],
  U$ = F(oh, k$, (e) => {
    var {
      typed: r,
      add: t,
      divide: n,
      multiply: i,
      factorial: a,
      isInteger: s,
      isPositive: f,
    } = e;
    return r(oh, {
      "Array | Matrix": function (p) {
        var u = 0,
          o = 1;
        return (
          Jt(p, function (c) {
            if (!s(c) || !f(c))
              throw new TypeError(
                "Positive integer value expected in function multinomial"
              );
            (u = t(u, c)), (o = i(o, a(c)));
          }),
          n(a(u), o)
        );
      },
    });
  }),
  sh = "permutations",
  q$ = ["typed", "factorial"],
  H$ = F(sh, q$, (e) => {
    var { typed: r, factorial: t } = e;
    return r(sh, {
      "number | BigNumber": t,
      "number, number": function (i, a) {
        if (!Ne(i) || i < 0)
          throw new TypeError(
            "Positive integer value expected in function permutations"
          );
        if (!Ne(a) || a < 0)
          throw new TypeError(
            "Positive integer value expected in function permutations"
          );
        if (a > i)
          throw new TypeError(
            "second argument k must be less than or equal to first argument n"
          );
        return Gt(i - a + 1, i);
      },
      "BigNumber, BigNumber": function (i, a) {
        var s, f;
        if (!uh(i) || !uh(a))
          throw new TypeError(
            "Positive integer value expected in function permutations"
          );
        if (a.gt(i))
          throw new TypeError(
            "second argument k must be less than or equal to first argument n"
          );
        var l = i.mul(0).add(1);
        for (s = l, f = i.minus(a).plus(1); f.lte(i); f = f.plus(1))
          s = s.times(f);
        return s;
      },
    });
  });
function uh(e) {
  return e.isInteger() && e.gte(0);
}
var V1 = { exports: {} };
(function (e) {
  (function (r, t, n) {
    function i(l) {
      var p = this,
        u = f();
      (p.next = function () {
        var o = 2091639 * p.s0 + p.c * 23283064365386963e-26;
        return (p.s0 = p.s1), (p.s1 = p.s2), (p.s2 = o - (p.c = o | 0));
      }),
        (p.c = 1),
        (p.s0 = u(" ")),
        (p.s1 = u(" ")),
        (p.s2 = u(" ")),
        (p.s0 -= u(l)),
        p.s0 < 0 && (p.s0 += 1),
        (p.s1 -= u(l)),
        p.s1 < 0 && (p.s1 += 1),
        (p.s2 -= u(l)),
        p.s2 < 0 && (p.s2 += 1),
        (u = null);
    }
    function a(l, p) {
      return (p.c = l.c), (p.s0 = l.s0), (p.s1 = l.s1), (p.s2 = l.s2), p;
    }
    function s(l, p) {
      var u = new i(l),
        o = p && p.state,
        c = u.next;
      return (
        (c.int32 = function () {
          return (u.next() * 4294967296) | 0;
        }),
        (c.double = function () {
          return c() + ((c() * 2097152) | 0) * 11102230246251565e-32;
        }),
        (c.quick = c),
        o &&
          (typeof o == "object" && a(o, u),
          (c.state = function () {
            return a(u, {});
          })),
        c
      );
    }
    function f() {
      var l = 4022871197,
        p = function (u) {
          u = String(u);
          for (var o = 0; o < u.length; o++) {
            l += u.charCodeAt(o);
            var c = 0.02519603282416938 * l;
            (l = c >>> 0),
              (c -= l),
              (c *= l),
              (l = c >>> 0),
              (c -= l),
              (l += c * 4294967296);
          }
          return (l >>> 0) * 23283064365386963e-26;
        };
      return p;
    }
    t && t.exports
      ? (t.exports = s)
      : n && n.amd
      ? n(function () {
          return s;
        })
      : (this.alea = s);
  })(On, e, !1);
})(V1);
var G1 = { exports: {} };
(function (e) {
  (function (r, t, n) {
    function i(f) {
      var l = this,
        p = "";
      (l.x = 0),
        (l.y = 0),
        (l.z = 0),
        (l.w = 0),
        (l.next = function () {
          var o = l.x ^ (l.x << 11);
          return (
            (l.x = l.y),
            (l.y = l.z),
            (l.z = l.w),
            (l.w ^= (l.w >>> 19) ^ o ^ (o >>> 8))
          );
        }),
        f === (f | 0) ? (l.x = f) : (p += f);
      for (var u = 0; u < p.length + 64; u++)
        (l.x ^= p.charCodeAt(u) | 0), l.next();
    }
    function a(f, l) {
      return (l.x = f.x), (l.y = f.y), (l.z = f.z), (l.w = f.w), l;
    }
    function s(f, l) {
      var p = new i(f),
        u = l && l.state,
        o = function () {
          return (p.next() >>> 0) / 4294967296;
        };
      return (
        (o.double = function () {
          do
            var c = p.next() >>> 11,
              m = (p.next() >>> 0) / 4294967296,
              v = (c + m) / (1 << 21);
          while (v === 0);
          return v;
        }),
        (o.int32 = p.next),
        (o.quick = o),
        u &&
          (typeof u == "object" && a(u, p),
          (o.state = function () {
            return a(p, {});
          })),
        o
      );
    }
    t && t.exports
      ? (t.exports = s)
      : n && n.amd
      ? n(function () {
          return s;
        })
      : (this.xor128 = s);
  })(On, e, !1);
})(G1);
var W1 = { exports: {} };
(function (e) {
  (function (r, t, n) {
    function i(f) {
      var l = this,
        p = "";
      (l.next = function () {
        var o = l.x ^ (l.x >>> 2);
        return (
          (l.x = l.y),
          (l.y = l.z),
          (l.z = l.w),
          (l.w = l.v),
          ((l.d = (l.d + 362437) | 0) +
            (l.v = l.v ^ (l.v << 4) ^ (o ^ (o << 1)))) |
            0
        );
      }),
        (l.x = 0),
        (l.y = 0),
        (l.z = 0),
        (l.w = 0),
        (l.v = 0),
        f === (f | 0) ? (l.x = f) : (p += f);
      for (var u = 0; u < p.length + 64; u++)
        (l.x ^= p.charCodeAt(u) | 0),
          u == p.length && (l.d = (l.x << 10) ^ (l.x >>> 4)),
          l.next();
    }
    function a(f, l) {
      return (
        (l.x = f.x),
        (l.y = f.y),
        (l.z = f.z),
        (l.w = f.w),
        (l.v = f.v),
        (l.d = f.d),
        l
      );
    }
    function s(f, l) {
      var p = new i(f),
        u = l && l.state,
        o = function () {
          return (p.next() >>> 0) / 4294967296;
        };
      return (
        (o.double = function () {
          do
            var c = p.next() >>> 11,
              m = (p.next() >>> 0) / 4294967296,
              v = (c + m) / (1 << 21);
          while (v === 0);
          return v;
        }),
        (o.int32 = p.next),
        (o.quick = o),
        u &&
          (typeof u == "object" && a(u, p),
          (o.state = function () {
            return a(p, {});
          })),
        o
      );
    }
    t && t.exports
      ? (t.exports = s)
      : n && n.amd
      ? n(function () {
          return s;
        })
      : (this.xorwow = s);
  })(On, e, !1);
})(W1);
var Z1 = { exports: {} };
(function (e) {
  (function (r, t, n) {
    function i(f) {
      var l = this;
      l.next = function () {
        var u = l.x,
          o = l.i,
          c,
          m;
        return (
          (c = u[o]),
          (c ^= c >>> 7),
          (m = c ^ (c << 24)),
          (c = u[(o + 1) & 7]),
          (m ^= c ^ (c >>> 10)),
          (c = u[(o + 3) & 7]),
          (m ^= c ^ (c >>> 3)),
          (c = u[(o + 4) & 7]),
          (m ^= c ^ (c << 7)),
          (c = u[(o + 7) & 7]),
          (c = c ^ (c << 13)),
          (m ^= c ^ (c << 9)),
          (u[o] = m),
          (l.i = (o + 1) & 7),
          m
        );
      };
      function p(u, o) {
        var c,
          m = [];
        if (o === (o | 0)) m[0] = o;
        else
          for (o = "" + o, c = 0; c < o.length; ++c)
            m[c & 7] =
              (m[c & 7] << 15) ^ ((o.charCodeAt(c) + m[(c + 1) & 7]) << 13);
        for (; m.length < 8; ) m.push(0);
        for (c = 0; c < 8 && m[c] === 0; ++c);
        for (c == 8 ? (m[7] = -1) : m[c], u.x = m, u.i = 0, c = 256; c > 0; --c)
          u.next();
      }
      p(l, f);
    }
    function a(f, l) {
      return (l.x = f.x.slice()), (l.i = f.i), l;
    }
    function s(f, l) {
      f == null && (f = +new Date());
      var p = new i(f),
        u = l && l.state,
        o = function () {
          return (p.next() >>> 0) / 4294967296;
        };
      return (
        (o.double = function () {
          do
            var c = p.next() >>> 11,
              m = (p.next() >>> 0) / 4294967296,
              v = (c + m) / (1 << 21);
          while (v === 0);
          return v;
        }),
        (o.int32 = p.next),
        (o.quick = o),
        u &&
          (u.x && a(u, p),
          (o.state = function () {
            return a(p, {});
          })),
        o
      );
    }
    t && t.exports
      ? (t.exports = s)
      : n && n.amd
      ? n(function () {
          return s;
        })
      : (this.xorshift7 = s);
  })(On, e, !1);
})(Z1);
var Q1 = { exports: {} };
(function (e) {
  (function (r, t, n) {
    function i(f) {
      var l = this;
      l.next = function () {
        var u = l.w,
          o = l.X,
          c = l.i,
          m,
          v;
        return (
          (l.w = u = (u + 1640531527) | 0),
          (v = o[(c + 34) & 127]),
          (m = o[(c = (c + 1) & 127)]),
          (v ^= v << 13),
          (m ^= m << 17),
          (v ^= v >>> 15),
          (m ^= m >>> 12),
          (v = o[c] = v ^ m),
          (l.i = c),
          (v + (u ^ (u >>> 16))) | 0
        );
      };
      function p(u, o) {
        var c,
          m,
          v,
          d,
          N,
          g = [],
          w = 128;
        for (
          o === (o | 0)
            ? ((m = o), (o = null))
            : ((o = o + "\0"), (m = 0), (w = Math.max(w, o.length))),
            v = 0,
            d = -32;
          d < w;
          ++d
        )
          o && (m ^= o.charCodeAt((d + 32) % o.length)),
            d === 0 && (N = m),
            (m ^= m << 10),
            (m ^= m >>> 15),
            (m ^= m << 4),
            (m ^= m >>> 13),
            d >= 0 &&
              ((N = (N + 1640531527) | 0),
              (c = g[d & 127] ^= m + N),
              (v = c == 0 ? v + 1 : 0));
        for (
          v >= 128 && (g[((o && o.length) || 0) & 127] = -1),
            v = 127,
            d = 4 * 128;
          d > 0;
          --d
        )
          (m = g[(v + 34) & 127]),
            (c = g[(v = (v + 1) & 127)]),
            (m ^= m << 13),
            (c ^= c << 17),
            (m ^= m >>> 15),
            (c ^= c >>> 12),
            (g[v] = m ^ c);
        (u.w = N), (u.X = g), (u.i = v);
      }
      p(l, f);
    }
    function a(f, l) {
      return (l.i = f.i), (l.w = f.w), (l.X = f.X.slice()), l;
    }
    function s(f, l) {
      f == null && (f = +new Date());
      var p = new i(f),
        u = l && l.state,
        o = function () {
          return (p.next() >>> 0) / 4294967296;
        };
      return (
        (o.double = function () {
          do
            var c = p.next() >>> 11,
              m = (p.next() >>> 0) / 4294967296,
              v = (c + m) / (1 << 21);
          while (v === 0);
          return v;
        }),
        (o.int32 = p.next),
        (o.quick = o),
        u &&
          (u.X && a(u, p),
          (o.state = function () {
            return a(p, {});
          })),
        o
      );
    }
    t && t.exports
      ? (t.exports = s)
      : n && n.amd
      ? n(function () {
          return s;
        })
      : (this.xor4096 = s);
  })(On, e, !1);
})(Q1);
var Y1 = { exports: {} };
(function (e) {
  (function (r, t, n) {
    function i(f) {
      var l = this,
        p = "";
      (l.next = function () {
        var o = l.b,
          c = l.c,
          m = l.d,
          v = l.a;
        return (
          (o = (o << 25) ^ (o >>> 7) ^ c),
          (c = (c - m) | 0),
          (m = (m << 24) ^ (m >>> 8) ^ v),
          (v = (v - o) | 0),
          (l.b = o = (o << 20) ^ (o >>> 12) ^ c),
          (l.c = c = (c - m) | 0),
          (l.d = (m << 16) ^ (c >>> 16) ^ v),
          (l.a = (v - o) | 0)
        );
      }),
        (l.a = 0),
        (l.b = 0),
        (l.c = -1640531527),
        (l.d = 1367130551),
        f === Math.floor(f)
          ? ((l.a = (f / 4294967296) | 0), (l.b = f | 0))
          : (p += f);
      for (var u = 0; u < p.length + 20; u++)
        (l.b ^= p.charCodeAt(u) | 0), l.next();
    }
    function a(f, l) {
      return (l.a = f.a), (l.b = f.b), (l.c = f.c), (l.d = f.d), l;
    }
    function s(f, l) {
      var p = new i(f),
        u = l && l.state,
        o = function () {
          return (p.next() >>> 0) / 4294967296;
        };
      return (
        (o.double = function () {
          do
            var c = p.next() >>> 11,
              m = (p.next() >>> 0) / 4294967296,
              v = (c + m) / (1 << 21);
          while (v === 0);
          return v;
        }),
        (o.int32 = p.next),
        (o.quick = o),
        u &&
          (typeof u == "object" && a(u, p),
          (o.state = function () {
            return a(p, {});
          })),
        o
      );
    }
    t && t.exports
      ? (t.exports = s)
      : n && n.amd
      ? n(function () {
          return s;
        })
      : (this.tychei = s);
  })(On, e, !1);
})(Y1);
var X1 = { exports: {} };
(function (e) {
  (function (r, t, n) {
    var i = 256,
      a = 6,
      s = 52,
      f = "random",
      l = n.pow(i, a),
      p = n.pow(2, s),
      u = p * 2,
      o = i - 1,
      c;
    function m(x, b, y) {
      var A = [];
      b = b == !0 ? { entropy: !0 } : b || {};
      var S = g(N(b.entropy ? [x, h(t)] : x == null ? w() : x, 3), A),
        E = new v(A),
        M = function () {
          for (var _ = E.g(a), C = l, I = 0; _ < p; )
            (_ = (_ + I) * i), (C *= i), (I = E.g(1));
          for (; _ >= u; ) (_ /= 2), (C /= 2), (I >>>= 1);
          return (_ + I) / C;
        };
      return (
        (M.int32 = function () {
          return E.g(4) | 0;
        }),
        (M.quick = function () {
          return E.g(4) / 4294967296;
        }),
        (M.double = M),
        g(h(E.S), t),
        (
          b.pass ||
          y ||
          function (_, C, I, L) {
            return (
              L &&
                (L.S && d(L, E),
                (_.state = function () {
                  return d(E, {});
                })),
              I ? ((n[f] = _), C) : _
            );
          }
        )(M, S, "global" in b ? b.global : this == n, b.state)
      );
    }
    function v(x) {
      var b,
        y = x.length,
        A = this,
        S = 0,
        E = (A.i = A.j = 0),
        M = (A.S = []);
      for (y || (x = [y++]); S < i; ) M[S] = S++;
      for (S = 0; S < i; S++)
        (M[S] = M[(E = o & (E + x[S % y] + (b = M[S])))]), (M[E] = b);
      (A.g = function (_) {
        for (var C, I = 0, L = A.i, $ = A.j, D = A.S; _--; )
          (C = D[(L = o & (L + 1))]),
            (I = I * i + D[o & ((D[L] = D[($ = o & ($ + C))]) + (D[$] = C))]);
        return (A.i = L), (A.j = $), I;
      })(i);
    }
    function d(x, b) {
      return (b.i = x.i), (b.j = x.j), (b.S = x.S.slice()), b;
    }
    function N(x, b) {
      var y = [],
        A = typeof x,
        S;
      if (b && A == "object")
        for (S in x)
          try {
            y.push(N(x[S], b - 1));
          } catch {}
      return y.length ? y : A == "string" ? x : x + "\0";
    }
    function g(x, b) {
      for (var y = x + "", A, S = 0; S < y.length; )
        b[o & S] = o & ((A ^= b[o & S] * 19) + y.charCodeAt(S++));
      return h(b);
    }
    function w() {
      try {
        var x;
        return (
          c && (x = c.randomBytes)
            ? (x = x(i))
            : ((x = new Uint8Array(i)),
              (r.crypto || r.msCrypto).getRandomValues(x)),
          h(x)
        );
      } catch {
        var b = r.navigator,
          y = b && b.plugins;
        return [+new Date(), r, y, r.screen, h(t)];
      }
    }
    function h(x) {
      return String.fromCharCode.apply(0, x);
    }
    if ((g(n.random(), t), e.exports)) {
      e.exports = m;
      try {
        c = require("crypto");
      } catch {}
    } else n["seed" + f] = m;
  })(typeof self != "undefined" ? self : On, [], Math);
})(X1);
var V$ = V1.exports,
  G$ = G1.exports,
  W$ = W1.exports,
  Z$ = Z1.exports,
  Q$ = Q1.exports,
  Y$ = Y1.exports,
  ti = X1.exports;
ti.alea = V$;
ti.xor128 = G$;
ti.xorwow = W$;
ti.xorshift7 = Z$;
ti.xor4096 = Q$;
ti.tychei = Y$;
var j1 = ti,
  X$ = j1(Date.now());
function Hi(e) {
  var r;
  function t(i) {
    r = i === null ? X$ : j1(String(i));
  }
  t(e);
  function n() {
    return r();
  }
  return n;
}
var lh = "pickRandom",
  j$ = ["typed", "config", "?on"],
  J$ = F(lh, j$, (e) => {
    var { typed: r, config: t, on: n } = e,
      i = Hi(t.randomSeed);
    return (
      n &&
        n("config", function (s, f) {
          s.randomSeed !== f.randomSeed && (i = Hi(s.randomSeed));
        }),
      r(lh, {
        "Array | Matrix": function (f) {
          return a(f, {});
        },
        "Array | Matrix, Object": function (f, l) {
          return a(f, l);
        },
        "Array | Matrix, number": function (f, l) {
          return a(f, { number: l });
        },
        "Array | Matrix, Array | Matrix": function (f, l) {
          return a(f, { weights: l });
        },
        "Array | Matrix, Array | Matrix, number": function (f, l, p) {
          return a(f, { number: p, weights: l });
        },
        "Array | Matrix, number, Array | Matrix": function (f, l, p) {
          return a(f, { number: l, weights: p });
        },
      })
    );
    function a(s, f) {
      var { number: l, weights: p, elementWise: u = !0 } = f,
        o = typeof l == "undefined";
      o && (l = 1);
      var c = Ae(s) ? s.create : Ae(p) ? p.create : null;
      (s = s.valueOf()),
        p && (p = p.valueOf()),
        u === !0 && ((s = Re(s)), (p = Re(p)));
      var m = 0;
      if (typeof p != "undefined") {
        if (p.length !== s.length)
          throw new Error("Weights must have the same length as possibles");
        for (var v = 0, d = p.length; v < d; v++) {
          if (!$e(p[v]) || p[v] < 0)
            throw new Error("Weights must be an array of positive numbers");
          m += p[v];
        }
      }
      for (var N = s.length, g = [], w; g.length < l; ) {
        if (typeof p == "undefined") w = s[Math.floor(i() * N)];
        else
          for (var h = i() * m, x = 0, b = s.length; x < b; x++)
            if (((h -= p[x]), h < 0)) {
              w = s[x];
              break;
            }
        g.push(w);
      }
      return o ? g[0] : c ? c(g) : g;
    }
  });
function Jc(e, r) {
  var t = [];
  if (((e = e.slice(0)), e.length > 1))
    for (var n = 0, i = e.shift(); n < i; n++) t.push(Jc(e, r));
  else for (var a = 0, s = e.shift(); a < s; a++) t.push(r());
  return t;
}
var ch = "random",
  K$ = ["typed", "config", "?on"],
  ez = F(ch, K$, (e) => {
    var { typed: r, config: t, on: n } = e,
      i = Hi(t.randomSeed);
    return (
      n &&
        n("config", function (f, l) {
          f.randomSeed !== l.randomSeed && (i = Hi(f.randomSeed));
        }),
      r(ch, {
        "": () => s(0, 1),
        number: (f) => s(0, f),
        "number, number": (f, l) => s(f, l),
        "Array | Matrix": (f) => a(f, 0, 1),
        "Array | Matrix, number": (f, l) => a(f, 0, l),
        "Array | Matrix, number, number": (f, l, p) => a(f, l, p),
      })
    );
    function a(f, l, p) {
      var u = Jc(f.valueOf(), () => s(l, p));
      return Ae(f) ? f.create(u) : u;
    }
    function s(f, l) {
      return f + i() * (l - f);
    }
  }),
  fh = "randomInt",
  rz = ["typed", "config", "?on"],
  tz = F(fh, rz, (e) => {
    var { typed: r, config: t, on: n } = e,
      i = Hi(t.randomSeed);
    return (
      n &&
        n("config", function (f, l) {
          f.randomSeed !== l.randomSeed && (i = Hi(f.randomSeed));
        }),
      r(fh, {
        "": () => s(0, 1),
        number: (f) => s(0, f),
        "number, number": (f, l) => s(f, l),
        "Array | Matrix": (f) => a(f, 0, 1),
        "Array | Matrix, number": (f, l) => a(f, 0, l),
        "Array | Matrix, number, number": (f, l, p) => a(f, l, p),
      })
    );
    function a(f, l, p) {
      var u = Jc(f.valueOf(), () => s(l, p));
      return Ae(f) ? f.create(u) : u;
    }
    function s(f, l) {
      return Math.floor(f + i() * (l - f));
    }
  }),
  ph = "stirlingS2",
  nz = [
    "typed",
    "addScalar",
    "subtract",
    "multiplyScalar",
    "divideScalar",
    "pow",
    "factorial",
    "combinations",
    "isNegative",
    "isInteger",
    "number",
    "?bignumber",
    "larger",
  ],
  iz = F(ph, nz, (e) => {
    var {
        typed: r,
        addScalar: t,
        subtract: n,
        multiplyScalar: i,
        divideScalar: a,
        pow: s,
        factorial: f,
        combinations: l,
        isNegative: p,
        isInteger: u,
        number: o,
        bignumber: c,
        larger: m,
      } = e,
      v = [],
      d = [];
    return r(ph, {
      "number | BigNumber, number | BigNumber": function (g, w) {
        if (!u(g) || p(g) || !u(w) || p(w))
          throw new TypeError(
            "Non-negative integer value expected in function stirlingS2"
          );
        if (m(w, g))
          throw new TypeError(
            "k must be less than or equal to n in function stirlingS2"
          );
        var h = !($e(g) && $e(w)),
          x = h ? d : v,
          b = h ? c : o,
          y = o(g),
          A = o(w);
        if (x[y] && x[y].length > A) return x[y][A];
        for (var S = 0; S <= y; ++S)
          if ((x[S] || (x[S] = [b(S === 0 ? 1 : 0)]), S !== 0))
            for (
              var E = x[S], M = x[S - 1], _ = E.length;
              _ <= S && _ <= A;
              ++_
            )
              _ === S ? (E[_] = 1) : (E[_] = t(i(b(_), M[_]), M[_ - 1]));
        return x[y][A];
      },
    });
  }),
  mh = "bellNumbers",
  az = ["typed", "addScalar", "isNegative", "isInteger", "stirlingS2"],
  oz = F(mh, az, (e) => {
    var {
      typed: r,
      addScalar: t,
      isNegative: n,
      isInteger: i,
      stirlingS2: a,
    } = e;
    return r(mh, {
      "number | BigNumber": function (f) {
        if (!i(f) || n(f))
          throw new TypeError(
            "Non-negative integer value expected in function bellNumbers"
          );
        for (var l = 0, p = 0; p <= f; p++) l = t(l, a(f, p));
        return l;
      },
    });
  }),
  vh = "catalan",
  sz = [
    "typed",
    "addScalar",
    "divideScalar",
    "multiplyScalar",
    "combinations",
    "isNegative",
    "isInteger",
  ],
  uz = F(vh, sz, (e) => {
    var {
      typed: r,
      addScalar: t,
      divideScalar: n,
      multiplyScalar: i,
      combinations: a,
      isNegative: s,
      isInteger: f,
    } = e;
    return r(vh, {
      "number | BigNumber": function (p) {
        if (!f(p) || s(p))
          throw new TypeError(
            "Non-negative integer value expected in function catalan"
          );
        return n(a(i(p, 2), p), t(p, 1));
      },
    });
  }),
  dh = "composition",
  lz = [
    "typed",
    "addScalar",
    "combinations",
    "isNegative",
    "isPositive",
    "isInteger",
    "larger",
  ],
  cz = F(dh, lz, (e) => {
    var {
      typed: r,
      addScalar: t,
      combinations: n,
      isPositive: i,
      isNegative: a,
      isInteger: s,
      larger: f,
    } = e;
    return r(dh, {
      "number | BigNumber, number | BigNumber": function (p, u) {
        if (!s(p) || !i(p) || !s(u) || !i(u))
          throw new TypeError(
            "Positive integer value expected in function composition"
          );
        if (f(u, p))
          throw new TypeError(
            "k must be less than or equal to n in function composition"
          );
        return n(t(p, -1), t(u, -1));
      },
    });
  }),
  hh = "leafCount",
  fz = ["parse", "typed"],
  pz = F(hh, fz, (e) => {
    var { parse: r, typed: t } = e;
    function n(i) {
      var a = 0;
      return (
        i.forEach((s) => {
          a += n(s);
        }),
        a || 1
      );
    }
    return t(hh, {
      string: function (a) {
        return this(r(a));
      },
      Node: function (a) {
        return n(a);
      },
    });
  });
function gh(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    r &&
      (n = n.filter(function (i) {
        return Object.getOwnPropertyDescriptor(e, i).enumerable;
      })),
      t.push.apply(t, n);
  }
  return t;
}
function $u(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = arguments[r] != null ? arguments[r] : {};
    r % 2
      ? gh(Object(t), !0).forEach(function (n) {
          I1(e, n, t[n]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
      : gh(Object(t)).forEach(function (n) {
          Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));
        });
  }
  return e;
}
var mz = "simplifyUtil",
  vz = ["FunctionNode", "OperatorNode", "SymbolNode"],
  Kc = F(mz, vz, (e) => {
    var { FunctionNode: r, OperatorNode: t, SymbolNode: n } = e,
      i = !0,
      a = !1,
      s = "defaultF",
      f = {
        add: { trivial: i, total: i, commutative: i, associative: i },
        unaryPlus: { trivial: i, total: i, commutative: i, associative: i },
        subtract: { trivial: a, total: i, commutative: a, associative: a },
        multiply: { trivial: i, total: i, commutative: i, associative: i },
        divide: { trivial: a, total: i, commutative: a, associative: a },
        paren: { trivial: i, total: i, commutative: i, associative: a },
        defaultF: { trivial: a, total: i, commutative: a, associative: a },
      },
      l = { divide: { total: a }, log: { total: a } },
      p = { subtract: { total: a }, abs: { trivial: i }, log: { total: i } };
    function u(h, x) {
      var b =
          arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : f,
        y = s;
      if (
        (typeof h == "string"
          ? (y = h)
          : Ir(h)
          ? (y = h.fn.toString())
          : An(h)
          ? (y = h.name)
          : Yi(h) && (y = "paren"),
        ge(b, y))
      ) {
        var A = b[y];
        if (ge(A, x)) return A[x];
        if (ge(f, y)) return f[y][x];
      }
      if (ge(b, s)) {
        var S = b[s];
        return ge(S, x) ? S[x] : f[s][x];
      }
      if (ge(f, y)) {
        var E = f[y];
        if (ge(E, x)) return E[x];
      }
      return f[s][x];
    }
    function o(h) {
      var x =
        arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : f;
      return u(h, "commutative", x);
    }
    function c(h) {
      var x =
        arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : f;
      return u(h, "associative", x);
    }
    function m(h, x) {
      var b = $u({}, h);
      for (var y in x)
        ge(h, y) ? (b[y] = $u($u({}, x[y]), h[y])) : (b[y] = x[y]);
      return b;
    }
    function v(h, x) {
      if (!h.args || h.args.length === 0) return h;
      h.args = d(h, x);
      for (var b = 0; b < h.args.length; b++) v(h.args[b], x);
    }
    function d(h, x) {
      var b,
        y = [],
        A = function S(E) {
          for (var M = 0; M < E.args.length; M++) {
            var _ = E.args[M];
            Ir(_) && b === _.op ? S(_) : y.push(_);
          }
        };
      return c(h, x) ? ((b = h.op), A(h), y) : h.args;
    }
    function N(h, x) {
      if (!(!h.args || h.args.length === 0)) {
        for (var b = w(h), y = h.args.length, A = 0; A < y; A++)
          N(h.args[A], x);
        if (y > 2 && c(h, x)) {
          for (var S = h.args.pop(); h.args.length > 0; )
            S = b([h.args.pop(), S]);
          h.args = S.args;
        }
      }
    }
    function g(h, x) {
      if (!(!h.args || h.args.length === 0)) {
        for (var b = w(h), y = h.args.length, A = 0; A < y; A++)
          g(h.args[A], x);
        if (y > 2 && c(h, x)) {
          for (var S = h.args.shift(); h.args.length > 0; )
            S = b([S, h.args.shift()]);
          h.args = S.args;
        }
      }
    }
    function w(h) {
      return Ir(h)
        ? function (x) {
            try {
              return new t(h.op, h.fn, x, h.implicit);
            } catch (b) {
              return console.error(b), [];
            }
          }
        : function (x) {
            return new r(new n(h.name), x);
          };
    }
    return {
      createMakeNodeFunction: w,
      hasProperty: u,
      isCommutative: o,
      isAssociative: c,
      mergeContext: m,
      flatten: v,
      allChildren: d,
      unflattenr: N,
      unflattenl: g,
      defaultContext: f,
      realContext: l,
      positiveContext: p,
    };
  }),
  dz = "simplifyConstant",
  hz = [
    "typed",
    "config",
    "mathWithTransform",
    "matrix",
    "?fraction",
    "?bignumber",
    "AccessorNode",
    "ArrayNode",
    "ConstantNode",
    "FunctionNode",
    "IndexNode",
    "ObjectNode",
    "OperatorNode",
    "SymbolNode",
  ],
  J1 = F(dz, hz, (e) => {
    var {
        typed: r,
        config: t,
        mathWithTransform: n,
        matrix: i,
        fraction: a,
        bignumber: s,
        AccessorNode: f,
        ArrayNode: l,
        ConstantNode: p,
        FunctionNode: u,
        IndexNode: o,
        ObjectNode: c,
        OperatorNode: m,
        SymbolNode: v,
      } = e,
      {
        isCommutative: d,
        isAssociative: N,
        allChildren: g,
        createMakeNodeFunction: w,
      } = Kc({ FunctionNode: u, OperatorNode: m, SymbolNode: v });
    function h($, D) {
      return A(L($, D));
    }
    function x($) {
      return Bn($)
        ? $.valueOf()
        : $ instanceof Array
        ? $.map(x)
        : Ae($)
        ? i(x($.valueOf()))
        : $;
    }
    function b($, D, B) {
      try {
        return n[$].apply(null, D);
      } catch {
        return (D = D.map(x)), E(n[$].apply(null, D), B);
      }
    }
    var y = r({
      Fraction: _,
      number: function (D) {
        return D < 0 ? M(new p(-D)) : new p(D);
      },
      BigNumber: function (D) {
        return D < 0 ? M(new p(-D)) : new p(D);
      },
      Complex: function (D) {
        throw new Error("Cannot convert Complex number to Node");
      },
      string: function (D) {
        return new p(D);
      },
      Matrix: function (D) {
        return new l(D.valueOf().map((B) => y(B)));
      },
    });
    function A($) {
      return Le($) ? $ : y($);
    }
    function S($, D) {
      var B = D && D.exactFractions !== !1;
      if (B && isFinite($) && a) {
        var R = a($),
          T =
            D && typeof D.fractionsLimit == "number" ? D.fractionsLimit : 1 / 0;
        if (R.valueOf() === $ && R.n < T && R.d < T) return R;
      }
      return $;
    }
    var E = r({
      "string, Object": function (D, B) {
        if (t.number === "BigNumber") return s === void 0 && Yc(), s(D);
        if (t.number === "Fraction") return a === void 0 && E1(), a(D);
        var R = parseFloat(D);
        return S(R, B);
      },
      "Fraction, Object": function (D, B) {
        return D;
      },
      "BigNumber, Object": function (D, B) {
        return D;
      },
      "number, Object": function (D, B) {
        return S(D, B);
      },
      "Complex, Object": function (D, B) {
        return D.im !== 0 ? D : S(D.re, B);
      },
      "Matrix, Object": function (D, B) {
        return i(S(D.valueOf()));
      },
      "Array, Object": function (D, B) {
        return D.map(S);
      },
    });
    function M($) {
      return new m("-", "unaryMinus", [$]);
    }
    function _($) {
      var D,
        B = $.s * $.n;
      return (
        B < 0 ? (D = new m("-", "unaryMinus", [new p(-B)])) : (D = new p(B)),
        $.d === 1 ? D : new m("/", "divide", [D, new p($.d)])
      );
    }
    function C($, D, B) {
      if (!Kn(D)) return new f(A($), A(D));
      if (Xr($) || Ae($)) {
        for (var R = Array.from(D.dimensions); R.length > 0; )
          if (Ve(R[0]) && typeof R[0].value != "string") {
            var T = E(R.shift().value, B);
            Xr($)
              ? ($ = $.items[T - 1])
              : (($ = $.valueOf()[T - 1]), $ instanceof Array && ($ = i($)));
          } else if (
            R.length > 1 &&
            Ve(R[1]) &&
            typeof R[1].value != "string"
          ) {
            var P = E(R[1].value, B),
              W = [],
              J = Xr($) ? $.items : $.valueOf();
            for (var G of J)
              if (Xr(G)) W.push(G.items[P - 1]);
              else if (Ae($)) W.push(G[P - 1]);
              else break;
            if (W.length === J.length)
              Xr($) ? ($ = new l(W)) : ($ = i(W)), R.splice(1, 1);
            else break;
          } else break;
        return R.length === D.dimensions.length
          ? new f(A($), D)
          : R.length > 0
          ? ((D = new o(R)), new f(A($), D))
          : $;
      }
      if (eo($) && D.dimensions.length === 1 && Ve(D.dimensions[0])) {
        var Y = D.dimensions[0].value;
        return Y in $.properties ? $.properties[Y] : new p();
      }
      return new f(A($), D);
    }
    function I($, D, B, R) {
      return D.reduce(function (T, P) {
        if (!Le(T) && !Le(P)) {
          try {
            return b($, [T, P], R);
          } catch {}
          (T = y(T)), (P = y(P));
        } else Le(T) ? Le(P) || (P = y(P)) : (T = y(T));
        return B([T, P]);
      });
    }
    function L($, D) {
      switch ($.type) {
        case "SymbolNode":
          return $;
        case "ConstantNode":
          switch (typeof $.value) {
            case "number":
              return E($.value, D);
            case "string":
              return $.value;
            default:
              if (!isNaN($.value)) return E($.value, D);
          }
          return $;
        case "FunctionNode":
          if (n[$.name] && n[$.name].rawArgs) return $;
          {
            var B = ["add", "multiply"];
            if (B.indexOf($.name) === -1) {
              var R = $.args.map((de) => L(de, D));
              if (!R.some(Le))
                try {
                  return b($.name, R, D);
                } catch {}
              if ($.name === "size" && R.length === 1 && Xr(R[0])) {
                for (var T = [], P = R[0]; Xr(P); )
                  T.push(P.items.length), (P = P.items[0]);
                return i(T);
              }
              return new u($.name, R.map(A));
            }
          }
        case "OperatorNode": {
          var W = $.fn.toString(),
            J,
            G,
            Y = w($);
          if (Ir($) && $.isUnary())
            (J = [L($.args[0], D)]), Le(J[0]) ? (G = Y(J)) : (G = b(W, J, D));
          else if (N($, D.context))
            if (
              ((J = g($, D.context)),
              (J = J.map((de) => L(de, D))),
              d(W, D.context))
            ) {
              for (var re = [], K = [], ie = 0; ie < J.length; ie++)
                Le(J[ie]) ? K.push(J[ie]) : re.push(J[ie]);
              re.length > 1
                ? ((G = I(W, re, Y, D)), K.unshift(G), (G = I(W, K, Y, D)))
                : (G = I(W, J, Y, D));
            } else G = I(W, J, Y, D);
          else (J = $.args.map((de) => L(de, D))), (G = I(W, J, Y, D));
          return G;
        }
        case "ParenthesisNode":
          return L($.content, D);
        case "AccessorNode":
          return C(L($.object, D), L($.index, D), D);
        case "ArrayNode": {
          var te = $.items.map((de) => L(de, D));
          return te.some(Le) ? new l(te.map(A)) : i(te);
        }
        case "IndexNode":
          return new o($.dimensions.map((de) => h(de, D)));
        case "ObjectNode": {
          var oe = {};
          for (var ee in $.properties) oe[ee] = h($.properties[ee], D);
          return new c(oe);
        }
        case "AssignmentNode":
        case "BlockNode":
        case "FunctionAssignmentNode":
        case "RangeNode":
        case "ConditionalNode":
        default:
          throw new Error(
            "Unimplemented node type in simplifyConstant: ".concat($.type)
          );
      }
    }
    return h;
  }),
  gz = "simplify",
  yz = [
    "config",
    "typed",
    "parse",
    "add",
    "subtract",
    "multiply",
    "divide",
    "pow",
    "isZero",
    "equal",
    "resolve",
    "simplifyCore",
    "?fraction",
    "?bignumber",
    "mathWithTransform",
    "matrix",
    "AccessorNode",
    "ArrayNode",
    "ConstantNode",
    "FunctionNode",
    "IndexNode",
    "ObjectNode",
    "OperatorNode",
    "ParenthesisNode",
    "SymbolNode",
  ],
  xz = F(gz, yz, (e) => {
    var {
        config: r,
        typed: t,
        parse: n,
        add: i,
        subtract: a,
        multiply: s,
        divide: f,
        pow: l,
        isZero: p,
        equal: u,
        resolve: o,
        simplifyCore: c,
        fraction: m,
        bignumber: v,
        mathWithTransform: d,
        matrix: N,
        AccessorNode: g,
        ArrayNode: w,
        ConstantNode: h,
        FunctionNode: x,
        IndexNode: b,
        ObjectNode: y,
        OperatorNode: A,
        ParenthesisNode: S,
        SymbolNode: E,
      } = e,
      M = J1({
        typed: t,
        config: r,
        mathWithTransform: d,
        matrix: N,
        fraction: m,
        bignumber: v,
        AccessorNode: g,
        ArrayNode: w,
        ConstantNode: h,
        FunctionNode: x,
        IndexNode: b,
        ObjectNode: y,
        OperatorNode: A,
        SymbolNode: E,
      }),
      {
        hasProperty: _,
        isCommutative: C,
        isAssociative: I,
        mergeContext: L,
        flatten: $,
        unflattenr: D,
        unflattenl: B,
        createMakeNodeFunction: R,
        defaultContext: T,
        realContext: P,
        positiveContext: W,
      } = Kc({ FunctionNode: x, OperatorNode: A, SymbolNode: E }),
      J = t("simplify", {
        string: function (q) {
          return this(n(q), this.rules, Ht(), {});
        },
        "string, Map | Object": function (q, X) {
          return this(n(q), this.rules, X, {});
        },
        "string, Map | Object, Object": function (q, X, z) {
          return this(n(q), this.rules, X, z);
        },
        "string, Array": function (q, X) {
          return this(n(q), X, Ht(), {});
        },
        "string, Array, Map | Object": function (q, X, z) {
          return this(n(q), X, z, {});
        },
        "string, Array, Map | Object, Object": function (q, X, z, U) {
          return this(n(q), X, z, U);
        },
        "Node, Map | Object": function (q, X) {
          return this(q, this.rules, X, {});
        },
        "Node, Map | Object, Object": function (q, X, z) {
          return this(q, this.rules, X, z);
        },
        Node: function (q) {
          return this(q, this.rules, Ht(), {});
        },
        "Node, Array": function (q, X) {
          return this(q, X, Ht(), {});
        },
        "Node, Array, Map | Object": function (q, X, z) {
          return this(q, X, z, {});
        },
        "Node, Array, Object, Object": function (q, X, z, U) {
          return this(q, X, Hc(z), U);
        },
        "Node, Array, Map, Object": function (q, X, z, U) {
          var j = U.consoleDebug;
          X = K(X, U.context);
          var H = o(q, z);
          H = G(H);
          for (
            var ae = {}, ue = H.toString({ parenthesis: "all" });
            !ae[ue];

          ) {
            (ae[ue] = !0), (ie = 0);
            var ve = ue;
            j && console.log("Working on: ", ue);
            for (var fe = 0; fe < X.length; fe++) {
              var pe = "";
              if (
                (typeof X[fe] == "function"
                  ? ((H = X[fe](H, U)), j && (pe = X[fe].name))
                  : ($(H, U.context),
                    (H = ee(H, X[fe], U.context)),
                    j &&
                      (pe = ""
                        .concat(X[fe].l.toString(), " -> ")
                        .concat(X[fe].r.toString()))),
                j)
              ) {
                var we = H.toString({ parenthesis: "all" });
                we !== ve &&
                  (console.log("Applying", pe, "produced", we), (ve = we));
              }
              B(H, U.context);
            }
            ue = H.toString({ parenthesis: "all" });
          }
          return H;
        },
      });
    (J.defaultContext = T), (J.realContext = P), (J.positiveContext = W);
    function G(V) {
      return V.transform(function (q, X, z) {
        return Yi(q) ? G(q.content) : q;
      });
    }
    var Y = {
      true: !0,
      false: !0,
      e: !0,
      i: !0,
      Infinity: !0,
      LN2: !0,
      LN10: !0,
      LOG2E: !0,
      LOG10E: !0,
      NaN: !0,
      phi: !0,
      pi: !0,
      SQRT1_2: !0,
      SQRT2: !0,
      tau: !0,
    };
    J.rules = [
      c,
      { l: "log(e)", r: "1" },
      { s: "n-n1 -> n+-n1", assuming: { subtract: { total: !0 } } },
      { s: "n-n -> 0", assuming: { subtract: { total: !1 } } },
      {
        s: "-(c*v) -> v * (-c)",
        assuming: { multiply: { commutative: !0 }, subtract: { total: !0 } },
      },
      {
        s: "-(c*v) -> (-c) * v",
        assuming: { multiply: { commutative: !1 }, subtract: { total: !0 } },
      },
      {
        s: "-(v*c) -> v * (-c)",
        assuming: { multiply: { commutative: !1 }, subtract: { total: !0 } },
      },
      { l: "-(n1/n2)", r: "-n1/n2" },
      { l: "-v", r: "v * (-1)" },
      { l: "(n1 + n2)*(-1)", r: "n1*(-1) + n2*(-1)", repeat: !0 },
      { l: "n/n1^n2", r: "n*n1^-n2" },
      { l: "n/n1", r: "n*n1^-1" },
      {
        s: "(n1*n2)^n3 -> n1^n3 * n2^n3",
        assuming: { multiply: { commutative: !0 } },
      },
      {
        s: "(n1*n2)^(-1) -> n2^(-1) * n1^(-1)",
        assuming: { multiply: { commutative: !1 } },
      },
      {
        s: "(n ^ n1) ^ n2 -> n ^ (n1 * n2)",
        assuming: { divide: { total: !0 } },
      },
      { l: " v   * ( v   * n1 + n2)", r: "v^2       * n1 +  v   * n2" },
      {
        s: " v   * (v^n4 * n1 + n2)   ->  v^(1+n4)  * n1 +  v   * n2",
        assuming: { divide: { total: !0 } },
      },
      {
        s: "v^n3 * ( v   * n1 + n2)   ->  v^(n3+1)  * n1 + v^n3 * n2",
        assuming: { divide: { total: !0 } },
      },
      {
        s: "v^n3 * (v^n4 * n1 + n2)   ->  v^(n3+n4) * n1 + v^n3 * n2",
        assuming: { divide: { total: !0 } },
      },
      { l: "n*n", r: "n^2" },
      { s: "n * n^n1 -> n^(n1+1)", assuming: { divide: { total: !0 } } },
      { s: "n^n1 * n^n2 -> n^(n1+n2)", assuming: { divide: { total: !0 } } },
      M,
      { s: "n+n -> 2*n", assuming: { add: { total: !0 } } },
      { l: "n+-n", r: "0" },
      { l: "v*n + v", r: "v*(n+1)" },
      { l: "n3*n1 + n3*n2", r: "n3*(n1+n2)" },
      { l: "n3^(-n4)*n1 +   n3  * n2", r: "n3^(-n4)*(n1 + n3^(n4+1) *n2)" },
      { l: "n3^(-n4)*n1 + n3^n5 * n2", r: "n3^(-n4)*(n1 + n3^(n4+n5)*n2)" },
      { s: "n*v + v -> (n+1)*v", assuming: { multiply: { commutative: !1 } } },
      {
        s: "n1*n3 + n2*n3 -> (n1+n2)*n3",
        assuming: { multiply: { commutative: !1 } },
      },
      {
        s: "n1*n3^(-n4) + n2 * n3    -> (n1 + n2*n3^(n4 +  1))*n3^(-n4)",
        assuming: { multiply: { commutative: !1 } },
      },
      {
        s: "n1*n3^(-n4) + n2 * n3^n5 -> (n1 + n2*n3^(n4 + n5))*n3^(-n4)",
        assuming: { multiply: { commutative: !1 } },
      },
      { l: "n*c + c", r: "(n+1)*c" },
      { s: "c*n + c -> c*(n+1)", assuming: { multiply: { commutative: !1 } } },
      M,
      { s: "(-n)*n1 -> -(n*n1)", assuming: { subtract: { total: !0 } } },
      {
        s: "n1*(-n) -> -(n1*n)",
        assuming: { subtract: { total: !0 }, multiply: { commutative: !1 } },
      },
      {
        s: "c+v -> v+c",
        assuming: { add: { commutative: !0 } },
        imposeContext: { add: { commutative: !1 } },
      },
      {
        s: "v*c -> c*v",
        assuming: { multiply: { commutative: !0 } },
        imposeContext: { multiply: { commutative: !1 } },
      },
      { l: "n+-n1", r: "n-n1" },
      { s: "n*(n1^-1) -> n/n1", assuming: { multiply: { commutative: !0 } } },
      { s: "n*n1^-n2 -> n/n1^n2", assuming: { multiply: { commutative: !0 } } },
      { s: "n^-1 -> 1/n", assuming: { multiply: { commutative: !0 } } },
      { l: "n^1", r: "n" },
      {
        s: "n*(n1/n2) -> (n*n1)/n2",
        assuming: { multiply: { associative: !0 } },
      },
      {
        s: "n-(n1+n2) -> n-n1-n2",
        assuming: { addition: { associative: !0, commutative: !0 } },
      },
      { l: "1*n", r: "n", imposeContext: { multiply: { commutative: !0 } } },
      {
        s: "n1/(n2/n3) -> (n1*n3)/n2",
        assuming: { multiply: { associative: !0 } },
      },
      { l: "n1/(-n2)", r: "-n1/n2" },
    ];
    function re(V, q) {
      var X = {};
      if (V.s) {
        var z = V.s.split("->");
        if (z.length === 2) (X.l = z[0]), (X.r = z[1]);
        else throw SyntaxError("Could not parse rule: " + V.s);
      } else (X.l = V.l), (X.r = V.r);
      (X.l = G(n(X.l))), (X.r = G(n(X.r)));
      for (var U of ["imposeContext", "repeat", "assuming"])
        U in V && (X[U] = V[U]);
      if ((V.evaluate && (X.evaluate = n(V.evaluate)), I(X.l, q))) {
        var j = R(X.l),
          H = te();
        (X.expanded = {}),
          (X.expanded.l = j([X.l.clone(), H])),
          $(X.expanded.l, q),
          D(X.expanded.l, q),
          (X.expanded.r = j([X.r, H]));
      }
      return X;
    }
    function K(V, q) {
      for (var X = [], z = 0; z < V.length; z++) {
        var U = V[z],
          j = void 0,
          H = typeof U;
        switch (H) {
          case "string":
            U = { s: U };
          case "object":
            j = re(U, q);
            break;
          case "function":
            j = U;
            break;
          default:
            throw TypeError("Unsupported type of rule: " + H);
        }
        X.push(j);
      }
      return X;
    }
    var ie = 0;
    function te() {
      return new E("_p" + ie++);
    }
    function oe(V, q, X) {
      var z = V;
      if (V)
        for (var U = 0; U < V.length; ++U) {
          var j = ee(V[U], q, X);
          j !== V[U] && (z === V && (z = V.slice()), (z[U] = j));
        }
      return z;
    }
    function ee(V, q, X) {
      if (q.assuming) {
        for (var z in q.assuming)
          for (var U in q.assuming[z])
            if (_(z, U, X) !== q.assuming[z][U]) return V;
      }
      var j = L(q.imposeContext, X),
        H = V;
      if (H instanceof A || H instanceof x) {
        var ae = oe(H.args, q, X);
        ae !== H.args && ((H = H.clone()), (H.args = ae));
      } else if (H instanceof S) {
        if (H.content) {
          var ue = ee(H.content, q, X);
          ue !== H.content && (H = new S(ue));
        }
      } else if (H instanceof w) {
        var ve = oe(H.items, q, X);
        ve !== H.items && (H = new w(ve));
      } else if (H instanceof g) {
        var fe = H.object;
        H.object && (fe = ee(H.object, q, X));
        var pe = H.index;
        H.index && (pe = ee(H.index, q, X)),
          (fe !== H.object || pe !== H.index) && (H = new g(fe, pe));
      } else if (H instanceof b) {
        var we = oe(H.dimensions, q, X);
        we !== H.dimensions && (H = new b(we));
      } else if (H instanceof y) {
        var Ge = !1,
          ir = {};
        for (var Je in H.properties)
          (ir[Je] = ee(H.properties[Je], q, X)),
            ir[Je] !== H.properties[Je] && (Ge = !0);
        Ge && (H = new y(ir));
      }
      var at = q.r,
        Qr = k(q.l, H, j)[0];
      if (
        (!Qr &&
          q.expanded &&
          ((at = q.expanded.r), (Qr = k(q.expanded.l, H, j)[0])),
        Qr)
      ) {
        var Ft = H.implicit;
        (H = at.clone()),
          Ft && "implicit" in at && (H.implicit = !0),
          (H = H.transform(function (qe) {
            return qe.isSymbolNode && ge(Qr.placeholders, qe.name)
              ? Qr.placeholders[qe.name].clone()
              : qe;
          }));
      }
      return q.repeat && H !== V && (H = ee(H, q, X)), H;
    }
    function de(V, q) {
      var X = [],
        z,
        U,
        j = R(V);
      if (C(V, q))
        for (var H = 0; H < V.args.length; H++)
          (U = V.args.slice(0)),
            U.splice(H, 1),
            (z = U.length === 1 ? U[0] : j(U)),
            X.push(j([V.args[H], z]));
      else
        for (var ae = 1; ae < V.args.length; ae++) {
          var ue = V.args[0];
          ae > 1 && (ue = j(V.args.slice(0, ae))),
            (U = V.args.slice(ae)),
            (z = U.length === 1 ? U[0] : j(U)),
            X.push(j([ue, z]));
        }
      return X;
    }
    function xe(V, q) {
      var X = { placeholders: {} };
      if (!V.placeholders && !q.placeholders) return X;
      if (V.placeholders) {
        if (!q.placeholders) return V;
      } else return q;
      for (var z in V.placeholders)
        if (
          ge(V.placeholders, z) &&
          ((X.placeholders[z] = V.placeholders[z]),
          ge(q.placeholders, z) && !Q(V.placeholders[z], q.placeholders[z]))
        )
          return null;
      for (var U in q.placeholders)
        ge(q.placeholders, U) && (X.placeholders[U] = q.placeholders[U]);
      return X;
    }
    function ce(V, q) {
      var X = [];
      if (V.length === 0 || q.length === 0) return X;
      for (var z, U = 0; U < V.length; U++)
        for (var j = 0; j < q.length; j++) (z = xe(V[U], q[j])), z && X.push(z);
      return X;
    }
    function he(V) {
      if (V.length === 0) return V;
      for (var q = V.reduce(ce), X = [], z = {}, U = 0; U < q.length; U++) {
        var j = JSON.stringify(q[U]);
        z[j] || ((z[j] = !0), X.push(q[U]));
      }
      return X;
    }
    function k(V, q, X, z) {
      var U = [{ placeholders: {} }];
      if (
        (V instanceof A && q instanceof A) ||
        (V instanceof x && q instanceof x)
      ) {
        if (V instanceof A) {
          if (V.op !== q.op || V.fn !== q.fn) return [];
        } else if (V instanceof x && V.name !== q.name) return [];
        if (
          (q.args.length === 1 && V.args.length === 1) ||
          (!I(q, X) && q.args.length === V.args.length) ||
          z
        ) {
          for (var j = [], H = 0; H < V.args.length; H++) {
            var ae = k(V.args[H], q.args[H], X);
            if (ae.length === 0) break;
            j.push(ae);
          }
          if (j.length !== V.args.length) {
            if (!C(q, X) || V.args.length === 1) return [];
            if (V.args.length > 2)
              throw new Error(
                "permuting >2 commutative non-associative rule arguments not yet implemented"
              );
            var ue = k(V.args[0], q.args[1], X);
            if (ue.length === 0) return [];
            var ve = k(V.args[1], q.args[0], X);
            if (ve.length === 0) return [];
            j = [ue, ve];
          }
          U = he(j);
        } else if (q.args.length >= 2 && V.args.length === 2) {
          for (var fe = de(q, X), pe = [], we = 0; we < fe.length; we++) {
            var Ge = k(V, fe[we], X, !0);
            pe = pe.concat(Ge);
          }
          return pe;
        } else {
          if (V.args.length > 2)
            throw Error(
              "Unexpected non-binary associative function: " + V.toString()
            );
          return [];
        }
      } else if (V instanceof E) {
        if (V.name.length === 0)
          throw new Error("Symbol in rule has 0 length...!?");
        if (Y[V.name]) {
          if (V.name !== q.name) return [];
        } else if (V.name[0] === "n" || V.name.substring(0, 2) === "_p")
          U[0].placeholders[V.name] = q;
        else if (V.name[0] === "v")
          if (!Ve(q)) U[0].placeholders[V.name] = q;
          else return [];
        else if (V.name[0] === "c")
          if (q instanceof h) U[0].placeholders[V.name] = q;
          else return [];
        else throw new Error("Invalid symbol in rule: " + V.name);
      } else if (V instanceof h) {
        if (!u(V.value, q.value)) return [];
      } else return [];
      return U;
    }
    function Q(V, q) {
      if (V instanceof h && q instanceof h) {
        if (!u(V.value, q.value)) return !1;
      } else if (V instanceof E && q instanceof E) {
        if (V.name !== q.name) return !1;
      } else if (
        (V instanceof A && q instanceof A) ||
        (V instanceof x && q instanceof x)
      ) {
        if (V instanceof A) {
          if (V.op !== q.op || V.fn !== q.fn) return !1;
        } else if (V instanceof x && V.name !== q.name) return !1;
        if (V.args.length !== q.args.length) return !1;
        for (var X = 0; X < V.args.length; X++)
          if (!Q(V.args[X], q.args[X])) return !1;
      } else return !1;
      return !0;
    }
    return J;
  }),
  wz = "simplifyCore",
  bz = [
    "equal",
    "isZero",
    "add",
    "subtract",
    "multiply",
    "divide",
    "pow",
    "AccessorNode",
    "ArrayNode",
    "ConstantNode",
    "FunctionNode",
    "IndexNode",
    "ObjectNode",
    "OperatorNode",
    "ParenthesisNode",
    "SymbolNode",
  ],
  Nz = F(wz, bz, (e) => {
    var {
        equal: r,
        isZero: t,
        add: n,
        subtract: i,
        multiply: a,
        divide: s,
        pow: f,
        AccessorNode: l,
        ArrayNode: p,
        ConstantNode: u,
        FunctionNode: o,
        IndexNode: c,
        ObjectNode: m,
        OperatorNode: v,
        ParenthesisNode: d,
        SymbolNode: N,
      } = e,
      g = new u(0),
      w = new u(1),
      { hasProperty: h, isCommutative: x } = Kc({
        FunctionNode: o,
        OperatorNode: v,
        SymbolNode: N,
      });
    function b(y, A) {
      var S = A ? A.context : void 0;
      if (h(y, "trivial", S)) {
        if (An(y) && y.args.length === 1) return b(y.args[0], A);
        var E = !1,
          M = 0;
        if (
          (y.forEach((T) => {
            ++M, M === 1 && (E = b(T, A));
          }),
          M === 1)
        )
          return E;
      }
      if (Ir(y) && y.isUnary()) {
        var _ = b(y.args[0], A);
        if (y.op === "-") {
          if (Ir(_)) {
            if (_.isUnary() && _.op === "-") return _.args[0];
            if (_.isBinary() && _.fn === "subtract")
              return new v("-", "subtract", [_.args[1], _.args[0]]);
          }
          return new v(y.op, y.fn, [_]);
        }
      } else if (Ir(y) && y.isBinary()) {
        var C = b(y.args[0], A),
          I = b(y.args[1], A);
        if (y.op === "+") {
          if (Ve(C)) {
            if (t(C.value)) return I;
            if (Ve(I)) return new u(n(C.value, I.value));
          }
          return Ve(I) && t(I.value)
            ? C
            : Ir(I) && I.isUnary() && I.op === "-"
            ? new v("-", "subtract", [C, I.args[0]])
            : new v(y.op, y.fn, I ? [C, I] : [C]);
        } else if (y.op === "-") {
          if (Ve(C) && I) {
            if (Ve(I)) return new u(i(C.value, I.value));
            if (t(C.value)) return new v("-", "unaryMinus", [I]);
          }
          if (y.fn === "subtract")
            return Ve(I) && t(I.value)
              ? C
              : Ir(I) && I.isUnary() && I.op === "-"
              ? b(new v("+", "add", [C, I.args[0]]), A)
              : new v(y.op, y.fn, [C, I]);
        } else if (y.op === "*") {
          if (Ve(C)) {
            if (t(C.value)) return g;
            if (r(C.value, 1)) return I;
            if (Ve(I)) return new u(a(C.value, I.value));
          }
          if (Ve(I)) {
            if (t(I.value)) return g;
            if (r(I.value, 1)) return C;
            if (Ir(C) && C.isBinary() && C.op === y.op && x(y, S)) {
              var L = C.args[0];
              if (Ve(L)) {
                var $ = new u(a(L.value, I.value));
                return new v(y.op, y.fn, [$, C.args[1]], y.implicit);
              }
            }
            return x(y, S)
              ? new v(y.op, y.fn, [I, C], y.implicit)
              : new v(y.op, y.fn, [C, I], y.implicit);
          }
          return new v(y.op, y.fn, [C, I], y.implicit);
        } else if (y.op === "/") {
          if (Ve(C)) {
            if (t(C.value)) return g;
            if (Ve(I) && (r(I.value, 1) || r(I.value, 2) || r(I.value, 4)))
              return new u(s(C.value, I.value));
          }
          return new v(y.op, y.fn, [C, I]);
        } else if (y.op === "^" && Ve(I)) {
          if (t(I.value)) return w;
          if (r(I.value, 1)) return C;
          if (Ve(C)) return new u(f(C.value, I.value));
          if (Ir(C) && C.isBinary() && C.op === "^") {
            var D = C.args[1];
            if (Ve(D))
              return new v(y.op, y.fn, [C.args[0], new u(a(D.value, I.value))]);
          }
        }
        return new v(y.op, y.fn, [C, I]);
      } else {
        if (An(y))
          return new o(
            b(y.fn),
            y.args.map((T) => b(T, A))
          );
        if (Xr(y)) return new p(y.items.map((T) => b(T, A)));
        if (Sn(y)) return new l(b(y.object, A), b(y.index, A));
        if (Kn(y)) return new c(y.dimensions.map((T) => b(T, A)));
        if (eo(y)) {
          var B = {};
          for (var R in y.properties) B[R] = b(y.properties[R], A);
          return new m(B);
        }
      }
      return y;
    }
    return b;
  }),
  Mz = "resolve",
  Sz = [
    "parse",
    "ConstantNode",
    "FunctionNode",
    "OperatorNode",
    "ParenthesisNode",
  ],
  Az = F(Mz, Sz, (e) => {
    var {
      parse: r,
      ConstantNode: t,
      FunctionNode: n,
      OperatorNode: i,
      ParenthesisNode: a,
    } = e;
    function s(f, l) {
      var p =
        arguments.length > 2 && arguments[2] !== void 0
          ? arguments[2]
          : new Set();
      if (!l) return f;
      if ((qs(l) || (l = Hc(l)), gr(f))) {
        if (p.has(f.name)) {
          var u = Array.from(p).join(", ");
          throw new ReferenceError(
            "recursive loop of variable definitions among {".concat(u, "}")
          );
        }
        var o = l.get(f.name);
        if (Le(o)) {
          var c = new Set(p);
          return c.add(f.name), s(o, l, c);
        } else
          return typeof o == "number"
            ? r(String(o))
            : o !== void 0
            ? new t(o)
            : f;
      } else if (Ir(f)) {
        var m = f.args.map(function (d) {
          return s(d, l, p);
        });
        return new i(f.op, f.fn, m, f.implicit);
      } else {
        if (Yi(f)) return new a(s(f.content, l, p));
        if (An(f)) {
          var v = f.args.map(function (d) {
            return s(d, l, p);
          });
          return new n(f.name, v);
        }
      }
      return f.map((d) => s(d, l, p));
    }
    return s;
  }),
  yh = "symbolicEqual",
  Ez = ["parse", "simplify", "typed", "OperatorNode"],
  Cz = F(yh, Ez, (e) => {
    var { parse: r, simplify: t, typed: n, OperatorNode: i } = e;
    return n(yh, {
      "string, string": function (s, f) {
        return this(r(s), r(f), {});
      },
      "string, string, Object": function (s, f, l) {
        return this(r(s), r(f), l);
      },
      "Node, string": function (s, f) {
        return this(s, r(f), {});
      },
      "Node, string, Object": function (s, f, l) {
        return this(s, r(f), l);
      },
      "string, Node": function (s, f) {
        return this(r(s), f, {});
      },
      "string, Node, Object": function (s, f, l) {
        return this(r(s), f, l);
      },
      "Node, Node": function (s, f) {
        return this(s, f, {});
      },
      "Node, Node, Object": function (s, f, l) {
        var p = new i("-", "subtract", [s, f]),
          u = t(p, {}, l);
        return Ve(u) && !u.value;
      },
    });
  }),
  Oz = "derivative",
  Tz = [
    "typed",
    "config",
    "parse",
    "simplify",
    "equal",
    "isZero",
    "numeric",
    "ConstantNode",
    "FunctionNode",
    "OperatorNode",
    "ParenthesisNode",
    "SymbolNode",
  ],
  Dz = F(Oz, Tz, (e) => {
    var {
        typed: r,
        config: t,
        parse: n,
        simplify: i,
        equal: a,
        isZero: s,
        numeric: f,
        ConstantNode: l,
        FunctionNode: p,
        OperatorNode: u,
        ParenthesisNode: o,
        SymbolNode: c,
      } = e,
      m = r("derivative", {
        "Node, SymbolNode, Object": function (x, b, y) {
          var A = {};
          d(A, x, b.name);
          var S = N(x, A);
          return y.simplify ? i(S) : S;
        },
        "Node, SymbolNode": function (x, b) {
          return this(x, b, { simplify: !0 });
        },
        "string, SymbolNode": function (x, b) {
          return this(n(x), b);
        },
        "string, SymbolNode, Object": function (x, b, y) {
          return this(n(x), b, y);
        },
        "string, string": function (x, b) {
          return this(n(x), n(b));
        },
        "string, string, Object": function (x, b, y) {
          return this(n(x), n(b), y);
        },
        "Node, string": function (x, b) {
          return this(x, n(b));
        },
        "Node, string, Object": function (x, b, y) {
          return this(x, n(b), y);
        },
      });
    (m._simplify = !0),
      (m.toTex = function (h) {
        return v.apply(null, h.args);
      });
    var v = r("_derivTex", {
        "Node, SymbolNode": function (x, b) {
          return Ve(x) && Ye(x.value) === "string"
            ? v(n(x.value).toString(), b.toString(), 1)
            : v(x.toTex(), b.toString(), 1);
        },
        "Node, ConstantNode": function (x, b) {
          if (Ye(b.value) === "string") return v(x, n(b.value));
          throw new Error(
            "The second parameter to 'derivative' is a non-string constant"
          );
        },
        "Node, SymbolNode, ConstantNode": function (x, b, y) {
          return v(x.toString(), b.name, y.value);
        },
        "string, string, number": function (x, b, y) {
          var A;
          return (
            y === 1
              ? (A = "{d\\over d" + b + "}")
              : (A = "{d^{" + y + "}\\over d" + b + "^{" + y + "}}"),
            A + "\\left[".concat(x, "\\right]")
          );
        },
      }),
      d = r("constTag", {
        "Object, ConstantNode, string": function (x, b) {
          return (x[b] = !0), !0;
        },
        "Object, SymbolNode, string": function (x, b, y) {
          return b.name !== y ? ((x[b] = !0), !0) : !1;
        },
        "Object, ParenthesisNode, string": function (x, b, y) {
          return d(x, b.content, y);
        },
        "Object, FunctionAssignmentNode, string": function (x, b, y) {
          return b.params.indexOf(y) === -1
            ? ((x[b] = !0), !0)
            : d(x, b.expr, y);
        },
        "Object, FunctionNode | OperatorNode, string": function (x, b, y) {
          if (b.args.length > 0) {
            for (var A = d(x, b.args[0], y), S = 1; S < b.args.length; ++S)
              A = d(x, b.args[S], y) && A;
            if (A) return (x[b] = !0), !0;
          }
          return !1;
        },
      }),
      N = r("_derivative", {
        "ConstantNode, Object": function (x) {
          return w(0);
        },
        "SymbolNode, Object": function (x, b) {
          return b[x] !== void 0 ? w(0) : w(1);
        },
        "ParenthesisNode, Object": function (x, b) {
          return new o(N(x.content, b));
        },
        "FunctionAssignmentNode, Object": function (x, b) {
          return b[x] !== void 0 ? w(0) : N(x.expr, b);
        },
        "FunctionNode, Object": function (x, b) {
          if ((x.args.length !== 1 && g(x), b[x] !== void 0)) return w(0);
          var y = x.args[0],
            A,
            S = !1,
            E = !1,
            M;
          switch (x.name) {
            case "cbrt":
              (S = !0),
                (M = new u("*", "multiply", [
                  w(3),
                  new u("^", "pow", [y, new u("/", "divide", [w(2), w(3)])]),
                ]));
              break;
            case "sqrt":
            case "nthRoot":
              if (x.args.length === 1)
                (S = !0),
                  (M = new u("*", "multiply", [w(2), new p("sqrt", [y])]));
              else if (x.args.length === 2)
                return (
                  (A = new u("/", "divide", [w(1), x.args[1]])),
                  (b[A] = b[x.args[1]]),
                  N(new u("^", "pow", [y, A]), b)
                );
              break;
            case "log10":
              A = w(10);
            case "log":
              if (!A && x.args.length === 1) (M = y.clone()), (S = !0);
              else if (
                (x.args.length === 1 && A) ||
                (x.args.length === 2 && b[x.args[1]] !== void 0)
              )
                (M = new u("*", "multiply", [
                  y.clone(),
                  new p("log", [A || x.args[1]]),
                ])),
                  (S = !0);
              else if (x.args.length === 2)
                return N(
                  new u("/", "divide", [
                    new p("log", [y]),
                    new p("log", [x.args[1]]),
                  ]),
                  b
                );
              break;
            case "pow":
              return (
                (b[A] = b[x.args[1]]), N(new u("^", "pow", [y, x.args[1]]), b)
              );
            case "exp":
              M = new p("exp", [y.clone()]);
              break;
            case "sin":
              M = new p("cos", [y.clone()]);
              break;
            case "cos":
              M = new u("-", "unaryMinus", [new p("sin", [y.clone()])]);
              break;
            case "tan":
              M = new u("^", "pow", [new p("sec", [y.clone()]), w(2)]);
              break;
            case "sec":
              M = new u("*", "multiply", [x, new p("tan", [y.clone()])]);
              break;
            case "csc":
              (E = !0),
                (M = new u("*", "multiply", [x, new p("cot", [y.clone()])]));
              break;
            case "cot":
              (E = !0),
                (M = new u("^", "pow", [new p("csc", [y.clone()]), w(2)]));
              break;
            case "asin":
              (S = !0),
                (M = new p("sqrt", [
                  new u("-", "subtract", [
                    w(1),
                    new u("^", "pow", [y.clone(), w(2)]),
                  ]),
                ]));
              break;
            case "acos":
              (S = !0),
                (E = !0),
                (M = new p("sqrt", [
                  new u("-", "subtract", [
                    w(1),
                    new u("^", "pow", [y.clone(), w(2)]),
                  ]),
                ]));
              break;
            case "atan":
              (S = !0),
                (M = new u("+", "add", [
                  new u("^", "pow", [y.clone(), w(2)]),
                  w(1),
                ]));
              break;
            case "asec":
              (S = !0),
                (M = new u("*", "multiply", [
                  new p("abs", [y.clone()]),
                  new p("sqrt", [
                    new u("-", "subtract", [
                      new u("^", "pow", [y.clone(), w(2)]),
                      w(1),
                    ]),
                  ]),
                ]));
              break;
            case "acsc":
              (S = !0),
                (E = !0),
                (M = new u("*", "multiply", [
                  new p("abs", [y.clone()]),
                  new p("sqrt", [
                    new u("-", "subtract", [
                      new u("^", "pow", [y.clone(), w(2)]),
                      w(1),
                    ]),
                  ]),
                ]));
              break;
            case "acot":
              (S = !0),
                (E = !0),
                (M = new u("+", "add", [
                  new u("^", "pow", [y.clone(), w(2)]),
                  w(1),
                ]));
              break;
            case "sinh":
              M = new p("cosh", [y.clone()]);
              break;
            case "cosh":
              M = new p("sinh", [y.clone()]);
              break;
            case "tanh":
              M = new u("^", "pow", [new p("sech", [y.clone()]), w(2)]);
              break;
            case "sech":
              (E = !0),
                (M = new u("*", "multiply", [x, new p("tanh", [y.clone()])]));
              break;
            case "csch":
              (E = !0),
                (M = new u("*", "multiply", [x, new p("coth", [y.clone()])]));
              break;
            case "coth":
              (E = !0),
                (M = new u("^", "pow", [new p("csch", [y.clone()]), w(2)]));
              break;
            case "asinh":
              (S = !0),
                (M = new p("sqrt", [
                  new u("+", "add", [
                    new u("^", "pow", [y.clone(), w(2)]),
                    w(1),
                  ]),
                ]));
              break;
            case "acosh":
              (S = !0),
                (M = new p("sqrt", [
                  new u("-", "subtract", [
                    new u("^", "pow", [y.clone(), w(2)]),
                    w(1),
                  ]),
                ]));
              break;
            case "atanh":
              (S = !0),
                (M = new u("-", "subtract", [
                  w(1),
                  new u("^", "pow", [y.clone(), w(2)]),
                ]));
              break;
            case "asech":
              (S = !0),
                (E = !0),
                (M = new u("*", "multiply", [
                  y.clone(),
                  new p("sqrt", [
                    new u("-", "subtract", [
                      w(1),
                      new u("^", "pow", [y.clone(), w(2)]),
                    ]),
                  ]),
                ]));
              break;
            case "acsch":
              (S = !0),
                (E = !0),
                (M = new u("*", "multiply", [
                  new p("abs", [y.clone()]),
                  new p("sqrt", [
                    new u("+", "add", [
                      new u("^", "pow", [y.clone(), w(2)]),
                      w(1),
                    ]),
                  ]),
                ]));
              break;
            case "acoth":
              (S = !0),
                (E = !0),
                (M = new u("-", "subtract", [
                  w(1),
                  new u("^", "pow", [y.clone(), w(2)]),
                ]));
              break;
            case "abs":
              M = new u("/", "divide", [
                new p(new c("abs"), [y.clone()]),
                y.clone(),
              ]);
              break;
            case "gamma":
            default:
              throw new Error(
                'Function "' +
                  x.name +
                  '" is not supported by derivative, or a wrong number of arguments is passed'
              );
          }
          var _, C;
          S ? ((_ = "/"), (C = "divide")) : ((_ = "*"), (C = "multiply"));
          var I = N(y, b);
          return E && (I = new u("-", "unaryMinus", [I])), new u(_, C, [I, M]);
        },
        "OperatorNode, Object": function (x, b) {
          if (b[x] !== void 0) return w(0);
          if (x.op === "+")
            return new u(
              x.op,
              x.fn,
              x.args.map(function ($) {
                return N($, b);
              })
            );
          if (x.op === "-") {
            if (x.isUnary()) return new u(x.op, x.fn, [N(x.args[0], b)]);
            if (x.isBinary())
              return new u(x.op, x.fn, [N(x.args[0], b), N(x.args[1], b)]);
          }
          if (x.op === "*") {
            var y = x.args.filter(function ($) {
              return b[$] !== void 0;
            });
            if (y.length > 0) {
              var A = x.args.filter(function ($) {
                  return b[$] === void 0;
                }),
                S = A.length === 1 ? A[0] : new u("*", "multiply", A),
                E = y.concat(N(S, b));
              return new u("*", "multiply", E);
            }
            return new u(
              "+",
              "add",
              x.args.map(function ($) {
                return new u(
                  "*",
                  "multiply",
                  x.args.map(function (D) {
                    return D === $ ? N(D, b) : D.clone();
                  })
                );
              })
            );
          }
          if (x.op === "/" && x.isBinary()) {
            var M = x.args[0],
              _ = x.args[1];
            return b[_] !== void 0
              ? new u("/", "divide", [N(M, b), _])
              : b[M] !== void 0
              ? new u("*", "multiply", [
                  new u("-", "unaryMinus", [M]),
                  new u("/", "divide", [
                    N(_, b),
                    new u("^", "pow", [_.clone(), w(2)]),
                  ]),
                ])
              : new u("/", "divide", [
                  new u("-", "subtract", [
                    new u("*", "multiply", [N(M, b), _.clone()]),
                    new u("*", "multiply", [M.clone(), N(_, b)]),
                  ]),
                  new u("^", "pow", [_.clone(), w(2)]),
                ]);
          }
          if (x.op === "^" && x.isBinary()) {
            var C = x.args[0],
              I = x.args[1];
            if (b[C] !== void 0)
              return Ve(C) && (s(C.value) || a(C.value, 1))
                ? w(0)
                : new u("*", "multiply", [
                    x,
                    new u("*", "multiply", [
                      new p("log", [C.clone()]),
                      N(I.clone(), b),
                    ]),
                  ]);
            if (b[I] !== void 0) {
              if (Ve(I)) {
                if (s(I.value)) return w(0);
                if (a(I.value, 1)) return N(C, b);
              }
              var L = new u("^", "pow", [
                C.clone(),
                new u("-", "subtract", [I, w(1)]),
              ]);
              return new u("*", "multiply", [
                I.clone(),
                new u("*", "multiply", [N(C, b), L]),
              ]);
            }
            return new u("*", "multiply", [
              new u("^", "pow", [C.clone(), I.clone()]),
              new u("+", "add", [
                new u("*", "multiply", [
                  N(C, b),
                  new u("/", "divide", [I.clone(), C.clone()]),
                ]),
                new u("*", "multiply", [N(I, b), new p("log", [C.clone()])]),
              ]),
            ]);
          }
          throw new Error(
            'Operator "' +
              x.op +
              '" is not supported by derivative, or a wrong number of arguments is passed'
          );
        },
      });
    function g(h) {
      if (
        !(
          (h.name === "log" || h.name === "nthRoot" || h.name === "pow") &&
          h.args.length === 2
        )
      ) {
        for (var x = 0; x < h.args.length; ++x) h.args[x] = w(0);
        throw (
          (h.compile().evaluate(),
          new Error("Expected TypeError, but none found"))
        );
      }
    }
    function w(h, x) {
      return new l(f(h, x || t.number));
    }
    return m;
  }),
  xh = "rationalize",
  _z = [
    "config",
    "typed",
    "equal",
    "isZero",
    "add",
    "subtract",
    "multiply",
    "divide",
    "pow",
    "parse",
    "simplifyCore",
    "simplify",
    "?bignumber",
    "?fraction",
    "mathWithTransform",
    "matrix",
    "AccessorNode",
    "ArrayNode",
    "ConstantNode",
    "FunctionNode",
    "IndexNode",
    "ObjectNode",
    "OperatorNode",
    "SymbolNode",
    "ParenthesisNode",
  ],
  Bz = F(xh, _z, (e) => {
    var {
        config: r,
        typed: t,
        equal: n,
        isZero: i,
        add: a,
        subtract: s,
        multiply: f,
        divide: l,
        pow: p,
        parse: u,
        simplifyCore: o,
        simplify: c,
        fraction: m,
        bignumber: v,
        mathWithTransform: d,
        matrix: N,
        AccessorNode: g,
        ArrayNode: w,
        ConstantNode: h,
        FunctionNode: x,
        IndexNode: b,
        ObjectNode: y,
        OperatorNode: A,
        SymbolNode: S,
        ParenthesisNode: E,
      } = e,
      M = J1({
        typed: t,
        config: r,
        mathWithTransform: d,
        matrix: N,
        fraction: m,
        bignumber: v,
        AccessorNode: g,
        ArrayNode: w,
        ConstantNode: h,
        FunctionNode: x,
        IndexNode: b,
        ObjectNode: y,
        OperatorNode: A,
        SymbolNode: S,
      });
    return t(xh, {
      string: function (D) {
        return this(u(D), {}, !1);
      },
      "string, boolean": function (D, B) {
        return this(u(D), {}, B);
      },
      "string, Object": function (D, B) {
        return this(u(D), B, !1);
      },
      "string, Object, boolean": function (D, B, R) {
        return this(u(D), B, R);
      },
      Node: function (D) {
        return this(D, {}, !1);
      },
      "Node, boolean": function (D, B) {
        return this(D, {}, B);
      },
      "Node, Object": function (D, B) {
        return this(D, B, !1);
      },
      "Node, Object, boolean": function (D, B, R) {
        var T = C(),
          P = _(D, B, !0, T.firstRules),
          W = P.variables.length,
          J = { exactFractions: !1 },
          G = { exactFractions: !0 };
        if (((D = P.expression), W >= 1)) {
          D = I(D);
          var Y,
            re,
            K = !0,
            ie = !1;
          D = c(D, T.firstRules, {}, J);
          for (
            var te;
            (re = K ? T.distrDivRules : T.sucDivRules),
              (D = c(D, re, {}, G)),
              (K = !K),
              (te = D.toString()),
              te !== Y;

          )
            (ie = !0), (Y = te);
          ie && (D = c(D, T.firstRulesAgain, {}, J)),
            (D = c(D, T.finalRules, {}, J));
        }
        var oe = [],
          ee = {};
        return (
          D.type === "OperatorNode" && D.isBinary() && D.op === "/"
            ? (W === 1 &&
                ((D.args[0] = L(D.args[0], oe)), (D.args[1] = L(D.args[1]))),
              R && ((ee.numerator = D.args[0]), (ee.denominator = D.args[1])))
            : (W === 1 && (D = L(D, oe)),
              R && ((ee.numerator = D), (ee.denominator = null))),
          R
            ? ((ee.coefficients = oe),
              (ee.variables = P.variables),
              (ee.expression = D),
              ee)
            : D
        );
      },
    });
    function _($, D, B, R) {
      var T = [],
        P = c($, R, D, { exactFractions: !1 });
      B = !!B;
      var W = "+-*" + (B ? "/" : "");
      G(P);
      var J = {};
      return (J.expression = P), (J.variables = T), J;
      function G(Y) {
        var re = Y.type;
        if (re === "FunctionNode")
          throw new Error("There is an unsolved function call");
        if (re === "OperatorNode")
          if (Y.op === "^") {
            if (
              Y.args[1].type !== "ConstantNode" ||
              !Ne(parseFloat(Y.args[1].value))
            )
              throw new Error("There is a non-integer exponent");
            G(Y.args[0]);
          } else {
            if (W.indexOf(Y.op) === -1)
              throw new Error(
                "Operator " + Y.op + " invalid in polynomial expression"
              );
            for (var K = 0; K < Y.args.length; K++) G(Y.args[K]);
          }
        else if (re === "SymbolNode") {
          var ie = Y.name,
            te = T.indexOf(ie);
          te === -1 && T.push(ie);
        } else if (re === "ParenthesisNode") G(Y.content);
        else if (re !== "ConstantNode")
          throw new Error(
            "type " + re + " is not allowed in polynomial expression"
          );
      }
    }
    function C() {
      var $ = [
          o,
          { l: "n+n", r: "2*n" },
          { l: "n+-n", r: "0" },
          M,
          { l: "n*(n1^-1)", r: "n/n1" },
          { l: "n*n1^-n2", r: "n/n1^n2" },
          { l: "n1^-1", r: "1/n1" },
          { l: "n*(n1/n2)", r: "(n*n1)/n2" },
          { l: "1*n", r: "n" },
        ],
        D = [
          { l: "(-n1)/(-n2)", r: "n1/n2" },
          { l: "(-n1)*(-n2)", r: "n1*n2" },
          { l: "n1--n2", r: "n1+n2" },
          { l: "n1-n2", r: "n1+(-n2)" },
          { l: "(n1+n2)*n3", r: "(n1*n3 + n2*n3)" },
          { l: "n1*(n2+n3)", r: "(n1*n2+n1*n3)" },
          { l: "c1*n + c2*n", r: "(c1+c2)*n" },
          { l: "c1*n + n", r: "(c1+1)*n" },
          { l: "c1*n - c2*n", r: "(c1-c2)*n" },
          { l: "c1*n - n", r: "(c1-1)*n" },
          { l: "v/c", r: "(1/c)*v" },
          { l: "v/-c", r: "-(1/c)*v" },
          { l: "-v*-c", r: "c*v" },
          { l: "-v*c", r: "-c*v" },
          { l: "v*-c", r: "-c*v" },
          { l: "v*c", r: "c*v" },
          { l: "-(-n1*n2)", r: "(n1*n2)" },
          { l: "-(n1*n2)", r: "(-n1*n2)" },
          { l: "-(-n1+n2)", r: "(n1-n2)" },
          { l: "-(n1+n2)", r: "(-n1-n2)" },
          { l: "(n1^n2)^n3", r: "(n1^(n2*n3))" },
          { l: "-(-n1/n2)", r: "(n1/n2)" },
          { l: "-(n1/n2)", r: "(-n1/n2)" },
        ],
        B = [
          { l: "(n1/n2 + n3/n4)", r: "((n1*n4 + n3*n2)/(n2*n4))" },
          { l: "(n1/n2 + n3)", r: "((n1 + n3*n2)/n2)" },
          { l: "(n1 + n2/n3)", r: "((n1*n3 + n2)/n3)" },
        ],
        R = [
          { l: "(n1/(n2/n3))", r: "((n1*n3)/n2)" },
          { l: "(n1/n2/n3)", r: "(n1/(n2*n3))" },
        ],
        T = {};
      return (
        (T.firstRules = $.concat(D, R)),
        (T.distrDivRules = B),
        (T.sucDivRules = R),
        (T.firstRulesAgain = $.concat(D)),
        (T.finalRules = [
          o,
          { l: "n*-n", r: "-n^2" },
          { l: "n*n", r: "n^2" },
          M,
          { l: "n*-n^n1", r: "-n^(n1+1)" },
          { l: "n*n^n1", r: "n^(n1+1)" },
          { l: "n^n1*-n^n2", r: "-n^(n1+n2)" },
          { l: "n^n1*n^n2", r: "n^(n1+n2)" },
          { l: "n^n1*-n", r: "-n^(n1+1)" },
          { l: "n^n1*n", r: "n^(n1+1)" },
          { l: "n^n1/-n", r: "-n^(n1-1)" },
          { l: "n^n1/n", r: "n^(n1-1)" },
          { l: "n/-n^n1", r: "-n^(1-n1)" },
          { l: "n/n^n1", r: "n^(1-n1)" },
          { l: "n^n1/-n^n2", r: "n^(n1-n2)" },
          { l: "n^n1/n^n2", r: "n^(n1-n2)" },
          { l: "n1+(-n2*n3)", r: "n1-n2*n3" },
          { l: "v*(-c)", r: "-c*v" },
          { l: "n1+-n2", r: "n1-n2" },
          { l: "v*c", r: "c*v" },
          { l: "(n1^n2)^n3", r: "(n1^(n2*n3))" },
        ]),
        T
      );
    }
    function I($, D, B) {
      var R = $.type,
        T = arguments.length > 1;
      if (R === "OperatorNode" && $.isBinary()) {
        var P = !1,
          W;
        if (
          ($.op === "^" &&
            ($.args[0].type === "ParenthesisNode" ||
              $.args[0].type === "OperatorNode") &&
            $.args[1].type === "ConstantNode" &&
            ((W = parseFloat($.args[1].value)), (P = W >= 2 && Ne(W))),
          P)
        ) {
          if (W > 2) {
            var J = $.args[0],
              G = new A("^", "pow", [$.args[0].cloneDeep(), new h(W - 1)]);
            $ = new A("*", "multiply", [J, G]);
          } else $ = new A("*", "multiply", [$.args[0], $.args[0].cloneDeep()]);
          T && (B === "content" ? (D.content = $) : (D.args[B] = $));
        }
      }
      if (R === "ParenthesisNode") I($.content, $, "content");
      else if (R !== "ConstantNode" && R !== "SymbolNode")
        for (var Y = 0; Y < $.args.length; Y++) I($.args[Y], $, Y);
      if (!T) return $;
    }
    function L($, D) {
      D === void 0 && (D = []), (D[0] = 0);
      var B = {};
      (B.cte = 1), (B.oper = "+"), (B.fire = "");
      var R = 0,
        T = "";
      ie($, null, B), (R = D.length - 1);
      for (var P = !0, W, J = R; J >= 0; J--)
        if (D[J] !== 0) {
          var G = new h(P ? D[J] : Math.abs(D[J])),
            Y = D[J] < 0 ? "-" : "+";
          if (J > 0) {
            var re = new S(T);
            if (J > 1) {
              var K = new h(J);
              re = new A("^", "pow", [re, K]);
            }
            D[J] === -1 && P
              ? (G = new A("-", "unaryMinus", [re]))
              : Math.abs(D[J]) === 1
              ? (G = re)
              : (G = new A("*", "multiply", [G, re]));
          }
          P
            ? (W = G)
            : Y === "+"
            ? (W = new A("+", "add", [W, G]))
            : (W = new A("-", "subtract", [W, G])),
            (P = !1);
        }
      if (P) return new h(0);
      return W;
      function ie(te, oe, ee) {
        var de = te.type;
        if (de === "FunctionNode")
          throw new Error("There is an unsolved function call");
        if (de === "OperatorNode") {
          if ("+-*^".indexOf(te.op) === -1)
            throw new Error("Operator " + te.op + " invalid");
          if (oe !== null) {
            if (
              (te.fn === "unaryMinus" || te.fn === "pow") &&
              oe.fn !== "add" &&
              oe.fn !== "subtract" &&
              oe.fn !== "multiply"
            )
              throw new Error("Invalid " + te.op + " placing");
            if (
              (te.fn === "subtract" ||
                te.fn === "add" ||
                te.fn === "multiply") &&
              oe.fn !== "add" &&
              oe.fn !== "subtract"
            )
              throw new Error("Invalid " + te.op + " placing");
            if (
              (te.fn === "subtract" ||
                te.fn === "add" ||
                te.fn === "unaryMinus") &&
              ee.noFil !== 0
            )
              throw new Error("Invalid " + te.op + " placing");
          }
          (te.op === "^" || te.op === "*") && (ee.fire = te.op);
          for (var xe = 0; xe < te.args.length; xe++)
            te.fn === "unaryMinus" && (ee.oper = "-"),
              (te.op === "+" || te.fn === "subtract") &&
                ((ee.fire = ""),
                (ee.cte = 1),
                (ee.oper = xe === 0 ? "+" : te.op)),
              (ee.noFil = xe),
              ie(te.args[xe], te, ee);
        } else if (de === "SymbolNode") {
          if (te.name !== T && T !== "")
            throw new Error("There is more than one variable");
          if (((T = te.name), oe === null)) {
            D[1] = 1;
            return;
          }
          if (oe.op === "^" && ee.noFil !== 0)
            throw new Error(
              "In power the variable should be the first parameter"
            );
          if (oe.op === "*" && ee.noFil !== 1)
            throw new Error(
              "In multiply the variable should be the second parameter"
            );
          (ee.fire === "" || ee.fire === "*") &&
            (R < 1 && (D[1] = 0),
            (D[1] += ee.cte * (ee.oper === "+" ? 1 : -1)),
            (R = Math.max(1, R)));
        } else if (de === "ConstantNode") {
          var ce = parseFloat(te.value);
          if (oe === null) {
            D[0] = ce;
            return;
          }
          if (oe.op === "^") {
            if (ee.noFil !== 1) throw new Error("Constant cannot be powered");
            if (!Ne(ce) || ce <= 0)
              throw new Error("Non-integer exponent is not allowed");
            for (var he = R + 1; he < ce; he++) D[he] = 0;
            ce > R && (D[ce] = 0),
              (D[ce] += ee.cte * (ee.oper === "+" ? 1 : -1)),
              (R = Math.max(ce, R));
            return;
          }
          (ee.cte = ce),
            ee.fire === "" && (D[0] += ee.cte * (ee.oper === "+" ? 1 : -1));
        } else throw new Error("Type " + de + " is not allowed");
      }
    }
  }),
  Iz = "reviver",
  $z = ["classes"],
  zz = F(Iz, $z, (e) => {
    var { classes: r } = e;
    return function (n, i) {
      var a = r[i && i.mathjs];
      return a && typeof a.fromJSON == "function" ? a.fromJSON(i) : i;
    };
  }),
  Rz = "replacer",
  Fz = [],
  Pz = F(
    Rz,
    Fz,
    () =>
      function (r, t) {
        return typeof t == "number" && (!isFinite(t) || isNaN(t))
          ? { mathjs: "number", value: String(t) }
          : t;
      }
  ),
  Lz = "10.6.4",
  kz = F("true", [], () => !0),
  Uz = F("false", [], () => !1),
  qz = F("null", [], () => null),
  Hz = it("Infinity", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? new t(1 / 0) : 1 / 0;
  }),
  Vz = it("NaN", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? new t(NaN) : NaN;
  }),
  Gz = it("pi", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? jc(t) : PM;
  }),
  Wz = it("tau", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? G3(t) : LM;
  }),
  Zz = it("e", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? H3(t) : kM;
  }),
  Qz = it("phi", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? V3(t) : UM;
  }),
  Yz = it("LN2", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? new t(2).ln() : Math.LN2;
  }),
  Xz = it("LN10", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? new t(10).ln() : Math.LN10;
  }),
  jz = it("LOG2E", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? new t(1).div(new t(2).ln()) : Math.LOG2E;
  }),
  Jz = it("LOG10E", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber"
      ? new t(1).div(new t(10).ln())
      : Math.LOG10E;
  }),
  Kz = it("SQRT1_2", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? new t("0.5").sqrt() : Math.SQRT1_2;
  }),
  eR = it("SQRT2", ["config", "?BigNumber"], (e) => {
    var { config: r, BigNumber: t } = e;
    return r.number === "BigNumber" ? new t(2).sqrt() : Math.SQRT2;
  }),
  rR = it("i", ["Complex"], (e) => {
    var { Complex: r } = e;
    return r.I;
  }),
  tR = F("PI", ["pi"], (e) => {
    var { pi: r } = e;
    return r;
  }),
  nR = F("E", ["e"], (e) => {
    var { e: r } = e;
    return r;
  }),
  iR = F("version", [], () => Lz);
function it(e, r, t) {
  return F(e, r, t, { recreateOnConfigChange: !0 });
}
var aR = Oe("speedOfLight", "299792458", "m s^-1"),
  oR = Oe("gravitationConstant", "6.67430e-11", "m^3 kg^-1 s^-2"),
  sR = Oe("planckConstant", "6.62607015e-34", "J s"),
  uR = Oe("reducedPlanckConstant", "1.0545718176461565e-34", "J s"),
  lR = Oe("magneticConstant", "1.25663706212e-6", "N A^-2"),
  cR = Oe("electricConstant", "8.8541878128e-12", "F m^-1"),
  fR = Oe("vacuumImpedance", "376.730313667", "ohm"),
  pR = Oe("coulomb", "8.987551792261171e9", "N m^2 C^-2"),
  mR = Oe("elementaryCharge", "1.602176634e-19", "C"),
  vR = Oe("bohrMagneton", "9.2740100783e-24", "J T^-1"),
  dR = Oe("conductanceQuantum", "7.748091729863649e-5", "S"),
  hR = Oe("inverseConductanceQuantum", "12906.403729652257", "ohm"),
  gR = Oe("magneticFluxQuantum", "2.0678338484619295e-15", "Wb"),
  yR = Oe("nuclearMagneton", "5.0507837461e-27", "J T^-1"),
  xR = Oe("klitzing", "25812.807459304513", "ohm"),
  wR = Oe("bohrRadius", "5.29177210903e-11", "m"),
  bR = Oe("classicalElectronRadius", "2.8179403262e-15", "m"),
  NR = Oe("electronMass", "9.1093837015e-31", "kg"),
  MR = Oe("fermiCoupling", "1.1663787e-5", "GeV^-2"),
  SR = js("fineStructure", 0.0072973525693),
  AR = Oe("hartreeEnergy", "4.3597447222071e-18", "J"),
  ER = Oe("protonMass", "1.67262192369e-27", "kg"),
  CR = Oe("deuteronMass", "3.3435830926e-27", "kg"),
  OR = Oe("neutronMass", "1.6749271613e-27", "kg"),
  TR = Oe("quantumOfCirculation", "3.6369475516e-4", "m^2 s^-1"),
  DR = Oe("rydberg", "10973731.568160", "m^-1"),
  _R = Oe("thomsonCrossSection", "6.6524587321e-29", "m^2"),
  BR = js("weakMixingAngle", 0.2229),
  IR = js("efimovFactor", 22.7),
  $R = Oe("atomicMass", "1.66053906660e-27", "kg"),
  zR = Oe("avogadro", "6.02214076e23", "mol^-1"),
  RR = Oe("boltzmann", "1.380649e-23", "J K^-1"),
  FR = Oe("faraday", "96485.33212331001", "C mol^-1"),
  PR = Oe("firstRadiation", "3.7417718521927573e-16", "W m^2"),
  LR = Oe("loschmidt", "2.686780111798444e25", "m^-3"),
  kR = Oe("gasConstant", "8.31446261815324", "J K^-1 mol^-1"),
  UR = Oe("molarPlanckConstant", "3.990312712893431e-10", "J s mol^-1"),
  qR = Oe("molarVolume", "0.022413969545014137", "m^3 mol^-1"),
  HR = js("sackurTetrode", -1.16487052358),
  VR = Oe("secondRadiation", "0.014387768775039337", "m K"),
  GR = Oe("stefanBoltzmann", "5.67037441918443e-8", "W m^-2 K^-4"),
  WR = Oe("wienDisplacement", "2.897771955e-3", "m K"),
  ZR = Oe("molarMass", "0.99999999965e-3", "kg mol^-1"),
  QR = Oe("molarMassC12", "11.9999999958e-3", "kg mol^-1"),
  YR = Oe("gravity", "9.80665", "m s^-2"),
  XR = Oe("planckLength", "1.616255e-35", "m"),
  jR = Oe("planckMass", "2.176435e-8", "kg"),
  JR = Oe("planckTime", "5.391245e-44", "s"),
  KR = Oe("planckCharge", "1.87554603778e-18", "C"),
  e6 = Oe("planckTemperature", "1.416785e+32", "K");
function Oe(e, r, t) {
  var n = ["config", "Unit", "BigNumber"];
  return F(e, n, (i) => {
    var { config: a, Unit: s, BigNumber: f } = i,
      l = a.number === "BigNumber" ? new f(r) : parseFloat(r),
      p = new s(l, t);
    return (p.fixPrefix = !0), p;
  });
}
function js(e, r) {
  var t = ["config", "BigNumber"];
  return F(e, t, (n) => {
    var { config: i, BigNumber: a } = n;
    return i.number === "BigNumber" ? new a(r) : r;
  });
}
var r6 = "apply",
  t6 = ["typed", "isInteger"],
  n6 = F(
    r6,
    t6,
    (e) => {
      var { typed: r, isInteger: t } = e,
        n = w1({ typed: r, isInteger: t });
      return r("apply", {
        "...any": function (a) {
          var s = a[1];
          $e(s) ? (a[1] = s - 1) : Be(s) && (a[1] = s.minus(1));
          try {
            return n.apply(null, a);
          } catch (f) {
            throw kr(f);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  i6 = "column",
  a6 = ["typed", "Index", "matrix", "range"],
  o6 = F(
    i6,
    a6,
    (e) => {
      var { typed: r, Index: t, matrix: n, range: i } = e,
        a = S1({ typed: r, Index: t, matrix: n, range: i });
      return r("column", {
        "...any": function (f) {
          var l = f.length - 1,
            p = f[l];
          $e(p) && (f[l] = p - 1);
          try {
            return a.apply(null, f);
          } catch (u) {
            throw kr(u);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  );
function ef(e, r, t) {
  var n = e.filter(function (f) {
    return gr(f) && !(f.name in r) && !t.has(f.name);
  })[0];
  if (!n)
    throw new Error(
      'No undefined variable found in inline expression "' + e + '"'
    );
  var i = n.name,
    a = da(t),
    s = e.compile();
  return function (l) {
    return a.set(i, l), s.evaluate(a);
  };
}
var s6 = "filter",
  u6 = ["typed"],
  l6 = F(
    s6,
    u6,
    (e) => {
      var { typed: r } = e;
      function t(i, a, s) {
        var f, l;
        return (
          i[0] && (f = i[0].compile().evaluate(s)),
          i[1] &&
            (gr(i[1]) || Qi(i[1])
              ? (l = i[1].compile().evaluate(s))
              : (l = ef(i[1], a, s))),
          n(f, l)
        );
      }
      t.rawArgs = !0;
      var n = r("filter", {
        "Array, function": wh,
        "Matrix, function": function (a, s) {
          return a.create(wh(a.toArray(), s));
        },
        "Array, RegExp": fs,
        "Matrix, RegExp": function (a, s) {
          return a.create(fs(a.toArray(), s));
        },
      });
      return t;
    },
    { isTransformFunction: !0 }
  );
function wh(e, r) {
  var t = Ji(r);
  return o0(e, function (n, i, a) {
    return t === 1 ? r(n) : t === 2 ? r(n, [i + 1]) : r(n, [i + 1], a);
  });
}
var c6 = "forEach",
  f6 = ["typed"],
  p6 = F(
    c6,
    f6,
    (e) => {
      var { typed: r } = e;
      function t(i, a, s) {
        var f, l;
        return (
          i[0] && (f = i[0].compile().evaluate(s)),
          i[1] &&
            (gr(i[1]) || Qi(i[1])
              ? (l = i[1].compile().evaluate(s))
              : (l = ef(i[1], a, s))),
          n(f, l)
        );
      }
      t.rawArgs = !0;
      var n = r("forEach", {
        "Array | Matrix, function": function (a, s) {
          var f = Ji(s),
            l = function p(u, o) {
              Array.isArray(u)
                ? Us(u, function (c, m) {
                    p(c, o.concat(m + 1));
                  })
                : f === 1
                ? s(u)
                : f === 2
                ? s(u, o)
                : s(u, o, a);
            };
          l(a.valueOf(), []);
        },
      });
      return t;
    },
    { isTransformFunction: !0 }
  ),
  m6 = "index",
  v6 = ["Index"],
  d6 = F(
    m6,
    v6,
    (e) => {
      var { Index: r } = e;
      return function () {
        for (var n = [], i = 0, a = arguments.length; i < a; i++) {
          var s = arguments[i];
          if (Ka(s)) s.start--, (s.end -= s.step > 0 ? 0 : 2);
          else if (s && s.isSet === !0)
            s = s.map(function (l) {
              return l - 1;
            });
          else if (He(s) || Ae(s))
            s = s.map(function (l) {
              return l - 1;
            });
          else if ($e(s)) s--;
          else if (Be(s)) s = s.toNumber() - 1;
          else if (typeof s != "string")
            throw new TypeError(
              "Dimension must be an Array, Matrix, number, string, or Range"
            );
          n[i] = s;
        }
        var f = new r();
        return r.apply(f, n), f;
      };
    },
    { isTransformFunction: !0 }
  ),
  h6 = "map",
  g6 = ["typed"],
  y6 = F(
    h6,
    g6,
    (e) => {
      var { typed: r } = e;
      function t(i, a, s) {
        var f, l;
        return (
          i[0] && (f = i[0].compile().evaluate(s)),
          i[1] &&
            (gr(i[1]) || Qi(i[1])
              ? (l = i[1].compile().evaluate(s))
              : (l = ef(i[1], a, s))),
          n(f, l)
        );
      }
      t.rawArgs = !0;
      var n = r("map", {
        "Array, function": function (a, s) {
          return bh(a, s, a);
        },
        "Matrix, function": function (a, s) {
          return a.create(bh(a.valueOf(), s, a));
        },
      });
      return t;
    },
    { isTransformFunction: !0 }
  );
function bh(e, r, t) {
  var n = Ji(r);
  function i(a, s) {
    return Array.isArray(a)
      ? Zt(a, function (f, l) {
          return i(f, s.concat(l + 1));
        })
      : n === 1
      ? r(a)
      : n === 2
      ? r(a, s)
      : r(a, s, t);
  }
  return i(e, []);
}
function ni(e) {
  if (e.length === 2 && Jn(e[0])) {
    e = e.slice();
    var r = e[1];
    $e(r) ? (e[1] = r - 1) : Be(r) && (e[1] = r.minus(1));
  }
  return e;
}
var x6 = "max",
  w6 = ["typed", "config", "numeric", "larger"],
  b6 = F(
    x6,
    w6,
    (e) => {
      var { typed: r, config: t, numeric: n, larger: i } = e,
        a = _1({ typed: r, config: t, numeric: n, larger: i });
      return r("max", {
        "...any": function (f) {
          f = ni(f);
          try {
            return a.apply(null, f);
          } catch (l) {
            throw kr(l);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  N6 = "mean",
  M6 = ["typed", "add", "divide"],
  S6 = F(
    N6,
    M6,
    (e) => {
      var { typed: r, add: t, divide: n } = e,
        i = U1({ typed: r, add: t, divide: n });
      return r("mean", {
        "...any": function (s) {
          s = ni(s);
          try {
            return i.apply(null, s);
          } catch (f) {
            throw kr(f);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  A6 = "min",
  E6 = ["typed", "config", "numeric", "smaller"],
  C6 = F(
    A6,
    E6,
    (e) => {
      var { typed: r, config: t, numeric: n, smaller: i } = e,
        a = B1({ typed: r, config: t, numeric: n, smaller: i });
      return r("min", {
        "...any": function (f) {
          f = ni(f);
          try {
            return a.apply(null, f);
          } catch (l) {
            throw kr(l);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  O6 = "range",
  T6 = [
    "typed",
    "config",
    "?matrix",
    "?bignumber",
    "smaller",
    "smallerEq",
    "larger",
    "largerEq",
  ],
  D6 = F(
    O6,
    T6,
    (e) => {
      var {
          typed: r,
          config: t,
          matrix: n,
          bignumber: i,
          smaller: a,
          smallerEq: s,
          larger: f,
          largerEq: l,
        } = e,
        p = O1({
          typed: r,
          config: t,
          matrix: n,
          bignumber: i,
          smaller: a,
          smallerEq: s,
          larger: f,
          largerEq: l,
        });
      return r("range", {
        "...any": function (o) {
          var c = o.length - 1,
            m = o[c];
          return typeof m != "boolean" && o.push(!0), p.apply(null, o);
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  _6 = "row",
  B6 = ["typed", "Index", "matrix", "range"],
  I6 = F(
    _6,
    B6,
    (e) => {
      var { typed: r, Index: t, matrix: n, range: i } = e,
        a = T1({ typed: r, Index: t, matrix: n, range: i });
      return r("row", {
        "...any": function (f) {
          var l = f.length - 1,
            p = f[l];
          $e(p) && (f[l] = p - 1);
          try {
            return a.apply(null, f);
          } catch (u) {
            throw kr(u);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  $6 = "subset",
  z6 = ["typed", "matrix"],
  R6 = F(
    $6,
    z6,
    (e) => {
      var { typed: r, matrix: t } = e,
        n = D1({ typed: r, matrix: t });
      return r("subset", {
        "...any": function (a) {
          try {
            return n.apply(null, a);
          } catch (s) {
            throw kr(s);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  F6 = "concat",
  P6 = ["typed", "matrix", "isInteger"],
  L6 = F(
    F6,
    P6,
    (e) => {
      var { typed: r, matrix: t, isInteger: n } = e,
        i = N1({ typed: r, matrix: t, isInteger: n });
      return r("concat", {
        "...any": function (s) {
          var f = s.length - 1,
            l = s[f];
          $e(l) ? (s[f] = l - 1) : Be(l) && (s[f] = l.minus(1));
          try {
            return i.apply(null, s);
          } catch (p) {
            throw kr(p);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  Nh = "diff",
  k6 = ["typed", "matrix", "subtract", "number", "bignumber"],
  U6 = F(
    Nh,
    k6,
    (e) => {
      var { typed: r, matrix: t, subtract: n, number: i, bignumber: a } = e,
        s = A1({ typed: r, matrix: t, subtract: n, number: i, bignumber: a });
      return r(Nh, {
        "...any": function (l) {
          l = ni(l);
          try {
            return s.apply(null, l);
          } catch (p) {
            throw kr(p);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  q6 = "std",
  H6 = ["typed", "sqrt", "variance"],
  V6 = F(
    q6,
    H6,
    (e) => {
      var { typed: r, sqrt: t, variance: n } = e,
        i = H1({ typed: r, sqrt: t, variance: n });
      return r("std", {
        "...any": function (s) {
          s = ni(s);
          try {
            return i.apply(null, s);
          } catch (f) {
            throw kr(f);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  Mh = "sum",
  G6 = ["typed", "config", "add", "numeric"],
  W6 = F(
    Mh,
    G6,
    (e) => {
      var { typed: r, config: t, add: n, numeric: i } = e,
        a = L1({ typed: r, config: t, add: n, numeric: i });
      return r(Mh, {
        "...any": function (f) {
          f = ni(f);
          try {
            return a.apply(null, f);
          } catch (l) {
            throw kr(l);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  Sh = "cumsum",
  Z6 = ["typed", "add", "unaryPlus"],
  Q6 = F(
    Sh,
    Z6,
    (e) => {
      var { typed: r, add: t, unaryPlus: n } = e,
        i = k1({ typed: r, add: t, unaryPlus: n });
      return r(Sh, {
        "...any": function (s) {
          if (s.length === 2 && Jn(s[0])) {
            var f = s[1];
            $e(f) ? (s[1] = f - 1) : Be(f) && (s[1] = f.minus(1));
          }
          try {
            return i.apply(null, s);
          } catch (l) {
            throw kr(l);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  Ah = "variance",
  Y6 = ["typed", "add", "subtract", "multiply", "divide", "apply", "isNaN"],
  X6 = F(
    Ah,
    Y6,
    (e) => {
      var {
          typed: r,
          add: t,
          subtract: n,
          multiply: i,
          divide: a,
          apply: s,
          isNaN: f,
        } = e,
        l = q1({
          typed: r,
          add: t,
          subtract: n,
          multiply: i,
          divide: a,
          apply: s,
          isNaN: f,
        });
      return r(Ah, {
        "...any": function (u) {
          u = ni(u);
          try {
            return l.apply(null, u);
          } catch (o) {
            throw kr(o);
          }
        },
      });
    },
    { isTransformFunction: !0 }
  ),
  j6 = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        createTyped: hN,
        createResultSet: wN,
        createBigNumberClass: hM,
        createComplexClass: xM,
        createFractionClass: NM,
        createRangeClass: AM,
        createMatrixClass: OM,
        createDenseMatrixClass: _M,
        createClone: IM,
        createIsInteger: zM,
        createIsNegative: WM,
        createIsNumeric: QM,
        createHasNumericValue: XM,
        createIsPositive: JM,
        createIsZero: e2,
        createIsNaN: t2,
        createTypeOf: i2,
        createEqualScalar: s2,
        createSparseMatrixClass: c2,
        createNumber: d2,
        createString: g2,
        createBoolean: x2,
        createBignumber: N2,
        createComplex: A2,
        createFraction: O2,
        createMatrix: D2,
        createMatrixFromFunction: B2,
        createMatrixFromRows: $2,
        createMatrixFromColumns: R2,
        createSplitUnit: P2,
        createUnaryMinus: k2,
        createUnaryPlus: q2,
        createAbs: V2,
        createApply: w1,
        createAddScalar: Q2,
        createCbrt: X2,
        createCeil: aS,
        createCube: sS,
        createExp: lS,
        createExpm1: fS,
        createFix: vS,
        createFloor: gS,
        createGcd: CS,
        createLcm: IS,
        createLog10: zS,
        createLog2: FS,
        createMod: HS,
        createMultiplyScalar: WS,
        createMultiply: QS,
        createNthRoot: XS,
        createSign: JS,
        createSqrt: rA,
        createSquare: nA,
        createSubtract: aA,
        createXgcd: sA,
        createInvmod: lA,
        createDotMultiply: mA,
        createBitAnd: wA,
        createBitNot: NA,
        createBitOr: SA,
        createBitXor: OA,
        createArg: DA,
        createConj: BA,
        createIm: $A,
        createRe: RA,
        createNot: PA,
        createOr: kA,
        createXor: qA,
        createConcat: N1,
        createColumn: S1,
        createCount: WA,
        createCross: QA,
        createDiag: XA,
        createFilter: eE,
        createFlatten: tE,
        createForEach: iE,
        createGetMatrixDataType: sE,
        createIdentity: lE,
        createKron: fE,
        createMap: mE,
        createDiff: A1,
        createOnes: yE,
        createRange: O1,
        createReshape: bE,
        createResize: SE,
        createRotate: EE,
        createRotationMatrix: OE,
        createRow: T1,
        createSize: _E,
        createSqueeze: IE,
        createSubset: D1,
        createTranspose: kE,
        createCtranspose: qE,
        createZeros: VE,
        createFft: WE,
        createIfft: QE,
        createErf: jE,
        createMode: tC,
        createProd: iC,
        createFormat: oC,
        createBin: uC,
        createOct: cC,
        createHex: pC,
        createPrint: vC,
        createTo: hC,
        createIsPrime: yC,
        createNumeric: bC,
        createDivideScalar: MC,
        createPow: AC,
        createRound: CC,
        createLog: TC,
        createLog1p: _C,
        createNthRoots: IC,
        createDotPow: zC,
        createDotDivide: FC,
        createLsolve: LC,
        createUsolve: UC,
        createLsolveAll: HC,
        createUsolveAll: GC,
        createLeftShift: YC,
        createRightArithShift: jC,
        createRightLogShift: KC,
        createAnd: r3,
        createCompare: n3,
        createCompareNatural: a3,
        createCompareText: u3,
        createEqual: c3,
        createEqualText: p3,
        createSmaller: v3,
        createSmallerEq: h3,
        createLarger: y3,
        createLargerEq: w3,
        createDeepEqual: N3,
        createUnequal: S3,
        createPartitionSelect: E3,
        createSort: O3,
        createMax: _1,
        createMin: B1,
        createImmutableDenseMatrixClass: I3,
        createIndexClass: R3,
        createFibonacciHeapClass: L3,
        createSpaClass: q3,
        createUnitClass: Q3,
        createUnitFunction: X3,
        createSparse: J3,
        createCreateUnit: eO,
        createAcos: tO,
        createAcosh: iO,
        createAcot: oO,
        createAcoth: uO,
        createAcsc: cO,
        createAcsch: pO,
        createAsec: vO,
        createAsech: hO,
        createAsin: yO,
        createAsinh: bO,
        createAtan: SO,
        createAtan2: EO,
        createAtanh: OO,
        createCos: DO,
        createCosh: BO,
        createCot: $O,
        createCoth: RO,
        createCsc: PO,
        createCsch: kO,
        createSec: qO,
        createSech: VO,
        createSin: WO,
        createSinh: QO,
        createTan: XO,
        createTanh: KO,
        createSetCartesian: r4,
        createSetDifference: n4,
        createSetDistinct: a4,
        createSetIntersect: s4,
        createSetIsSubset: l4,
        createSetMultiplicity: f4,
        createSetPowerset: m4,
        createSetSize: d4,
        createSetSymDifference: g4,
        createSetUnion: x4,
        createAdd: b4,
        createHypot: M4,
        createNorm: A4,
        createDot: C4,
        createTrace: D4,
        createIndex: B4,
        createNode: z4,
        createAccessorNode: P4,
        createArrayNode: U4,
        createAssignmentNode: G4,
        createBlockNode: Q4,
        createConditionalNode: j4,
        createConstantNode: oT,
        createFunctionAssignmentNode: lT,
        createIndexNode: pT,
        createObjectNode: dT,
        createOperatorNode: yT,
        createParenthesisNode: bT,
        createRangeNode: ST,
        createRelationalNode: CT,
        createSymbolNode: DT,
        createFunctionNode: IT,
        createParse: zT,
        createCompile: FT,
        createEvaluate: LT,
        createParserClass: qT,
        createParser: VT,
        createLup: WT,
        createQr: QT,
        createSlu: yD,
        createLusolve: wD,
        createHelpClass: MD,
        createChainClass: ED,
        createHelp: VI,
        createChain: WI,
        createDet: QI,
        createInv: XI,
        createPinv: JI,
        createEigs: n$,
        createExpm: a$,
        createSqrtm: s$,
        createDivide: c$,
        createDistance: p$,
        createIntersect: d$,
        createSum: L1,
        createCumSum: k1,
        createMean: U1,
        createMedian: w$,
        createMad: N$,
        createVariance: q1,
        createQuantileSeq: E$,
        createStd: H1,
        createCombinations: T$,
        createCombinationsWithRep: _$,
        createGamma: I$,
        createLgamma: z$,
        createFactorial: F$,
        createKldivergence: L$,
        createMultinomial: U$,
        createPermutations: H$,
        createPickRandom: J$,
        createRandom: ez,
        createRandomInt: tz,
        createStirlingS2: iz,
        createBellNumbers: oz,
        createCatalan: uz,
        createComposition: cz,
        createLeafCount: pz,
        createSimplify: xz,
        createSimplifyCore: Nz,
        createResolve: Az,
        createSymbolicEqual: Cz,
        createDerivative: Dz,
        createRationalize: Bz,
        createReviver: zz,
        createReplacer: Pz,
        createE: Zz,
        createUppercaseE: nR,
        createFalse: Uz,
        createI: rR,
        createInfinity: Hz,
        createLN10: Xz,
        createLN2: Yz,
        createLOG10E: Jz,
        createLOG2E: jz,
        createNaN: Vz,
        createNull: qz,
        createPhi: Qz,
        createPi: Gz,
        createUppercasePi: tR,
        createSQRT1_2: Kz,
        createSQRT2: eR,
        createTau: Wz,
        createTrue: kz,
        createVersion: iR,
        createAtomicMass: $R,
        createAvogadro: zR,
        createBohrMagneton: vR,
        createBohrRadius: wR,
        createBoltzmann: RR,
        createClassicalElectronRadius: bR,
        createConductanceQuantum: dR,
        createCoulomb: pR,
        createDeuteronMass: CR,
        createEfimovFactor: IR,
        createElectricConstant: cR,
        createElectronMass: NR,
        createElementaryCharge: mR,
        createFaraday: FR,
        createFermiCoupling: MR,
        createFineStructure: SR,
        createFirstRadiation: PR,
        createGasConstant: kR,
        createGravitationConstant: oR,
        createGravity: YR,
        createHartreeEnergy: AR,
        createInverseConductanceQuantum: hR,
        createKlitzing: xR,
        createLoschmidt: LR,
        createMagneticConstant: lR,
        createMagneticFluxQuantum: gR,
        createMolarMass: ZR,
        createMolarMassC12: QR,
        createMolarPlanckConstant: UR,
        createMolarVolume: qR,
        createNeutronMass: OR,
        createNuclearMagneton: yR,
        createPlanckCharge: KR,
        createPlanckConstant: sR,
        createPlanckLength: XR,
        createPlanckMass: jR,
        createPlanckTemperature: e6,
        createPlanckTime: JR,
        createProtonMass: ER,
        createQuantumOfCirculation: TR,
        createReducedPlanckConstant: uR,
        createRydberg: DR,
        createSackurTetrode: HR,
        createSecondRadiation: VR,
        createSpeedOfLight: aR,
        createStefanBoltzmann: GR,
        createThomsonCrossSection: _R,
        createVacuumImpedance: fR,
        createWeakMixingAngle: BR,
        createWienDisplacement: WR,
        createApplyTransform: n6,
        createColumnTransform: o6,
        createFilterTransform: l6,
        createForEachTransform: p6,
        createIndexTransform: d6,
        createMapTransform: y6,
        createMaxTransform: b6,
        createMeanTransform: S6,
        createMinTransform: C6,
        createRangeTransform: D6,
        createRowTransform: I6,
        createSubsetTransform: R6,
        createConcatTransform: L6,
        createDiffTransform: U6,
        createStdTransform: V6,
        createSumTransform: W6,
        createCumSumTransform: Q6,
        createVarianceTransform: X6,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  J6 = j6,
  rf = { exports: {} };
function tf() {}
tf.prototype = {
  on: function (e, r, t) {
    var n = this.e || (this.e = {});
    return (n[e] || (n[e] = [])).push({ fn: r, ctx: t }), this;
  },
  once: function (e, r, t) {
    var n = this;
    function i() {
      n.off(e, i), r.apply(t, arguments);
    }
    return (i._ = r), this.on(e, i, t);
  },
  emit: function (e) {
    var r = [].slice.call(arguments, 1),
      t = ((this.e || (this.e = {}))[e] || []).slice(),
      n = 0,
      i = t.length;
    for (n; n < i; n++) t[n].fn.apply(t[n].ctx, r);
    return this;
  },
  off: function (e, r) {
    var t = this.e || (this.e = {}),
      n = t[e],
      i = [];
    if (n && r)
      for (var a = 0, s = n.length; a < s; a++)
        n[a].fn !== r && n[a].fn._ !== r && i.push(n[a]);
    return i.length ? (t[e] = i) : delete t[e], this;
  },
};
rf.exports = tf;
rf.exports.TinyEmitter = tf;
var K6 = rf.exports;
function eF(e) {
  var r = new K6();
  return (
    (e.on = r.on.bind(r)),
    (e.off = r.off.bind(r)),
    (e.once = r.once.bind(r)),
    (e.emit = r.emit.bind(r)),
    e
  );
}
function rF(e, r, t, n) {
  function i(g, w) {
    var h = arguments.length;
    if (h !== 1 && h !== 2) throw new zn("import", h, 1, 2);
    w || (w = {});
    function x(S, E, M) {
      if (Array.isArray(E)) E.forEach((I) => x(S, I));
      else if (typeof E == "object") for (var _ in E) ge(E, _) && x(S, E[_], _);
      else if (Aa(E) || M !== void 0) {
        var C = Aa(E) ? (d(E) ? E.fn + ".transform" : E.fn) : M;
        if (ge(S, C) && S[C] !== E && !w.silent)
          throw new Error('Cannot import "' + C + '" twice');
        S[C] = E;
      } else if (!w.silent)
        throw new TypeError("Factory, Object, or Array expected");
    }
    var b = {};
    x(b, g);
    for (var y in b)
      if (ge(b, y)) {
        var A = b[y];
        if (Aa(A)) p(A, w);
        else if (u(A)) a(y, A, w);
        else if (!w.silent)
          throw new TypeError("Factory, Object, or Array expected");
      }
  }
  function a(g, w, h) {
    if (
      (h.wrap && typeof w == "function" && (w = l(w)),
      c(w) && (w = e(g, { [w.signature]: w })),
      o(t[g]) && o(w))
    ) {
      h.override ? (w = e(g, w.signatures)) : (w = e(t[g], w)),
        (t[g] = w),
        delete n[g],
        s(g, w),
        t.emit("import", g, function () {
          return w;
        });
      return;
    }
    if (t[g] === void 0 || h.override) {
      (t[g] = w),
        delete n[g],
        s(g, w),
        t.emit("import", g, function () {
          return w;
        });
      return;
    }
    if (!h.silent) throw new Error('Cannot import "' + g + '": already exists');
  }
  function s(g, w) {
    w && typeof w.transform == "function"
      ? ((t.expression.transform[g] = w.transform),
        m(g) && (t.expression.mathWithTransform[g] = w.transform))
      : (delete t.expression.transform[g],
        m(g) && (t.expression.mathWithTransform[g] = w));
  }
  function f(g) {
    delete t.expression.transform[g],
      m(g)
        ? (t.expression.mathWithTransform[g] = t[g])
        : delete t.expression.mathWithTransform[g];
  }
  function l(g) {
    var w = function () {
      for (var x = [], b = 0, y = arguments.length; b < y; b++) {
        var A = arguments[b];
        x[b] = A && A.valueOf();
      }
      return g.apply(t, x);
    };
    return g.transform && (w.transform = g.transform), w;
  }
  function p(g, w) {
    var h =
      arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : g.fn;
    if (Np(h, "."))
      throw new Error(
        "Factory name should not contain a nested path. Name: " +
          JSON.stringify(h)
      );
    var x = d(g) ? t.expression.transform : t,
      b = h in t.expression.transform,
      y = ge(x, h) ? x[h] : void 0,
      A = function () {
        var E = {};
        g.dependencies.map(s0).forEach((_) => {
          if (Np(_, "."))
            throw new Error(
              "Factory dependency should not contain a nested path. Name: " +
                JSON.stringify(_)
            );
          _ === "math"
            ? (E.math = t)
            : _ === "mathWithTransform"
            ? (E.mathWithTransform = t.expression.mathWithTransform)
            : _ === "classes"
            ? (E.classes = t)
            : (E[_] = t[_]);
        });
        var M = g(E);
        if (M && typeof M.transform == "function")
          throw new Error(
            'Transforms cannot be attached to factory functions. Please create a separate function for it with exports.path="expression.transform"'
          );
        if (y === void 0 || w.override) return M;
        if (o(y) && o(M)) return e(y, M);
        if (w.silent) return y;
        throw new Error('Cannot import "' + h + '": already exists');
      };
    !g.meta || g.meta.lazy !== !1
      ? (Po(x, h, A),
        y && b
          ? f(h)
          : (d(g) || v(g)) && Po(t.expression.mathWithTransform, h, () => x[h]))
      : ((x[h] = A()),
        y && b
          ? f(h)
          : (d(g) || v(g)) &&
            Po(t.expression.mathWithTransform, h, () => x[h])),
      (n[h] = g),
      t.emit("import", h, A);
  }
  function u(g) {
    return (
      typeof g == "function" ||
      typeof g == "number" ||
      typeof g == "string" ||
      typeof g == "boolean" ||
      g === null ||
      jn(g) ||
      Nt(g) ||
      Be(g) ||
      Bn(g) ||
      Ae(g) ||
      Array.isArray(g)
    );
  }
  function o(g) {
    return typeof g == "function" && typeof g.signatures == "object";
  }
  function c(g) {
    return typeof g == "function" && typeof g.signature == "string";
  }
  function m(g) {
    return !ge(N, g);
  }
  function v(g) {
    return (
      g.fn.indexOf(".") === -1 && !ge(N, g.fn) && (!g.meta || !g.meta.isClass)
    );
  }
  function d(g) {
    return (
      (g !== void 0 &&
        g.meta !== void 0 &&
        g.meta.isTransformFunction === !0) ||
      !1
    );
  }
  var N = {
    expression: !0,
    type: !0,
    docs: !0,
    error: !0,
    json: !0,
    chain: !0,
  };
  return i;
}
function K1(e, r) {
  var t = jr({}, Fy, r);
  if (typeof Object.create != "function")
    throw new Error(
      "ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility."
    );
  var n = eF({
    isNumber: $e,
    isComplex: Nt,
    isBigNumber: Be,
    isFraction: Bn,
    isUnit: jn,
    isString: $r,
    isArray: He,
    isMatrix: Ae,
    isCollection: Jn,
    isDenseMatrix: Ha,
    isSparseMatrix: fn,
    isRange: Ka,
    isIndex: Zi,
    isBoolean: Py,
    isResultSet: Fc,
    isHelp: Rs,
    isFunction: Ly,
    isDate: ky,
    isRegExp: Uy,
    isObject: Fs,
    isNull: qy,
    isUndefined: Hy,
    isAccessorNode: Sn,
    isArrayNode: Xr,
    isAssignmentNode: Vy,
    isBlockNode: Gy,
    isConditionalNode: Wy,
    isConstantNode: Ve,
    isFunctionAssignmentNode: Qi,
    isFunctionNode: An,
    isIndexNode: Kn,
    isNode: Le,
    isObjectNode: eo,
    isOperatorNode: Ir,
    isParenthesisNode: Yi,
    isRangeNode: Zy,
    isSymbolNode: gr,
    isChain: Ps,
  });
  (n.config = Fb(t, n.emit)),
    (n.expression = { transform: {}, mathWithTransform: { config: n.config } });
  var i = [],
    a = [];
  function s(u) {
    if (Aa(u)) return u(n);
    var o = u[Object.keys(u)[0]];
    if (Aa(o)) return o(n);
    if (!zb(u))
      throw (
        (console.warn(
          "Factory object with properties `type`, `name`, and `factory` expected",
          u
        ),
        new Error(
          "Factory object with properties `type`, `name`, and `factory` expected"
        ))
      );
    var c = i.indexOf(u),
      m;
    return (
      c === -1
        ? (u.math === !0
            ? (m = u.factory(n.type, t, s, n.typed, n))
            : (m = u.factory(n.type, t, s, n.typed)),
          i.push(u),
          a.push(m))
        : (m = a[c]),
      m
    );
  }
  var f = {};
  function l() {
    for (var u = arguments.length, o = new Array(u), c = 0; c < u; c++)
      o[c] = arguments[c];
    return n.typed.apply(n.typed, o);
  }
  var p = rF(l, s, n, f);
  return (
    (n.import = p),
    n.on("config", () => {
      vp(f).forEach((u) => {
        u && u.meta && u.meta.recreateOnConfigChange && p(u, { override: !0 });
      });
    }),
    (n.create = K1.bind(null, e)),
    (n.factory = F),
    n.import(vp($b(e))),
    (n.ArgumentsError = zn),
    (n.DimensionError = De),
    (n.IndexError = vt),
    n
  );
}
var nf = { exports: {} },
  Js = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var tF = _i.exports,
  nF = Symbol.for("react.element"),
  iF = Symbol.for("react.fragment"),
  aF = Object.prototype.hasOwnProperty,
  oF = tF.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  sF = { key: !0, ref: !0, __self: !0, __source: !0 };
function ex(e, r, t) {
  var n,
    i = {},
    a = null,
    s = null;
  t !== void 0 && (a = "" + t),
    r.key !== void 0 && (a = "" + r.key),
    r.ref !== void 0 && (s = r.ref);
  for (n in r) aF.call(r, n) && !sF.hasOwnProperty(n) && (i[n] = r[n]);
  if (e && e.defaultProps)
    for (n in ((r = e.defaultProps), r)) i[n] === void 0 && (i[n] = r[n]);
  return {
    $$typeof: nF,
    type: e,
    key: a,
    ref: s,
    props: i,
    _owner: oF.current,
  };
}
Js.Fragment = iF;
Js.jsx = ex;
Js.jsxs = ex;
nf.exports = Js;
const ur = nf.exports.jsx,
  ua = nf.exports.jsxs;
function uF() {
  var [e, r] = _i.exports.useState(""),
    [t, n] = _i.exports.useState("");
  function i() {
    t = "";
    var l = K1(J6, {}).evaluate(e);
    n(t + e + " = "), r(l);
  }
  function a() {
    r(""), n("");
  }
  return ua("div", {
    className: "App",
    children: [
      ua("div", {
        className: "calculator_answer",
        children: [
          ua("i", { children: [" ", t, " "] }),
          ua("p", { children: [" ", e, " "] }),
        ],
      }),
      ua("div", {
        className: "calculator_buttons",
        children: [
          ur("button", { onClick: () => r((e += "(")), children: "(" }),
          ur("button", { onClick: () => r((e += ")")), children: ")" }),
          ur("button", { onClick: () => r((e += "%")), children: "%" }),
          ur("button", { onClick: a, children: "C" }),
          ur("button", { onClick: () => r((e += 7)), children: "7" }),
          ur("button", { onClick: () => r((e += 8)), children: "8" }),
          ur("button", { onClick: () => r((e += 9)), children: "9" }),
          ur("button", { onClick: () => r((e += "/")), children: "\xF7" }),
          ur("button", { onClick: () => r((e += 4)), children: "4" }),
          ur("button", { onClick: () => r((e += 5)), children: "5" }),
          ur("button", { onClick: () => r((e += 6)), children: "6" }),
          ur("button", { onClick: () => r((e += "*")), children: "x" }),
          ur("button", { onClick: () => r((e += 1)), children: "1" }),
          ur("button", { onClick: () => r((e += 2)), children: "2" }),
          ur("button", { onClick: () => r((e += 3)), children: "3" }),
          ur("button", { onClick: () => r((e += "-")), children: "-" }),
          ur("button", { onClick: () => r((e += 0)), children: "0" }),
          ur("button", { onClick: () => r((e += ".")), children: "." }),
          ur("button", { onClick: i, children: "=" }),
          ur("button", { onClick: () => r((e += "+")), children: "+" }),
        ],
      }),
    ],
  });
}
zu.createRoot(document.getElementById("root")).render(
  ur(_x.StrictMode, { children: ur(uF, {}) })
);
